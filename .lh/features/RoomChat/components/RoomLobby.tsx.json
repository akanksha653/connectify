{
    "sourceFile": "features/RoomChat/components/RoomLobby.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 5,
            "patches": [
                {
                    "date": 1760267480950,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1760274046395,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,24 +1,25 @@\n-// features/RoomSystem/components/RoomLobby.tsx\r\n+\"use client\";\r\n+\r\n import React, { useEffect, useState } from \"react\";\r\n+import Link from \"next/link\";\r\n import { useRoomSocket } from \"../hooks/useRoomSocket\";\r\n import { fetchRooms } from \"../services/roomService\";\r\n \r\n export default function RoomLobby() {\r\n-  const { rooms, createRoom, joinRoom, connected } = useRoomSocket();\r\n-  const [localRooms, setLocalRooms] = useState(rooms);\r\n+  const { rooms, createRoom, connected } = useRoomSocket();\r\n   const [name, setName] = useState(\"\");\r\n   const [topic, setTopic] = useState(\"\");\r\n \r\n+  // Fetch initial rooms via REST as fallback\r\n   useEffect(() => {\r\n-    setLocalRooms(rooms);\r\n+    fetchRooms()\r\n+      .then((r) => r.forEach((room) => {\r\n+        if (!rooms.find((existing) => existing.id === room.id)) rooms.push(room);\r\n+      }))\r\n+      .catch(() => console.warn(\"Failed to fetch rooms via REST.\"));\r\n   }, [rooms]);\r\n \r\n-  useEffect(() => {\r\n-    // initial fetch via REST as fallback\r\n-    fetchRooms().then((r) => setLocalRooms(r)).catch(() => {});\r\n-  }, []);\r\n-\r\n   const onCreate = () => {\r\n     if (!name || !topic) return;\r\n     createRoom({ name, topic });\r\n     setName(\"\");\r\n@@ -26,28 +27,57 @@\n   };\r\n \r\n   return (\r\n     <div className=\"p-4\">\r\n-      <h2 className=\"text-xl font-bold\">Rooms Lobby {connected ? \"ðŸŸ¢\" : \"ðŸ”´\"}</h2>\r\n+      <h2 className=\"text-xl font-bold\">\r\n+        Rooms Lobby {connected ? \"ðŸŸ¢ Online\" : \"ðŸ”´ Offline\"}\r\n+      </h2>\r\n \r\n-      <div className=\"mt-4 mb-6\">\r\n-        <input value={name} onChange={(e) => setName(e.target.value)} placeholder=\"Room name\" className=\"border p-2 mr-2\" />\r\n-        <input value={topic} onChange={(e) => setTopic(e.target.value)} placeholder=\"Topic\" className=\"border p-2 mr-2\" />\r\n-        <button onClick={onCreate} className=\"bg-blue-600 text-white px-3 py-2 rounded\">Create</button>\r\n+      <div className=\"mt-4 mb-6 flex flex-wrap gap-2\">\r\n+        <input\r\n+          value={name}\r\n+          onChange={(e) => setName(e.target.value)}\r\n+          placeholder=\"Room name\"\r\n+          className=\"border p-2 flex-1 min-w-[150px]\"\r\n+        />\r\n+        <input\r\n+          value={topic}\r\n+          onChange={(e) => setTopic(e.target.value)}\r\n+          placeholder=\"Topic\"\r\n+          className=\"border p-2 flex-1 min-w-[150px]\"\r\n+        />\r\n+        <button\r\n+          onClick={onCreate}\r\n+          className=\"bg-blue-600 text-white px-3 py-2 rounded\"\r\n+        >\r\n+          Create\r\n+        </button>\r\n       </div>\r\n \r\n       <ul className=\"space-y-2\">\r\n-        {localRooms?.length ? localRooms.map((r) => (\r\n-          <li key={r.id} className=\"p-3 border rounded flex justify-between items-center\">\r\n-            <div>\r\n-              <div className=\"font-semibold\">{r.name}</div>\r\n-              <div className=\"text-sm text-gray-500\">{r.topic}</div>\r\n-            </div>\r\n-            <div className=\"flex gap-2\">\r\n-              <a className=\"text-sm text-blue-600\" href={`/rooms/${r.id}`}>Open</a>\r\n-            </div>\r\n-          </li>\r\n-        )) : <li>No rooms yet</li>}\r\n+        {rooms.length ? (\r\n+          rooms.map((room) => (\r\n+            <li\r\n+              key={room.id}\r\n+              className=\"p-3 border rounded flex justify-between items-center\"\r\n+            >\r\n+              <div>\r\n+                <div className=\"font-semibold\">{room.name}</div>\r\n+                <div className=\"text-sm text-gray-500\">\r\n+                  {room.topic} â€¢ {room.users?.length || 0} users\r\n+                </div>\r\n+              </div>\r\n+              <Link\r\n+                className=\"text-sm text-blue-600\"\r\n+                href={`/rooms/${room.id}`}\r\n+              >\r\n+                Open\r\n+              </Link>\r\n+            </li>\r\n+          ))\r\n+        ) : (\r\n+          <li className=\"text-gray-500\">No rooms yet</li>\r\n+        )}\r\n       </ul>\r\n     </div>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1760274150736,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,22 +3,36 @@\n import React, { useEffect, useState } from \"react\";\r\n import Link from \"next/link\";\r\n import { useRoomSocket } from \"../hooks/useRoomSocket\";\r\n import { fetchRooms } from \"../services/roomService\";\r\n+import type { Room } from \"../utils/roomTypes\";\r\n \r\n export default function RoomLobby() {\r\n-  const { rooms, createRoom, connected } = useRoomSocket();\r\n+  const { rooms: socketRooms, createRoom, connected } = useRoomSocket();\r\n+  const [rooms, setRooms] = useState<Room[]>([]);\r\n   const [name, setName] = useState(\"\");\r\n   const [topic, setTopic] = useState(\"\");\r\n \r\n-  // Fetch initial rooms via REST as fallback\r\n+  // Sync socket rooms with local state\r\n   useEffect(() => {\r\n+    setRooms(socketRooms);\r\n+  }, [socketRooms]);\r\n+\r\n+  // Fetch initial rooms via REST as fallback (Firebase)\r\n+  useEffect(() => {\r\n     fetchRooms()\r\n-      .then((r) => r.forEach((room) => {\r\n-        if (!rooms.find((existing) => existing.id === room.id)) rooms.push(room);\r\n-      }))\r\n+      .then((fetchedRooms) => {\r\n+        setRooms((prevRooms) => {\r\n+          // Merge socket rooms and fetched rooms without duplicates\r\n+          const allRooms = [...prevRooms];\r\n+          fetchedRooms.forEach((r) => {\r\n+            if (!allRooms.find((room) => room.id === r.id)) allRooms.push(r);\r\n+          });\r\n+          return allRooms;\r\n+        });\r\n+      })\r\n       .catch(() => console.warn(\"Failed to fetch rooms via REST.\"));\r\n-  }, [rooms]);\r\n+  }, []);\r\n \r\n   const onCreate = () => {\r\n     if (!name || !topic) return;\r\n     createRoom({ name, topic });\r\n@@ -27,13 +41,13 @@\n   };\r\n \r\n   return (\r\n     <div className=\"p-4\">\r\n-      <h2 className=\"text-xl font-bold\">\r\n+      <h2 className=\"text-xl font-bold mb-4\">\r\n         Rooms Lobby {connected ? \"ðŸŸ¢ Online\" : \"ðŸ”´ Offline\"}\r\n       </h2>\r\n \r\n-      <div className=\"mt-4 mb-6 flex flex-wrap gap-2\">\r\n+      <div className=\"mb-6 flex flex-wrap gap-2\">\r\n         <input\r\n           value={name}\r\n           onChange={(e) => setName(e.target.value)}\r\n           placeholder=\"Room name\"\r\n"
                },
                {
                    "date": 1760274261139,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,29 +1,28 @@\n \"use client\";\r\n \r\n-import React, { useEffect, useState } from \"react\";\r\n-import Link from \"next/link\";\r\n+import React, { useState, useEffect } from \"react\";\r\n import { useRoomSocket } from \"../hooks/useRoomSocket\";\r\n-import { fetchRooms } from \"../services/roomService\";\r\n+import CreateRoomModal from \"./CreateRoomModal\";\r\n+import JoinRoomModal from \"./JoinRoomModal\";\r\n import type { Room } from \"../utils/roomTypes\";\r\n \r\n export default function RoomLobby() {\r\n-  const { rooms: socketRooms, createRoom, connected } = useRoomSocket();\r\n+  const { rooms: socketRooms, createRoom, joinRoom, connected } = useRoomSocket();\r\n   const [rooms, setRooms] = useState<Room[]>([]);\r\n-  const [name, setName] = useState(\"\");\r\n-  const [topic, setTopic] = useState(\"\");\r\n+  const [showCreateModal, setShowCreateModal] = useState(false);\r\n+  const [showJoinModal, setShowJoinModal] = useState(false);\r\n \r\n   // Sync socket rooms with local state\r\n   useEffect(() => {\r\n     setRooms(socketRooms);\r\n   }, [socketRooms]);\r\n \r\n-  // Fetch initial rooms via REST as fallback (Firebase)\r\n+  // Fetch initial rooms\r\n   useEffect(() => {\r\n     fetchRooms()\r\n       .then((fetchedRooms) => {\r\n         setRooms((prevRooms) => {\r\n-          // Merge socket rooms and fetched rooms without duplicates\r\n           const allRooms = [...prevRooms];\r\n           fetchedRooms.forEach((r) => {\r\n             if (!allRooms.find((room) => room.id === r.id)) allRooms.push(r);\r\n           });\r\n@@ -32,42 +31,46 @@\n       })\r\n       .catch(() => console.warn(\"Failed to fetch rooms via REST.\"));\r\n   }, []);\r\n \r\n-  const onCreate = () => {\r\n-    if (!name || !topic) return;\r\n-    createRoom({ name, topic });\r\n-    setName(\"\");\r\n-    setTopic(\"\");\r\n+  const handleJoinRoom = (roomId: string) => {\r\n+    joinRoom(roomId, { name: \"Anonymous\" }); // optionally pass user info\r\n   };\r\n \r\n   return (\r\n     <div className=\"p-4\">\r\n       <h2 className=\"text-xl font-bold mb-4\">\r\n         Rooms Lobby {connected ? \"ðŸŸ¢ Online\" : \"ðŸ”´ Offline\"}\r\n       </h2>\r\n \r\n-      <div className=\"mb-6 flex flex-wrap gap-2\">\r\n-        <input\r\n-          value={name}\r\n-          onChange={(e) => setName(e.target.value)}\r\n-          placeholder=\"Room name\"\r\n-          className=\"border p-2 flex-1 min-w-[150px]\"\r\n-        />\r\n-        <input\r\n-          value={topic}\r\n-          onChange={(e) => setTopic(e.target.value)}\r\n-          placeholder=\"Topic\"\r\n-          className=\"border p-2 flex-1 min-w-[150px]\"\r\n-        />\r\n+      <div className=\"flex gap-2 mb-6\">\r\n         <button\r\n-          onClick={onCreate}\r\n-          className=\"bg-blue-600 text-white px-3 py-2 rounded\"\r\n+          onClick={() => setShowCreateModal(true)}\r\n+          className=\"px-4 py-2 bg-blue-600 text-white rounded\"\r\n         >\r\n-          Create\r\n+          Create Room\r\n         </button>\r\n+        <button\r\n+          onClick={() => setShowJoinModal(true)}\r\n+          className=\"px-4 py-2 bg-green-600 text-white rounded\"\r\n+        >\r\n+          Join Room\r\n+        </button>\r\n       </div>\r\n \r\n+      {/* Modals */}\r\n+      <CreateRoomModal\r\n+        isOpen={showCreateModal}\r\n+        onClose={() => setShowCreateModal(false)}\r\n+        onCreate={createRoom}\r\n+      />\r\n+      <JoinRoomModal\r\n+        isOpen={showJoinModal}\r\n+        onClose={() => setShowJoinModal(false)}\r\n+        rooms={rooms}\r\n+        onJoin={handleJoinRoom}\r\n+      />\r\n+\r\n       <ul className=\"space-y-2\">\r\n         {rooms.length ? (\r\n           rooms.map((room) => (\r\n             <li\r\n@@ -79,14 +82,8 @@\n                 <div className=\"text-sm text-gray-500\">\r\n                   {room.topic} â€¢ {room.users?.length || 0} users\r\n                 </div>\r\n               </div>\r\n-              <Link\r\n-                className=\"text-sm text-blue-600\"\r\n-                href={`/rooms/${room.id}`}\r\n-              >\r\n-                Open\r\n-              </Link>\r\n             </li>\r\n           ))\r\n         ) : (\r\n           <li className=\"text-gray-500\">No rooms yet</li>\r\n"
                },
                {
                    "date": 1760274368351,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,8 +4,9 @@\n import { useRoomSocket } from \"../hooks/useRoomSocket\";\r\n import CreateRoomModal from \"./CreateRoomModal\";\r\n import JoinRoomModal from \"./JoinRoomModal\";\r\n import type { Room } from \"../utils/roomTypes\";\r\n+import { fetchRooms } from \"../services/roomService\"; // âœ… import fetchRooms\r\n \r\n export default function RoomLobby() {\r\n   const { rooms: socketRooms, createRoom, joinRoom, connected } = useRoomSocket();\r\n   const [rooms, setRooms] = useState<Room[]>([]);\r\n@@ -16,9 +17,9 @@\n   useEffect(() => {\r\n     setRooms(socketRooms);\r\n   }, [socketRooms]);\r\n \r\n-  // Fetch initial rooms\r\n+  // Fetch initial rooms from Firebase\r\n   useEffect(() => {\r\n     fetchRooms()\r\n       .then((fetchedRooms) => {\r\n         setRooms((prevRooms) => {\r\n@@ -28,9 +29,9 @@\n           });\r\n           return allRooms;\r\n         });\r\n       })\r\n-      .catch(() => console.warn(\"Failed to fetch rooms via REST.\"));\r\n+      .catch((err) => console.warn(\"Failed to fetch rooms:\", err));\r\n   }, []);\r\n \r\n   const handleJoinRoom = (roomId: string) => {\r\n     joinRoom(roomId, { name: \"Anonymous\" }); // optionally pass user info\r\n"
                },
                {
                    "date": 1760276054413,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,41 +1,22 @@\n-\"use client\";\r\n-\r\n import React, { useState, useEffect } from \"react\";\r\n import { useRoomSocket } from \"../hooks/useRoomSocket\";\r\n import CreateRoomModal from \"./CreateRoomModal\";\r\n import JoinRoomModal from \"./JoinRoomModal\";\r\n import type { Room } from \"../utils/roomTypes\";\r\n-import { fetchRooms } from \"../services/roomService\"; // âœ… import fetchRooms\r\n \r\n-export default function RoomLobby() {\r\n-  const { rooms: socketRooms, createRoom, joinRoom, connected } = useRoomSocket();\r\n-  const [rooms, setRooms] = useState<Room[]>([]);\r\n+interface RoomLobbyProps {\r\n+  rooms: Room[];\r\n+  connected: boolean;\r\n+}\r\n+\r\n+export default function RoomLobby({ rooms, connected }: RoomLobbyProps) {\r\n+  const { createRoom, joinRoom } = useRoomSocket();\r\n   const [showCreateModal, setShowCreateModal] = useState(false);\r\n   const [showJoinModal, setShowJoinModal] = useState(false);\r\n \r\n-  // Sync socket rooms with local state\r\n-  useEffect(() => {\r\n-    setRooms(socketRooms);\r\n-  }, [socketRooms]);\r\n-\r\n-  // Fetch initial rooms from Firebase\r\n-  useEffect(() => {\r\n-    fetchRooms()\r\n-      .then((fetchedRooms) => {\r\n-        setRooms((prevRooms) => {\r\n-          const allRooms = [...prevRooms];\r\n-          fetchedRooms.forEach((r) => {\r\n-            if (!allRooms.find((room) => room.id === r.id)) allRooms.push(r);\r\n-          });\r\n-          return allRooms;\r\n-        });\r\n-      })\r\n-      .catch((err) => console.warn(\"Failed to fetch rooms:\", err));\r\n-  }, []);\r\n-\r\n   const handleJoinRoom = (roomId: string) => {\r\n-    joinRoom(roomId, { name: \"Anonymous\" }); // optionally pass user info\r\n+    joinRoom(roomId, { name: \"Anonymous\" });\r\n   };\r\n \r\n   return (\r\n     <div className=\"p-4\">\r\n@@ -73,12 +54,9 @@\n \r\n       <ul className=\"space-y-2\">\r\n         {rooms.length ? (\r\n           rooms.map((room) => (\r\n-            <li\r\n-              key={room.id}\r\n-              className=\"p-3 border rounded flex justify-between items-center\"\r\n-            >\r\n+            <li key={room.id} className=\"p-3 border rounded flex justify-between items-center\">\r\n               <div>\r\n                 <div className=\"font-semibold\">{room.name}</div>\r\n                 <div className=\"text-sm text-gray-500\">\r\n                   {room.topic} â€¢ {room.users?.length || 0} users\r\n"
                }
            ],
            "date": 1760267480950,
            "name": "Commit-0",
            "content": "// features/RoomSystem/components/RoomLobby.tsx\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useRoomSocket } from \"../hooks/useRoomSocket\";\r\nimport { fetchRooms } from \"../services/roomService\";\r\n\r\nexport default function RoomLobby() {\r\n  const { rooms, createRoom, joinRoom, connected } = useRoomSocket();\r\n  const [localRooms, setLocalRooms] = useState(rooms);\r\n  const [name, setName] = useState(\"\");\r\n  const [topic, setTopic] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setLocalRooms(rooms);\r\n  }, [rooms]);\r\n\r\n  useEffect(() => {\r\n    // initial fetch via REST as fallback\r\n    fetchRooms().then((r) => setLocalRooms(r)).catch(() => {});\r\n  }, []);\r\n\r\n  const onCreate = () => {\r\n    if (!name || !topic) return;\r\n    createRoom({ name, topic });\r\n    setName(\"\");\r\n    setTopic(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-4\">\r\n      <h2 className=\"text-xl font-bold\">Rooms Lobby {connected ? \"ðŸŸ¢\" : \"ðŸ”´\"}</h2>\r\n\r\n      <div className=\"mt-4 mb-6\">\r\n        <input value={name} onChange={(e) => setName(e.target.value)} placeholder=\"Room name\" className=\"border p-2 mr-2\" />\r\n        <input value={topic} onChange={(e) => setTopic(e.target.value)} placeholder=\"Topic\" className=\"border p-2 mr-2\" />\r\n        <button onClick={onCreate} className=\"bg-blue-600 text-white px-3 py-2 rounded\">Create</button>\r\n      </div>\r\n\r\n      <ul className=\"space-y-2\">\r\n        {localRooms?.length ? localRooms.map((r) => (\r\n          <li key={r.id} className=\"p-3 border rounded flex justify-between items-center\">\r\n            <div>\r\n              <div className=\"font-semibold\">{r.name}</div>\r\n              <div className=\"text-sm text-gray-500\">{r.topic}</div>\r\n            </div>\r\n            <div className=\"flex gap-2\">\r\n              <a className=\"text-sm text-blue-600\" href={`/rooms/${r.id}`}>Open</a>\r\n            </div>\r\n          </li>\r\n        )) : <li>No rooms yet</li>}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n"
        }
    ]
}