{
    "sourceFile": "features/anonymousChat/components/AnonymousChatRoom.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 128,
            "patches": [
                {
                    "date": 1752230193627,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1752231306073,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,17 +8,18 @@\n import ChatBox from \"../../../components/chat/ChatBox\";\r\n import FindingPartner from \"./FindingPartner\";\r\n \r\n export default function AnonymousChatRoom() {\r\n-  const { localStream, remoteStream, isConnected } = useWebRTC();\r\n-  const { socket } = useSocket();\r\n+  const roomId = \"anonymous-room\"; // You may want to generate or fetch this dynamically\r\n+  const { localStream, remoteStream } = useWebRTC(roomId);\r\n+  const socket = useSocket();\r\n   const [loading, setLoading] = useState(true);\r\n \r\n   useEffect(() => {\r\n-    if (isConnected) {\r\n+    if (remoteStream) {\r\n       setLoading(false);\r\n     }\r\n-  }, [isConnected]);\r\n+  }, [remoteStream]);\r\n \r\n   return (\r\n     <div className=\"flex flex-col md:flex-row h-screen\">\r\n       <div className=\"flex-1 bg-black flex items-center justify-center\">\r\n"
                },
                {
                    "date": 1752252789578,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n import ChatBox from \"../../../components/chat/ChatBox\";\r\n import FindingPartner from \"./FindingPartner\";\r\n \r\n export default function AnonymousChatRoom() {\r\n-  const roomId = \"anonymous-room\"; // You may want to generate or fetch this dynamically\r\n+  const roomId = \"anonymous-room\"; // TODO: Replace with dynamic room id generation\r\n   const { localStream, remoteStream } = useWebRTC(roomId);\r\n   const socket = useSocket();\r\n   const [loading, setLoading] = useState(true);\r\n \r\n@@ -21,20 +21,26 @@\n   }, [remoteStream]);\r\n \r\n   return (\r\n     <div className=\"flex flex-col md:flex-row h-screen\">\r\n-      <div className=\"flex-1 bg-black flex items-center justify-center\">\r\n+      {/* Video section */}\r\n+      <div className=\"flex-1 bg-black flex items-center justify-center relative\">\r\n         {loading ? (\r\n           <FindingPartner />\r\n         ) : (\r\n           <>\r\n-            <LocalVideo stream={localStream} />\r\n+            <div className=\"absolute bottom-4 right-4 w-40 h-40 border-2 border-white rounded-md overflow-hidden\">\r\n+              <LocalVideo stream={localStream} />\r\n+            </div>\r\n             <RemoteVideo stream={remoteStream} />\r\n           </>\r\n         )}\r\n       </div>\r\n+\r\n+      {/* Chat section */}\r\n       <div className=\"md:w-1/3 bg-neutral-100 dark:bg-neutral-800 border-l border-neutral-300 dark:border-neutral-700 flex flex-col\">\r\n-        <ChatBox socket={socket} />\r\n+        {/* Pass roomId for accurate messaging */}\r\n+        <ChatBox socket={socket} roomId={roomId} />\r\n       </div>\r\n     </div>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1752253188505,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,16 +1,19 @@\n \"use client\";\r\n \r\n import React, { useEffect, useState } from \"react\";\r\n+import { v4 as uuidv4 } from \"uuid\";\r\n import useWebRTC from \"../hooks/useWebRTC\";\r\n import useSocket from \"../hooks/useSocket\";\r\n import LocalVideo from \"../../../components/video/LocalVideo\";\r\n import RemoteVideo from \"../../../components/video/RemoteVideo\";\r\n import ChatBox from \"../../../components/chat/ChatBox\";\r\n import FindingPartner from \"./FindingPartner\";\r\n \r\n export default function AnonymousChatRoom() {\r\n-  const roomId = \"anonymous-room\"; // TODO: Replace with dynamic room id generation\r\n+  // 🔥 Generate dynamic roomId using UUID\r\n+  const [roomId] = useState(() => uuidv4());\r\n+\r\n   const { localStream, remoteStream } = useWebRTC(roomId);\r\n   const socket = useSocket();\r\n   const [loading, setLoading] = useState(true);\r\n \r\n"
                },
                {
                    "date": 1752253201707,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,4 +46,5 @@\n       </div>\r\n     </div>\r\n   );\r\n }\r\n+          \n\\ No newline at end of file\n"
                },
                {
                    "date": 1752256737410,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,16 +9,30 @@\n import ChatBox from \"../../../components/chat/ChatBox\";\r\n import FindingPartner from \"./FindingPartner\";\r\n \r\n export default function AnonymousChatRoom() {\r\n-  // 🔥 Generate dynamic roomId using UUID\r\n-  const [roomId] = useState(() => uuidv4());\r\n-\r\n-  const { localStream, remoteStream } = useWebRTC(roomId);\r\n+  const [roomId, setRoomId] = useState<string | null>(null);\r\n   const socket = useSocket();\r\n+  const { localStream, remoteStream } = useWebRTC(roomId ?? \"\");\r\n   const [loading, setLoading] = useState(true);\r\n \r\n   useEffect(() => {\r\n+    if (!socket) return;\r\n+\r\n+    // ✅ Generate and set roomId only after socket is connected\r\n+    const newRoomId = uuidv4();\r\n+    setRoomId(newRoomId);\r\n+\r\n+    // ✅ Join room via socket after generating roomId\r\n+    socket.emit(\"join-room\", newRoomId);\r\n+    console.log(\"🔗 Joined room:\", newRoomId);\r\n+\r\n+    return () => {\r\n+      socket.emit(\"leave-room\", newRoomId); // Optional: implement leave-room on server\r\n+    };\r\n+  }, [socket]);\r\n+\r\n+  useEffect(() => {\r\n     if (remoteStream) {\r\n       setLoading(false);\r\n     }\r\n   }, [remoteStream]);\r\n@@ -40,11 +54,9 @@\n       </div>\r\n \r\n       {/* Chat section */}\r\n       <div className=\"md:w-1/3 bg-neutral-100 dark:bg-neutral-800 border-l border-neutral-300 dark:border-neutral-700 flex flex-col\">\r\n-        {/* Pass roomId for accurate messaging */}\r\n-        <ChatBox socket={socket} roomId={roomId} />\r\n+        {roomId && <ChatBox socket={socket} roomId={roomId} />}\r\n       </div>\r\n     </div>\r\n   );\r\n }\r\n\\ No newline at end of file\n-          \n"
                },
                {
                    "date": 1752257163237,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,7 @@\n \"use client\";\r\n \r\n import React, { useEffect, useState } from \"react\";\r\n-import { v4 as uuidv4 } from \"uuid\";\r\n import useWebRTC from \"../hooks/useWebRTC\";\r\n import useSocket from \"../hooks/useSocket\";\r\n import LocalVideo from \"../../../components/video/LocalVideo\";\r\n import RemoteVideo from \"../../../components/video/RemoteVideo\";\r\n@@ -14,30 +13,42 @@\n   const socket = useSocket();\r\n   const { localStream, remoteStream } = useWebRTC(roomId ?? \"\");\r\n   const [loading, setLoading] = useState(true);\r\n \r\n+  // ✅ Handle 'matched' event from server to join room\r\n   useEffect(() => {\r\n     if (!socket) return;\r\n \r\n-    // ✅ Generate and set roomId only after socket is connected\r\n-    const newRoomId = uuidv4();\r\n-    setRoomId(newRoomId);\r\n+    const handleMatched = ({ roomId, partnerId }: { roomId: string; partnerId: string }) => {\r\n+      console.log(\"🎉 Matched in room:\", roomId);\r\n+      setRoomId(roomId);\r\n+      socket.emit(\"join-room\", roomId);\r\n+    };\r\n \r\n-    // ✅ Join room via socket after generating roomId\r\n-    socket.emit(\"join-room\", newRoomId);\r\n-    console.log(\"🔗 Joined room:\", newRoomId);\r\n+    socket.on(\"matched\", handleMatched);\r\n \r\n     return () => {\r\n-      socket.emit(\"leave-room\", newRoomId); // Optional: implement leave-room on server\r\n+      socket.off(\"matched\", handleMatched);\r\n     };\r\n   }, [socket]);\r\n \r\n+  // ✅ Update loading state based on remoteStream availability\r\n   useEffect(() => {\r\n     if (remoteStream) {\r\n       setLoading(false);\r\n     }\r\n   }, [remoteStream]);\r\n \r\n+  // ✅ Optional: implement leave-room on unmount\r\n+  useEffect(() => {\r\n+    return () => {\r\n+      if (socket && roomId) {\r\n+        socket.emit(\"leave-room\", roomId);\r\n+        console.log(\"👋 Left room:\", roomId);\r\n+      }\r\n+    };\r\n+  }, [socket, roomId]);\r\n+\r\n   return (\r\n     <div className=\"flex flex-col md:flex-row h-screen\">\r\n       {/* Video section */}\r\n       <div className=\"flex-1 bg-black flex items-center justify-center relative\">\r\n@@ -58,5 +69,5 @@\n         {roomId && <ChatBox socket={socket} roomId={roomId} />}\r\n       </div>\r\n     </div>\r\n   );\r\n-}\n\\ No newline at end of file\n+}\r\n"
                },
                {
                    "date": 1752257651733,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,15 +13,17 @@\n   const socket = useSocket();\r\n   const { localStream, remoteStream } = useWebRTC(roomId ?? \"\");\r\n   const [loading, setLoading] = useState(true);\r\n \r\n-  // ✅ Handle 'matched' event from server to join room\r\n+  // ✅ Listen for 'matched' event from server\r\n   useEffect(() => {\r\n     if (!socket) return;\r\n \r\n     const handleMatched = ({ roomId, partnerId }: { roomId: string; partnerId: string }) => {\r\n       console.log(\"🎉 Matched in room:\", roomId);\r\n       setRoomId(roomId);\r\n+\r\n+      // ✅ Join room with server-assigned roomId\r\n       socket.emit(\"join-room\", roomId);\r\n     };\r\n \r\n     socket.on(\"matched\", handleMatched);\r\n@@ -30,16 +32,16 @@\n       socket.off(\"matched\", handleMatched);\r\n     };\r\n   }, [socket]);\r\n \r\n-  // ✅ Update loading state based on remoteStream availability\r\n+  // ✅ Update loading state when remote stream arrives\r\n   useEffect(() => {\r\n     if (remoteStream) {\r\n       setLoading(false);\r\n     }\r\n   }, [remoteStream]);\r\n \r\n-  // ✅ Optional: implement leave-room on unmount\r\n+  // ✅ Leave room on unmount (optional cleanup)\r\n   useEffect(() => {\r\n     return () => {\r\n       if (socket && roomId) {\r\n         socket.emit(\"leave-room\", roomId);\r\n"
                },
                {
                    "date": 1752258229606,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,20 +10,26 @@\n \r\n export default function AnonymousChatRoom() {\r\n   const [roomId, setRoomId] = useState<string | null>(null);\r\n   const socket = useSocket();\r\n+\r\n+  // ✅ Initialize WebRTC only when roomId is available\r\n   const { localStream, remoteStream } = useWebRTC(roomId ?? \"\");\r\n   const [loading, setLoading] = useState(true);\r\n \r\n-  // ✅ Listen for 'matched' event from server\r\n+  /**\r\n+   * ✅ Listen for 'matched' event from server\r\n+   * Sets roomId only after server assigns it\r\n+   * Emits join-room after receiving assigned roomId\r\n+   */\r\n   useEffect(() => {\r\n     if (!socket) return;\r\n \r\n     const handleMatched = ({ roomId, partnerId }: { roomId: string; partnerId: string }) => {\r\n       console.log(\"🎉 Matched in room:\", roomId);\r\n       setRoomId(roomId);\r\n \r\n-      // ✅ Join room with server-assigned roomId\r\n+      // ✅ Join the assigned room\r\n       socket.emit(\"join-room\", roomId);\r\n     };\r\n \r\n     socket.on(\"matched\", handleMatched);\r\n@@ -32,16 +38,20 @@\n       socket.off(\"matched\", handleMatched);\r\n     };\r\n   }, [socket]);\r\n \r\n-  // ✅ Update loading state when remote stream arrives\r\n+  /**\r\n+   * ✅ Update loading state when remote stream arrives\r\n+   */\r\n   useEffect(() => {\r\n     if (remoteStream) {\r\n       setLoading(false);\r\n     }\r\n   }, [remoteStream]);\r\n \r\n-  // ✅ Leave room on unmount (optional cleanup)\r\n+  /**\r\n+   * ✅ Leave room on unmount for cleanup\r\n+   */\r\n   useEffect(() => {\r\n     return () => {\r\n       if (socket && roomId) {\r\n         socket.emit(\"leave-room\", roomId);\r\n"
                },
                {
                    "date": 1752258942785,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,12 @@\n export default function AnonymousChatRoom() {\r\n   const [roomId, setRoomId] = useState<string | null>(null);\r\n   const socket = useSocket();\r\n \r\n-  // ✅ Initialize WebRTC only when roomId is available\r\n+  /**\r\n+   * ✅ Initialize WebRTC only when roomId is available\r\n+   * No client-side UUID roomId generation here\r\n+   */\r\n   const { localStream, remoteStream } = useWebRTC(roomId ?? \"\");\r\n   const [loading, setLoading] = useState(true);\r\n \r\n   /**\r\n@@ -27,9 +30,9 @@\n     const handleMatched = ({ roomId, partnerId }: { roomId: string; partnerId: string }) => {\r\n       console.log(\"🎉 Matched in room:\", roomId);\r\n       setRoomId(roomId);\r\n \r\n-      // ✅ Join the assigned room\r\n+      // ✅ Join the assigned room after server matching\r\n       socket.emit(\"join-room\", roomId);\r\n     };\r\n \r\n     socket.on(\"matched\", handleMatched);\r\n"
                },
                {
                    "date": 1752260132201,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,31 +7,39 @@\n import RemoteVideo from \"../../../components/video/RemoteVideo\";\r\n import ChatBox from \"../../../components/chat/ChatBox\";\r\n import FindingPartner from \"./FindingPartner\";\r\n \r\n+interface MatchedPayload {\r\n+  roomId: string;\r\n+  partnerId: string;\r\n+  isOfferer: boolean;\r\n+}\r\n+\r\n export default function AnonymousChatRoom() {\r\n   const [roomId, setRoomId] = useState<string | null>(null);\r\n+  const [isOfferer, setIsOfferer] = useState<boolean | null>(null);\r\n   const socket = useSocket();\r\n \r\n-  /**\r\n-   * ✅ Initialize WebRTC only when roomId is available\r\n-   * No client-side UUID roomId generation here\r\n-   */\r\n-  const { localStream, remoteStream } = useWebRTC(roomId ?? \"\");\r\n+  // ✅ Initialize WebRTC only when roomId is available\r\n+  const { localStream, remoteStream } = useWebRTC(roomId, isOfferer, socket);\r\n   const [loading, setLoading] = useState(true);\r\n \r\n   /**\r\n    * ✅ Listen for 'matched' event from server\r\n-   * Sets roomId only after server assigns it\r\n+   * Sets roomId & isOfferer only after server assigns it\r\n    * Emits join-room after receiving assigned roomId\r\n    */\r\n   useEffect(() => {\r\n     if (!socket) return;\r\n \r\n-    const handleMatched = ({ roomId, partnerId }: { roomId: string; partnerId: string }) => {\r\n+    const handleMatched = ({ roomId, partnerId }: MatchedPayload) => {\r\n       console.log(\"🎉 Matched in room:\", roomId);\r\n       setRoomId(roomId);\r\n \r\n+      // ✅ Determine if this user is offerer based on socket.id vs partnerId\r\n+      const amIOfferer = socket.id < partnerId;\r\n+      setIsOfferer(amIOfferer);\r\n+\r\n       // ✅ Join the assigned room after server matching\r\n       socket.emit(\"join-room\", roomId);\r\n     };\r\n \r\n"
                },
                {
                    "date": 1752260314387,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,29 +28,35 @@\n    * Sets roomId & isOfferer only after server assigns it\r\n    * Emits join-room after receiving assigned roomId\r\n    */\r\n   useEffect(() => {\r\n-    if (!socket) return;\r\n+  if (!socket) return;\r\n \r\n-    const handleMatched = ({ roomId, partnerId }: MatchedPayload) => {\r\n-      console.log(\"🎉 Matched in room:\", roomId);\r\n-      setRoomId(roomId);\r\n+  const handleMatched = ({ roomId, partnerId }: MatchedPayload) => {\r\n+    console.log(\"🎉 Matched in room:\", roomId);\r\n+    setRoomId(roomId);\r\n \r\n-      // ✅ Determine if this user is offerer based on socket.id vs partnerId\r\n+    if (socket.id && partnerId) {\r\n       const amIOfferer = socket.id < partnerId;\r\n       setIsOfferer(amIOfferer);\r\n+      console.log(\"✅ I am offerer:\", amIOfferer);\r\n+    } else {\r\n+      console.warn(\"⚠️ socket.id or partnerId missing, defaulting to not offerer\");\r\n+      setIsOfferer(false);\r\n+    }\r\n \r\n-      // ✅ Join the assigned room after server matching\r\n-      socket.emit(\"join-room\", roomId);\r\n-    };\r\n+    // ✅ Join the assigned room after server matching\r\n+    socket.emit(\"join-room\", roomId);\r\n+  };\r\n \r\n-    socket.on(\"matched\", handleMatched);\r\n+  socket.on(\"matched\", handleMatched);\r\n \r\n-    return () => {\r\n-      socket.off(\"matched\", handleMatched);\r\n-    };\r\n-  }, [socket]);\r\n+  return () => {\r\n+    socket.off(\"matched\", handleMatched);\r\n+  };\r\n+}, [socket]);\r\n \r\n+\r\n   /**\r\n    * ✅ Update loading state when remote stream arrives\r\n    */\r\n   useEffect(() => {\r\n"
                },
                {
                    "date": 1752261668543,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,74 +1,45 @@\n-\"use client\";\r\n-\r\n import React, { useEffect, useState } from \"react\";\r\n import useWebRTC from \"../hooks/useWebRTC\";\r\n import useSocket from \"../hooks/useSocket\";\r\n import LocalVideo from \"../../../components/video/LocalVideo\";\r\n import RemoteVideo from \"../../../components/video/RemoteVideo\";\r\n import ChatBox from \"../../../components/chat/ChatBox\";\r\n import FindingPartner from \"./FindingPartner\";\r\n \r\n-interface MatchedPayload {\r\n-  roomId: string;\r\n-  partnerId: string;\r\n-  isOfferer: boolean;\r\n-}\r\n-\r\n export default function AnonymousChatRoom() {\r\n   const [roomId, setRoomId] = useState<string | null>(null);\r\n-  const [isOfferer, setIsOfferer] = useState<boolean | null>(null);\r\n+  const [isOfferer, setIsOfferer] = useState<boolean>(false);\r\n   const socket = useSocket();\r\n \r\n-  // ✅ Initialize WebRTC only when roomId is available\r\n-  const { localStream, remoteStream } = useWebRTC(roomId, isOfferer, socket);\r\n+  // ✅ Initialize WebRTC with isOfferer\r\n+  const { localStream, remoteStream } = useWebRTC(roomId, isOfferer);\r\n   const [loading, setLoading] = useState(true);\r\n \r\n-  /**\r\n-   * ✅ Listen for 'matched' event from server\r\n-   * Sets roomId & isOfferer only after server assigns it\r\n-   * Emits join-room after receiving assigned roomId\r\n-   */\r\n   useEffect(() => {\r\n-  if (!socket) return;\r\n+    if (!socket) return;\r\n \r\n-  const handleMatched = ({ roomId, partnerId }: MatchedPayload) => {\r\n-    console.log(\"🎉 Matched in room:\", roomId);\r\n-    setRoomId(roomId);\r\n+    const handleMatched = ({ roomId, partnerId, isOfferer }: { roomId: string; partnerId: string; isOfferer: boolean }) => {\r\n+      console.log(\"🎉 Matched in room:\", roomId);\r\n+      setRoomId(roomId);\r\n+      setIsOfferer(isOfferer);\r\n \r\n-    if (socket.id && partnerId) {\r\n-      const amIOfferer = socket.id < partnerId;\r\n-      setIsOfferer(amIOfferer);\r\n-      console.log(\"✅ I am offerer:\", amIOfferer);\r\n-    } else {\r\n-      console.warn(\"⚠️ socket.id or partnerId missing, defaulting to not offerer\");\r\n-      setIsOfferer(false);\r\n-    }\r\n+      socket.emit(\"join-room\", roomId);\r\n+    };\r\n \r\n-    // ✅ Join the assigned room after server matching\r\n-    socket.emit(\"join-room\", roomId);\r\n-  };\r\n+    socket.on(\"matched\", handleMatched);\r\n \r\n-  socket.on(\"matched\", handleMatched);\r\n+    return () => {\r\n+      socket.off(\"matched\", handleMatched);\r\n+    };\r\n+  }, [socket]);\r\n \r\n-  return () => {\r\n-    socket.off(\"matched\", handleMatched);\r\n-  };\r\n-}, [socket]);\r\n-\r\n-\r\n-  /**\r\n-   * ✅ Update loading state when remote stream arrives\r\n-   */\r\n   useEffect(() => {\r\n     if (remoteStream) {\r\n       setLoading(false);\r\n     }\r\n   }, [remoteStream]);\r\n \r\n-  /**\r\n-   * ✅ Leave room on unmount for cleanup\r\n-   */\r\n   useEffect(() => {\r\n     return () => {\r\n       if (socket && roomId) {\r\n         socket.emit(\"leave-room\", roomId);\r\n@@ -78,9 +49,8 @@\n   }, [socket, roomId]);\r\n \r\n   return (\r\n     <div className=\"flex flex-col md:flex-row h-screen\">\r\n-      {/* Video section */}\r\n       <div className=\"flex-1 bg-black flex items-center justify-center relative\">\r\n         {loading ? (\r\n           <FindingPartner />\r\n         ) : (\r\n@@ -92,9 +62,8 @@\n           </>\r\n         )}\r\n       </div>\r\n \r\n-      {/* Chat section */}\r\n       <div className=\"md:w-1/3 bg-neutral-100 dark:bg-neutral-800 border-l border-neutral-300 dark:border-neutral-700 flex flex-col\">\r\n         {roomId && <ChatBox socket={socket} roomId={roomId} />}\r\n       </div>\r\n     </div>\r\n"
                },
                {
                    "date": 1752261953299,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,6 @@\n+\"use client\";\r\n+\r\n import React, { useEffect, useState } from \"react\";\r\n import useWebRTC from \"../hooks/useWebRTC\";\r\n import useSocket from \"../hooks/useSocket\";\r\n import LocalVideo from \"../../../components/video/LocalVideo\";\r\n@@ -7,12 +9,11 @@\n import FindingPartner from \"./FindingPartner\";\r\n \r\n export default function AnonymousChatRoom() {\r\n   const [roomId, setRoomId] = useState<string | null>(null);\r\n-  const [isOfferer, setIsOfferer] = useState<boolean>(false);\r\n+  const [isOfferer, setIsOfferer] = useState<boolean | null>(null);\r\n   const socket = useSocket();\r\n \r\n-  // ✅ Initialize WebRTC with isOfferer\r\n   const { localStream, remoteStream } = useWebRTC(roomId, isOfferer);\r\n   const [loading, setLoading] = useState(true);\r\n \r\n   useEffect(() => {\r\n@@ -21,9 +22,8 @@\n     const handleMatched = ({ roomId, partnerId, isOfferer }: { roomId: string; partnerId: string; isOfferer: boolean }) => {\r\n       console.log(\"🎉 Matched in room:\", roomId);\r\n       setRoomId(roomId);\r\n       setIsOfferer(isOfferer);\r\n-\r\n       socket.emit(\"join-room\", roomId);\r\n     };\r\n \r\n     socket.on(\"matched\", handleMatched);\r\n"
                },
                {
                    "date": 1752262415978,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,20 +10,32 @@\n \r\n export default function AnonymousChatRoom() {\r\n   const [roomId, setRoomId] = useState<string | null>(null);\r\n   const [isOfferer, setIsOfferer] = useState<boolean | null>(null);\r\n+  const [loading, setLoading] = useState(true);\r\n+\r\n   const socket = useSocket();\r\n \r\n+  // ✅ Initialize WebRTC only when roomId & isOfferer are assigned\r\n   const { localStream, remoteStream } = useWebRTC(roomId, isOfferer);\r\n-  const [loading, setLoading] = useState(true);\r\n \r\n   useEffect(() => {\r\n     if (!socket) return;\r\n \r\n-    const handleMatched = ({ roomId, partnerId, isOfferer }: { roomId: string; partnerId: string; isOfferer: boolean }) => {\r\n-      console.log(\"🎉 Matched in room:\", roomId);\r\n+    const handleMatched = ({\r\n+      roomId,\r\n+      partnerId,\r\n+      isOfferer,\r\n+    }: {\r\n+      roomId: string;\r\n+      partnerId: string;\r\n+      isOfferer: boolean;\r\n+    }) => {\r\n+      console.log(\"🎉 Matched in room:\", roomId, \"Offerer:\", isOfferer);\r\n       setRoomId(roomId);\r\n       setIsOfferer(isOfferer);\r\n+\r\n+      // ✅ Join assigned room after server matching\r\n       socket.emit(\"join-room\", roomId);\r\n     };\r\n \r\n     socket.on(\"matched\", handleMatched);\r\n@@ -32,14 +44,16 @@\n       socket.off(\"matched\", handleMatched);\r\n     };\r\n   }, [socket]);\r\n \r\n+  // ✅ Update loading state when remote stream arrives\r\n   useEffect(() => {\r\n     if (remoteStream) {\r\n       setLoading(false);\r\n     }\r\n   }, [remoteStream]);\r\n \r\n+  // ✅ Leave room on unmount for cleanup\r\n   useEffect(() => {\r\n     return () => {\r\n       if (socket && roomId) {\r\n         socket.emit(\"leave-room\", roomId);\r\n@@ -49,8 +63,9 @@\n   }, [socket, roomId]);\r\n \r\n   return (\r\n     <div className=\"flex flex-col md:flex-row h-screen\">\r\n+      {/* Video Section */}\r\n       <div className=\"flex-1 bg-black flex items-center justify-center relative\">\r\n         {loading ? (\r\n           <FindingPartner />\r\n         ) : (\r\n@@ -62,8 +77,9 @@\n           </>\r\n         )}\r\n       </div>\r\n \r\n+      {/* Chat Section */}\r\n       <div className=\"md:w-1/3 bg-neutral-100 dark:bg-neutral-800 border-l border-neutral-300 dark:border-neutral-700 flex flex-col\">\r\n         {roomId && <ChatBox socket={socket} roomId={roomId} />}\r\n       </div>\r\n     </div>\r\n"
                },
                {
                    "date": 1752298273963,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n \"use client\";\r\n \r\n-import React, { useEffect, useState } from \"react\";\r\n+import React, { useEffect, useState, useCallback } from \"react\";\r\n import useWebRTC from \"../hooks/useWebRTC\";\r\n import useSocket from \"../hooks/useSocket\";\r\n import LocalVideo from \"../../../components/video/LocalVideo\";\r\n import RemoteVideo from \"../../../components/video/RemoteVideo\";\r\n@@ -17,12 +17,13 @@\n \r\n   // ✅ Initialize WebRTC only when roomId & isOfferer are assigned\r\n   const { localStream, remoteStream } = useWebRTC(roomId, isOfferer);\r\n \r\n-  useEffect(() => {\r\n-    if (!socket) return;\r\n-\r\n-    const handleMatched = ({\r\n+  /**\r\n+   * ✅ Handle 'matched' event from server with useCallback\r\n+   */\r\n+  const handleMatched = useCallback(\r\n+    ({\r\n       roomId,\r\n       partnerId,\r\n       isOfferer,\r\n     }: {\r\n@@ -34,26 +35,63 @@\n       setRoomId(roomId);\r\n       setIsOfferer(isOfferer);\r\n \r\n       // ✅ Join assigned room after server matching\r\n-      socket.emit(\"join-room\", roomId);\r\n-    };\r\n+      socket?.emit(\"join-room\", roomId);\r\n+    },\r\n+    [socket]\r\n+  );\r\n \r\n+  /**\r\n+   * ✅ Register matched event listener\r\n+   */\r\n+  useEffect(() => {\r\n+    if (!socket) return;\r\n+\r\n+    socket.off(\"matched\", handleMatched); // Prevent duplicate listeners\r\n     socket.on(\"matched\", handleMatched);\r\n \r\n     return () => {\r\n       socket.off(\"matched\", handleMatched);\r\n     };\r\n+  }, [socket, handleMatched]);\r\n+\r\n+  /**\r\n+   * ✅ Listen for socket connect/disconnect for stability\r\n+   */\r\n+  useEffect(() => {\r\n+    if (!socket) return;\r\n+\r\n+    const handleDisconnect = () => {\r\n+      console.log(\"⚠️ Disconnected from socket server\");\r\n+      setLoading(true);\r\n+    };\r\n+\r\n+    const handleConnect = () => {\r\n+      console.log(\"✅ Connected to socket server:\", socket.id);\r\n+    };\r\n+\r\n+    socket.on(\"disconnect\", handleDisconnect);\r\n+    socket.on(\"connect\", handleConnect);\r\n+\r\n+    return () => {\r\n+      socket.off(\"disconnect\", handleDisconnect);\r\n+      socket.off(\"connect\", handleConnect);\r\n+    };\r\n   }, [socket]);\r\n \r\n-  // ✅ Update loading state when remote stream arrives\r\n+  /**\r\n+   * ✅ Update loading state when remote stream arrives\r\n+   */\r\n   useEffect(() => {\r\n     if (remoteStream) {\r\n       setLoading(false);\r\n     }\r\n   }, [remoteStream]);\r\n \r\n-  // ✅ Leave room on unmount for cleanup\r\n+  /**\r\n+   * ✅ Leave room on unmount for cleanup\r\n+   */\r\n   useEffect(() => {\r\n     return () => {\r\n       if (socket && roomId) {\r\n         socket.emit(\"leave-room\", roomId);\r\n@@ -70,9 +108,13 @@\n           <FindingPartner />\r\n         ) : (\r\n           <>\r\n             <div className=\"absolute bottom-4 right-4 w-40 h-40 border-2 border-white rounded-md overflow-hidden\">\r\n-              <LocalVideo stream={localStream} />\r\n+              {localStream ? (\r\n+                <LocalVideo stream={localStream} />\r\n+              ) : (\r\n+                <div className=\"text-white text-sm\">Loading camera...</div>\r\n+              )}\r\n             </div>\r\n             <RemoteVideo stream={remoteStream} />\r\n           </>\r\n         )}\r\n"
                },
                {
                    "date": 1752300505513,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,18 +6,20 @@\n import LocalVideo from \"../../../components/video/LocalVideo\";\r\n import RemoteVideo from \"../../../components/video/RemoteVideo\";\r\n import ChatBox from \"../../../components/chat/ChatBox\";\r\n import FindingPartner from \"./FindingPartner\";\r\n+import Button from \"../../../components/common/Button\";\r\n \r\n export default function AnonymousChatRoom() {\r\n   const [roomId, setRoomId] = useState<string | null>(null);\r\n   const [isOfferer, setIsOfferer] = useState<boolean | null>(null);\r\n-  const [loading, setLoading] = useState(true);\r\n+  const [loading, setLoading] = useState(false);\r\n+  const [chatStarted, setChatStarted] = useState(false);\r\n \r\n   const socket = useSocket();\r\n \r\n   // ✅ Initialize WebRTC only when roomId & isOfferer are assigned\r\n-  const { localStream, remoteStream } = useWebRTC(roomId, isOfferer);\r\n+  const { localStream, remoteStream, stopWebRTC } = useWebRTC(roomId, isOfferer);\r\n \r\n   /**\r\n    * ✅ Handle 'matched' event from server with useCallback\r\n    */\r\n@@ -33,8 +35,9 @@\n     }) => {\r\n       console.log(\"🎉 Matched in room:\", roomId, \"Offerer:\", isOfferer);\r\n       setRoomId(roomId);\r\n       setIsOfferer(isOfferer);\r\n+      setLoading(true);\r\n \r\n       // ✅ Join assigned room after server matching\r\n       socket?.emit(\"join-room\", roomId);\r\n     },\r\n@@ -62,21 +65,29 @@\n     if (!socket) return;\r\n \r\n     const handleDisconnect = () => {\r\n       console.log(\"⚠️ Disconnected from socket server\");\r\n-      setLoading(true);\r\n+      setLoading(false);\r\n+      setChatStarted(false);\r\n     };\r\n \r\n     const handleConnect = () => {\r\n       console.log(\"✅ Connected to socket server:\", socket.id);\r\n     };\r\n \r\n+    const handlePartnerLeft = () => {\r\n+      console.log(\"👋 Partner left the chat\");\r\n+      handleStop(); // Auto stop and show Start button\r\n+    };\r\n+\r\n     socket.on(\"disconnect\", handleDisconnect);\r\n     socket.on(\"connect\", handleConnect);\r\n+    socket.on(\"partner-left\", handlePartnerLeft);\r\n \r\n     return () => {\r\n       socket.off(\"disconnect\", handleDisconnect);\r\n       socket.off(\"connect\", handleConnect);\r\n+      socket.off(\"partner-left\", handlePartnerLeft);\r\n     };\r\n   }, [socket]);\r\n \r\n   /**\r\n@@ -88,24 +99,53 @@\n     }\r\n   }, [remoteStream]);\r\n \r\n   /**\r\n+   * ✅ Start chat handler\r\n+   */\r\n+  const handleStart = () => {\r\n+    if (!socket) return;\r\n+    console.log(\"🔍 Looking for partner...\");\r\n+    setChatStarted(true);\r\n+    setLoading(true);\r\n+    // Emit to server to enter matchmaking (server auto matches if someone waiting)\r\n+    // In your current signaling.js, just connecting triggers matchmaking\r\n+  };\r\n+\r\n+  /**\r\n+   * ✅ Stop chat handler\r\n+   */\r\n+  const handleStop = () => {\r\n+    console.log(\"🛑 Stopping chat...\");\r\n+    if (socket && roomId) {\r\n+      socket.emit(\"leave-room\", roomId);\r\n+    }\r\n+    stopWebRTC(); // Clean up WebRTC connection\r\n+    setRoomId(null);\r\n+    setIsOfferer(null);\r\n+    setChatStarted(false);\r\n+    setLoading(false);\r\n+  };\r\n+\r\n+  /**\r\n    * ✅ Leave room on unmount for cleanup\r\n    */\r\n   useEffect(() => {\r\n     return () => {\r\n-      if (socket && roomId) {\r\n-        socket.emit(\"leave-room\", roomId);\r\n-        console.log(\"👋 Left room:\", roomId);\r\n-      }\r\n+      handleStop();\r\n     };\r\n-  }, [socket, roomId]);\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, []);\r\n \r\n   return (\r\n     <div className=\"flex flex-col md:flex-row h-screen\">\r\n       {/* Video Section */}\r\n       <div className=\"flex-1 bg-black flex items-center justify-center relative\">\r\n-        {loading ? (\r\n+        {!chatStarted ? (\r\n+          <div className=\"flex flex-col items-center justify-center space-y-4\">\r\n+            <Button onClick={handleStart}>Start</Button>\r\n+          </div>\r\n+        ) : loading ? (\r\n           <FindingPartner />\r\n         ) : (\r\n           <>\r\n             <div className=\"absolute bottom-4 right-4 w-40 h-40 border-2 border-white rounded-md overflow-hidden\">\r\n@@ -115,8 +155,13 @@\n                 <div className=\"text-white text-sm\">Loading camera...</div>\r\n               )}\r\n             </div>\r\n             <RemoteVideo stream={remoteStream} />\r\n+\r\n+            {/* Stop button */}\r\n+            <div className=\"absolute top-4 right-4\">\r\n+              <Button onClick={handleStop}>Stop</Button>\r\n+            </div>\r\n           </>\r\n         )}\r\n       </div>\r\n \r\n"
                },
                {
                    "date": 1752301037648,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -141,9 +141,20 @@\n       {/* Video Section */}\r\n       <div className=\"flex-1 bg-black flex items-center justify-center relative\">\r\n         {!chatStarted ? (\r\n           <div className=\"flex flex-col items-center justify-center space-y-4\">\r\n-            <Button onClick={handleStart}>Start</Button>\r\n+            <Button\r\n+  label=\"Start\"\r\n+  variant=\"start\"\r\n+  onClick={handleStart}\r\n+/>\r\n+\r\n+<Button\r\n+  label=\"Stop\"\r\n+  variant=\"stop\"\r\n+  onClick={handleStop}\r\n+/>\r\n+\r\n           </div>\r\n         ) : loading ? (\r\n           <FindingPartner />\r\n         ) : (\r\n"
                },
                {
                    "date": 1752301047978,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -141,20 +141,9 @@\n       {/* Video Section */}\r\n       <div className=\"flex-1 bg-black flex items-center justify-center relative\">\r\n         {!chatStarted ? (\r\n           <div className=\"flex flex-col items-center justify-center space-y-4\">\r\n-            <Button\r\n-  label=\"Start\"\r\n-  variant=\"start\"\r\n-  onClick={handleStart}\r\n-/>\r\n-\r\n-<Button\r\n-  label=\"Stop\"\r\n-  variant=\"stop\"\r\n-  onClick={handleStop}\r\n-/>\r\n-\r\n+            <Button onClick={handleStart}>Start</Button>\r\n           </div>\r\n         ) : loading ? (\r\n           <FindingPartner />\r\n         ) : (\r\n"
                },
                {
                    "date": 1752301057380,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -141,10 +141,13 @@\n       {/* Video Section */}\r\n       <div className=\"flex-1 bg-black flex items-center justify-center relative\">\r\n         {!chatStarted ? (\r\n           <div className=\"flex flex-col items-center justify-center space-y-4\">\r\n-            <Button onClick={handleStart}>Start</Button>\r\n-          </div>\r\n+<Button\r\n+  label=\"Start\"\r\n+  variant=\"start\"\r\n+  onClick={handleStart}\r\n+/>          </div>\r\n         ) : loading ? (\r\n           <FindingPartner />\r\n         ) : (\r\n           <>\r\n"
                },
                {
                    "date": 1752301066386,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -161,10 +161,13 @@\n             <RemoteVideo stream={remoteStream} />\r\n \r\n             {/* Stop button */}\r\n             <div className=\"absolute top-4 right-4\">\r\n-              <Button onClick={handleStop}>Stop</Button>\r\n-            </div>\r\n+<Button\r\n+  label=\"Stop\"\r\n+  variant=\"stop\"\r\n+  onClick={handleStop}\r\n+/>            </div>\r\n           </>\r\n         )}\r\n       </div>\r\n \r\n"
                },
                {
                    "date": 1752301558326,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,20 +6,18 @@\n import LocalVideo from \"../../../components/video/LocalVideo\";\r\n import RemoteVideo from \"../../../components/video/RemoteVideo\";\r\n import ChatBox from \"../../../components/chat/ChatBox\";\r\n import FindingPartner from \"./FindingPartner\";\r\n-import Button from \"../../../components/common/Button\";\r\n \r\n export default function AnonymousChatRoom() {\r\n   const [roomId, setRoomId] = useState<string | null>(null);\r\n   const [isOfferer, setIsOfferer] = useState<boolean | null>(null);\r\n-  const [loading, setLoading] = useState(false);\r\n-  const [chatStarted, setChatStarted] = useState(false);\r\n+  const [loading, setLoading] = useState(true);\r\n \r\n   const socket = useSocket();\r\n \r\n   // ✅ Initialize WebRTC only when roomId & isOfferer are assigned\r\n-  const { localStream, remoteStream, stopWebRTC } = useWebRTC(roomId, isOfferer);\r\n+  const { localStream, remoteStream } = useWebRTC(roomId, isOfferer);\r\n \r\n   /**\r\n    * ✅ Handle 'matched' event from server with useCallback\r\n    */\r\n@@ -35,9 +33,8 @@\n     }) => {\r\n       console.log(\"🎉 Matched in room:\", roomId, \"Offerer:\", isOfferer);\r\n       setRoomId(roomId);\r\n       setIsOfferer(isOfferer);\r\n-      setLoading(true);\r\n \r\n       // ✅ Join assigned room after server matching\r\n       socket?.emit(\"join-room\", roomId);\r\n     },\r\n@@ -65,29 +62,21 @@\n     if (!socket) return;\r\n \r\n     const handleDisconnect = () => {\r\n       console.log(\"⚠️ Disconnected from socket server\");\r\n-      setLoading(false);\r\n-      setChatStarted(false);\r\n+      setLoading(true);\r\n     };\r\n \r\n     const handleConnect = () => {\r\n       console.log(\"✅ Connected to socket server:\", socket.id);\r\n     };\r\n \r\n-    const handlePartnerLeft = () => {\r\n-      console.log(\"👋 Partner left the chat\");\r\n-      handleStop(); // Auto stop and show Start button\r\n-    };\r\n-\r\n     socket.on(\"disconnect\", handleDisconnect);\r\n     socket.on(\"connect\", handleConnect);\r\n-    socket.on(\"partner-left\", handlePartnerLeft);\r\n \r\n     return () => {\r\n       socket.off(\"disconnect\", handleDisconnect);\r\n       socket.off(\"connect\", handleConnect);\r\n-      socket.off(\"partner-left\", handlePartnerLeft);\r\n     };\r\n   }, [socket]);\r\n \r\n   /**\r\n@@ -99,56 +88,24 @@\n     }\r\n   }, [remoteStream]);\r\n \r\n   /**\r\n-   * ✅ Start chat handler\r\n-   */\r\n-  const handleStart = () => {\r\n-    if (!socket) return;\r\n-    console.log(\"🔍 Looking for partner...\");\r\n-    setChatStarted(true);\r\n-    setLoading(true);\r\n-    // Emit to server to enter matchmaking (server auto matches if someone waiting)\r\n-    // In your current signaling.js, just connecting triggers matchmaking\r\n-  };\r\n-\r\n-  /**\r\n-   * ✅ Stop chat handler\r\n-   */\r\n-  const handleStop = () => {\r\n-    console.log(\"🛑 Stopping chat...\");\r\n-    if (socket && roomId) {\r\n-      socket.emit(\"leave-room\", roomId);\r\n-    }\r\n-    stopWebRTC(); // Clean up WebRTC connection\r\n-    setRoomId(null);\r\n-    setIsOfferer(null);\r\n-    setChatStarted(false);\r\n-    setLoading(false);\r\n-  };\r\n-\r\n-  /**\r\n    * ✅ Leave room on unmount for cleanup\r\n    */\r\n   useEffect(() => {\r\n     return () => {\r\n-      handleStop();\r\n+      if (socket && roomId) {\r\n+        socket.emit(\"leave-room\", roomId);\r\n+        console.log(\"👋 Left room:\", roomId);\r\n+      }\r\n     };\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, []);\r\n+  }, [socket, roomId]);\r\n \r\n   return (\r\n     <div className=\"flex flex-col md:flex-row h-screen\">\r\n       {/* Video Section */}\r\n       <div className=\"flex-1 bg-black flex items-center justify-center relative\">\r\n-        {!chatStarted ? (\r\n-          <div className=\"flex flex-col items-center justify-center space-y-4\">\r\n-<Button\r\n-  label=\"Start\"\r\n-  variant=\"start\"\r\n-  onClick={handleStart}\r\n-/>          </div>\r\n-        ) : loading ? (\r\n+        {loading ? (\r\n           <FindingPartner />\r\n         ) : (\r\n           <>\r\n             <div className=\"absolute bottom-4 right-4 w-40 h-40 border-2 border-white rounded-md overflow-hidden\">\r\n@@ -158,16 +115,8 @@\n                 <div className=\"text-white text-sm\">Loading camera...</div>\r\n               )}\r\n             </div>\r\n             <RemoteVideo stream={remoteStream} />\r\n-\r\n-            {/* Stop button */}\r\n-            <div className=\"absolute top-4 right-4\">\r\n-<Button\r\n-  label=\"Stop\"\r\n-  variant=\"stop\"\r\n-  onClick={handleStop}\r\n-/>            </div>\r\n           </>\r\n         )}\r\n       </div>\r\n \r\n"
                },
                {
                    "date": 1752306490981,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,21 +6,23 @@\n import LocalVideo from \"../../../components/video/LocalVideo\";\r\n import RemoteVideo from \"../../../components/video/RemoteVideo\";\r\n import ChatBox from \"../../../components/chat/ChatBox\";\r\n import FindingPartner from \"./FindingPartner\";\r\n+import Button from \"../../../components/common/Button\";\r\n \r\n export default function AnonymousChatRoom() {\r\n   const [roomId, setRoomId] = useState<string | null>(null);\r\n   const [isOfferer, setIsOfferer] = useState<boolean | null>(null);\r\n-  const [loading, setLoading] = useState(true);\r\n+  const [loading, setLoading] = useState(false);\r\n+  const [chatStarted, setChatStarted] = useState(false);\r\n \r\n   const socket = useSocket();\r\n \r\n   // ✅ Initialize WebRTC only when roomId & isOfferer are assigned\r\n-  const { localStream, remoteStream } = useWebRTC(roomId, isOfferer);\r\n+  const { localStream, remoteStream, stopWebRTC } = useWebRTC(roomId, isOfferer);\r\n \r\n   /**\r\n-   * ✅ Handle 'matched' event from server with useCallback\r\n+   * ✅ Handle 'matched' event from server\r\n    */\r\n   const handleMatched = useCallback(\r\n     ({\r\n       roomId,\r\n@@ -33,8 +35,9 @@\n     }) => {\r\n       console.log(\"🎉 Matched in room:\", roomId, \"Offerer:\", isOfferer);\r\n       setRoomId(roomId);\r\n       setIsOfferer(isOfferer);\r\n+      setLoading(false);\r\n \r\n       // ✅ Join assigned room after server matching\r\n       socket?.emit(\"join-room\", roomId);\r\n     },\r\n@@ -55,9 +58,9 @@\n     };\r\n   }, [socket, handleMatched]);\r\n \r\n   /**\r\n-   * ✅ Listen for socket connect/disconnect for stability\r\n+   * ✅ Listen for socket connect/disconnect\r\n    */\r\n   useEffect(() => {\r\n     if (!socket) return;\r\n \r\n@@ -88,27 +91,68 @@\n     }\r\n   }, [remoteStream]);\r\n \r\n   /**\r\n-   * ✅ Leave room on unmount for cleanup\r\n+   * ✅ Leave room on unmount\r\n    */\r\n   useEffect(() => {\r\n     return () => {\r\n       if (socket && roomId) {\r\n         socket.emit(\"leave-room\", roomId);\r\n         console.log(\"👋 Left room:\", roomId);\r\n+        stopWebRTC();\r\n       }\r\n     };\r\n-  }, [socket, roomId]);\r\n+  }, [socket, roomId, stopWebRTC]);\r\n \r\n+  /**\r\n+   * ✅ Start chat handler\r\n+   */\r\n+  const handleStart = () => {\r\n+    setLoading(true);\r\n+    setChatStarted(true);\r\n+    socket?.emit(\"find-partner\");\r\n+    console.log(\"🔍 Looking for partner...\");\r\n+  };\r\n+\r\n+  /**\r\n+   * ✅ Stop chat handler\r\n+   */\r\n+  const handleStop = () => {\r\n+    if (roomId) {\r\n+      socket?.emit(\"leave-room\", roomId);\r\n+      console.log(\"🛑 Stopped chat, left room:\", roomId);\r\n+    }\r\n+    stopWebRTC();\r\n+    setRoomId(null);\r\n+    setIsOfferer(null);\r\n+    setChatStarted(false);\r\n+    setLoading(false);\r\n+  };\r\n+\r\n+  /**\r\n+   * ✅ Skip partner handler\r\n+   */\r\n+  const handleSkip = () => {\r\n+    console.log(\"⏭️ Skipping to next partner...\");\r\n+    handleStop(); // Leave current room & cleanup\r\n+    handleStart(); // Find next partner\r\n+  };\r\n+\r\n   return (\r\n     <div className=\"flex flex-col md:flex-row h-screen\">\r\n       {/* Video Section */}\r\n       <div className=\"flex-1 bg-black flex items-center justify-center relative\">\r\n-        {loading ? (\r\n+        {!chatStarted ? (\r\n+          <Button label=\"Start\" onClick={handleStart} />\r\n+        ) : loading ? (\r\n           <FindingPartner />\r\n         ) : (\r\n           <>\r\n+            <div className=\"absolute top-4 left-4 flex gap-2\">\r\n+              <Button label=\"Stop\" onClick={handleStop} className=\"bg-red-600 hover:bg-red-700\" />\r\n+              <Button label=\"Skip\" onClick={handleSkip} className=\"bg-yellow-600 hover:bg-yellow-700\" />\r\n+            </div>\r\n             <div className=\"absolute bottom-4 right-4 w-40 h-40 border-2 border-white rounded-md overflow-hidden\">\r\n               {localStream ? (\r\n                 <LocalVideo stream={localStream} />\r\n               ) : (\r\n"
                },
                {
                    "date": 1752307453523,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,23 +6,21 @@\n import LocalVideo from \"../../../components/video/LocalVideo\";\r\n import RemoteVideo from \"../../../components/video/RemoteVideo\";\r\n import ChatBox from \"../../../components/chat/ChatBox\";\r\n import FindingPartner from \"./FindingPartner\";\r\n-import Button from \"../../../components/common/Button\";\r\n \r\n export default function AnonymousChatRoom() {\r\n   const [roomId, setRoomId] = useState<string | null>(null);\r\n   const [isOfferer, setIsOfferer] = useState<boolean | null>(null);\r\n-  const [loading, setLoading] = useState(false);\r\n-  const [chatStarted, setChatStarted] = useState(false);\r\n+  const [loading, setLoading] = useState(true);\r\n \r\n   const socket = useSocket();\r\n \r\n   // ✅ Initialize WebRTC only when roomId & isOfferer are assigned\r\n-  const { localStream, remoteStream, stopWebRTC } = useWebRTC(roomId, isOfferer);\r\n+  const { localStream, remoteStream } = useWebRTC(roomId, isOfferer);\r\n \r\n   /**\r\n-   * ✅ Handle 'matched' event from server\r\n+   * ✅ Handle 'matched' event from server with useCallback\r\n    */\r\n   const handleMatched = useCallback(\r\n     ({\r\n       roomId,\r\n@@ -35,9 +33,8 @@\n     }) => {\r\n       console.log(\"🎉 Matched in room:\", roomId, \"Offerer:\", isOfferer);\r\n       setRoomId(roomId);\r\n       setIsOfferer(isOfferer);\r\n-      setLoading(false);\r\n \r\n       // ✅ Join assigned room after server matching\r\n       socket?.emit(\"join-room\", roomId);\r\n     },\r\n@@ -58,9 +55,9 @@\n     };\r\n   }, [socket, handleMatched]);\r\n \r\n   /**\r\n-   * ✅ Listen for socket connect/disconnect\r\n+   * ✅ Listen for socket connect/disconnect for stability\r\n    */\r\n   useEffect(() => {\r\n     if (!socket) return;\r\n \r\n@@ -91,68 +88,27 @@\n     }\r\n   }, [remoteStream]);\r\n \r\n   /**\r\n-   * ✅ Leave room on unmount\r\n+   * ✅ Leave room on unmount for cleanup\r\n    */\r\n   useEffect(() => {\r\n     return () => {\r\n       if (socket && roomId) {\r\n         socket.emit(\"leave-room\", roomId);\r\n         console.log(\"👋 Left room:\", roomId);\r\n-        stopWebRTC();\r\n       }\r\n     };\r\n-  }, [socket, roomId, stopWebRTC]);\r\n+  }, [socket, roomId]);\r\n \r\n-  /**\r\n-   * ✅ Start chat handler\r\n-   */\r\n-  const handleStart = () => {\r\n-    setLoading(true);\r\n-    setChatStarted(true);\r\n-    socket?.emit(\"find-partner\");\r\n-    console.log(\"🔍 Looking for partner...\");\r\n-  };\r\n-\r\n-  /**\r\n-   * ✅ Stop chat handler\r\n-   */\r\n-  const handleStop = () => {\r\n-    if (roomId) {\r\n-      socket?.emit(\"leave-room\", roomId);\r\n-      console.log(\"🛑 Stopped chat, left room:\", roomId);\r\n-    }\r\n-    stopWebRTC();\r\n-    setRoomId(null);\r\n-    setIsOfferer(null);\r\n-    setChatStarted(false);\r\n-    setLoading(false);\r\n-  };\r\n-\r\n-  /**\r\n-   * ✅ Skip partner handler\r\n-   */\r\n-  const handleSkip = () => {\r\n-    console.log(\"⏭️ Skipping to next partner...\");\r\n-    handleStop(); // Leave current room & cleanup\r\n-    handleStart(); // Find next partner\r\n-  };\r\n-\r\n   return (\r\n     <div className=\"flex flex-col md:flex-row h-screen\">\r\n       {/* Video Section */}\r\n       <div className=\"flex-1 bg-black flex items-center justify-center relative\">\r\n-        {!chatStarted ? (\r\n-          <Button label=\"Start\" onClick={handleStart} />\r\n-        ) : loading ? (\r\n+        {loading ? (\r\n           <FindingPartner />\r\n         ) : (\r\n           <>\r\n-            <div className=\"absolute top-4 left-4 flex gap-2\">\r\n-              <Button label=\"Stop\" onClick={handleStop} className=\"bg-red-600 hover:bg-red-700\" />\r\n-              <Button label=\"Skip\" onClick={handleSkip} className=\"bg-yellow-600 hover:bg-yellow-700\" />\r\n-            </div>\r\n             <div className=\"absolute bottom-4 right-4 w-40 h-40 border-2 border-white rounded-md overflow-hidden\">\r\n               {localStream ? (\r\n                 <LocalVideo stream={localStream} />\r\n               ) : (\r\n"
                },
                {
                    "date": 1752309718605,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,61 +10,52 @@\n \r\n export default function AnonymousChatRoom() {\r\n   const [roomId, setRoomId] = useState<string | null>(null);\r\n   const [isOfferer, setIsOfferer] = useState<boolean | null>(null);\r\n-  const [loading, setLoading] = useState(true);\r\n+  const [loading, setLoading] = useState(false);\r\n+  const [sessionStarted, setSessionStarted] = useState(false);\r\n \r\n   const socket = useSocket();\r\n \r\n-  // ✅ Initialize WebRTC only when roomId & isOfferer are assigned\r\n-  const { localStream, remoteStream } = useWebRTC(roomId, isOfferer);\r\n+  const { localStream, remoteStream, start, stop, isStarted } = useWebRTC(roomId, isOfferer);\r\n \r\n   /**\r\n-   * ✅ Handle 'matched' event from server with useCallback\r\n+   * ✅ Handle 'matched' event from server\r\n    */\r\n   const handleMatched = useCallback(\r\n-    ({\r\n-      roomId,\r\n-      partnerId,\r\n-      isOfferer,\r\n-    }: {\r\n-      roomId: string;\r\n-      partnerId: string;\r\n-      isOfferer: boolean;\r\n-    }) => {\r\n+    ({ roomId, isOfferer }: { roomId: string; partnerId: string; isOfferer: boolean }) => {\r\n       console.log(\"🎉 Matched in room:\", roomId, \"Offerer:\", isOfferer);\r\n       setRoomId(roomId);\r\n       setIsOfferer(isOfferer);\r\n-\r\n-      // ✅ Join assigned room after server matching\r\n-      socket?.emit(\"join-room\", roomId);\r\n+      setLoading(false);\r\n     },\r\n-    [socket]\r\n+    []\r\n   );\r\n \r\n   /**\r\n    * ✅ Register matched event listener\r\n    */\r\n   useEffect(() => {\r\n     if (!socket) return;\r\n \r\n-    socket.off(\"matched\", handleMatched); // Prevent duplicate listeners\r\n+    socket.off(\"matched\", handleMatched);\r\n     socket.on(\"matched\", handleMatched);\r\n \r\n     return () => {\r\n       socket.off(\"matched\", handleMatched);\r\n     };\r\n   }, [socket, handleMatched]);\r\n \r\n   /**\r\n-   * ✅ Listen for socket connect/disconnect for stability\r\n+   * ✅ Socket connect/disconnect handlers\r\n    */\r\n   useEffect(() => {\r\n     if (!socket) return;\r\n \r\n     const handleDisconnect = () => {\r\n       console.log(\"⚠️ Disconnected from socket server\");\r\n-      setLoading(true);\r\n+      setLoading(false);\r\n+      setSessionStarted(false);\r\n     };\r\n \r\n     const handleConnect = () => {\r\n       console.log(\"✅ Connected to socket server:\", socket.id);\r\n@@ -79,37 +70,92 @@\n     };\r\n   }, [socket]);\r\n \r\n   /**\r\n-   * ✅ Update loading state when remote stream arrives\r\n+   * ✅ Leave room on unmount\r\n    */\r\n   useEffect(() => {\r\n-    if (remoteStream) {\r\n-      setLoading(false);\r\n-    }\r\n-  }, [remoteStream]);\r\n-\r\n-  /**\r\n-   * ✅ Leave room on unmount for cleanup\r\n-   */\r\n-  useEffect(() => {\r\n     return () => {\r\n       if (socket && roomId) {\r\n         socket.emit(\"leave-room\", roomId);\r\n         console.log(\"👋 Left room:\", roomId);\r\n       }\r\n+      stop();\r\n     };\r\n-  }, [socket, roomId]);\r\n+  }, [socket, roomId, stop]);\r\n \r\n+  /**\r\n+   * 🔘 Start, Stop, and Skip Handlers\r\n+   */\r\n+  const handleStart = () => {\r\n+    if (!sessionStarted) {\r\n+      setLoading(true);\r\n+      setSessionStarted(true);\r\n+      socket?.emit(\"start-looking\");\r\n+      console.log(\"🔎 Started looking for partner\");\r\n+    }\r\n+  };\r\n+\r\n+  const handleStop = () => {\r\n+    stop();\r\n+    setRoomId(null);\r\n+    setIsOfferer(null);\r\n+    setSessionStarted(false);\r\n+    setLoading(false);\r\n+    console.log(\"🛑 Stopped session\");\r\n+  };\r\n+\r\n+  const handleSkip = () => {\r\n+    handleStop();\r\n+    handleStart();\r\n+    console.log(\"⏭️ Skipped to new partner\");\r\n+  };\r\n+\r\n+  /**\r\n+   * ✅ Dynamic Button Label\r\n+   */\r\n+  const renderControlButton = () => {\r\n+    if (!sessionStarted) {\r\n+      return (\r\n+        <button\r\n+          onClick={handleStart}\r\n+          className=\"bg-green-600 hover:bg-green-700 text-white font-semibold px-4 py-2 rounded-lg shadow\"\r\n+        >\r\n+          Start\r\n+        </button>\r\n+      );\r\n+    } else if (loading) {\r\n+      return (\r\n+        <button\r\n+          onClick={handleStop}\r\n+          className=\"bg-red-600 hover:bg-red-700 text-white font-semibold px-4 py-2 rounded-lg shadow\"\r\n+        >\r\n+          Stop\r\n+        </button>\r\n+      );\r\n+    } else {\r\n+      return (\r\n+        <button\r\n+          onClick={handleSkip}\r\n+          className=\"bg-yellow-500 hover:bg-yellow-600 text-white font-semibold px-4 py-2 rounded-lg shadow\"\r\n+        >\r\n+          Skip\r\n+        </button>\r\n+      );\r\n+    }\r\n+  };\r\n+\r\n   return (\r\n-    <div className=\"flex flex-col md:flex-row h-screen\">\r\n+    <div className=\"flex flex-col md:flex-row h-screen bg-neutral-50 dark:bg-neutral-900\">\r\n       {/* Video Section */}\r\n       <div className=\"flex-1 bg-black flex items-center justify-center relative\">\r\n-        {loading ? (\r\n+        {!sessionStarted ? (\r\n+          <div className=\"text-white text-xl font-semibold\">Click Start to begin searching</div>\r\n+        ) : loading ? (\r\n           <FindingPartner />\r\n         ) : (\r\n           <>\r\n-            <div className=\"absolute bottom-4 right-4 w-40 h-40 border-2 border-white rounded-md overflow-hidden\">\r\n+            <div className=\"absolute bottom-4 right-4 w-40 h-40 border-2 border-white rounded-md overflow-hidden shadow-lg\">\r\n               {localStream ? (\r\n                 <LocalVideo stream={localStream} />\r\n               ) : (\r\n                 <div className=\"text-white text-sm\">Loading camera...</div>\r\n@@ -121,9 +167,16 @@\n       </div>\r\n \r\n       {/* Chat Section */}\r\n       <div className=\"md:w-1/3 bg-neutral-100 dark:bg-neutral-800 border-l border-neutral-300 dark:border-neutral-700 flex flex-col\">\r\n-        {roomId && <ChatBox socket={socket} roomId={roomId} />}\r\n+        <div className=\"flex-grow\">\r\n+          {roomId && <ChatBox socket={socket} roomId={roomId} />}\r\n+        </div>\r\n+\r\n+        {/* Dynamic Start/Stop/Skip Button */}\r\n+        <div className=\"p-4 border-t border-neutral-300 dark:border-neutral-700 flex justify-end\">\r\n+          {renderControlButton()}\r\n+        </div>\r\n       </div>\r\n     </div>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1752310542803,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n   const [sessionStarted, setSessionStarted] = useState(false);\r\n \r\n   const socket = useSocket();\r\n \r\n-  const { localStream, remoteStream, start, stop, isStarted } = useWebRTC(roomId, isOfferer);\r\n+  const { localStream, remoteStream } = useWebRTC(roomId, isOfferer);\r\n \r\n   /**\r\n    * ✅ Handle 'matched' event from server\r\n    */\r\n@@ -78,11 +78,10 @@\n       if (socket && roomId) {\r\n         socket.emit(\"leave-room\", roomId);\r\n         console.log(\"👋 Left room:\", roomId);\r\n       }\r\n-      stop();\r\n     };\r\n-  }, [socket, roomId, stop]);\r\n+  }, [socket, roomId]);\r\n \r\n   /**\r\n    * 🔘 Start, Stop, and Skip Handlers\r\n    */\r\n@@ -95,14 +94,16 @@\n     }\r\n   };\r\n \r\n   const handleStop = () => {\r\n-    stop();\r\n+    if (roomId) {\r\n+      socket?.emit(\"leave-room\", roomId);\r\n+      console.log(\"🛑 Stopped session and left room:\", roomId);\r\n+    }\r\n     setRoomId(null);\r\n     setIsOfferer(null);\r\n     setSessionStarted(false);\r\n     setLoading(false);\r\n-    console.log(\"🛑 Stopped session\");\r\n   };\r\n \r\n   const handleSkip = () => {\r\n     handleStop();\r\n"
                },
                {
                    "date": 1752311652784,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,12 @@\n   const [sessionStarted, setSessionStarted] = useState(false);\r\n \r\n   const socket = useSocket();\r\n \r\n-  const { localStream, remoteStream } = useWebRTC(roomId, isOfferer);\r\n+  /**\r\n+   * ✅ Initialize WebRTC only when session starts\r\n+   */\r\n+  const { localStream, remoteStream } = useWebRTC(roomId, isOfferer, sessionStarted);\r\n \r\n   /**\r\n    * ✅ Handle 'matched' event from server\r\n    */\r\n@@ -118,27 +121,27 @@\n     if (!sessionStarted) {\r\n       return (\r\n         <button\r\n           onClick={handleStart}\r\n-          className=\"bg-green-600 hover:bg-green-700 text-white font-semibold px-4 py-2 rounded-lg shadow\"\r\n+          className=\"bg-green-600 hover:bg-green-700 text-white font-semibold px-4 py-2 rounded-lg shadow transition duration-200\"\r\n         >\r\n           Start\r\n         </button>\r\n       );\r\n     } else if (loading) {\r\n       return (\r\n         <button\r\n           onClick={handleStop}\r\n-          className=\"bg-red-600 hover:bg-red-700 text-white font-semibold px-4 py-2 rounded-lg shadow\"\r\n+          className=\"bg-red-600 hover:bg-red-700 text-white font-semibold px-4 py-2 rounded-lg shadow transition duration-200\"\r\n         >\r\n           Stop\r\n         </button>\r\n       );\r\n     } else {\r\n       return (\r\n         <button\r\n           onClick={handleSkip}\r\n-          className=\"bg-yellow-500 hover:bg-yellow-600 text-white font-semibold px-4 py-2 rounded-lg shadow\"\r\n+          className=\"bg-yellow-500 hover:bg-yellow-600 text-white font-semibold px-4 py-2 rounded-lg shadow transition duration-200\"\r\n         >\r\n           Skip\r\n         </button>\r\n       );\r\n@@ -154,16 +157,16 @@\n         ) : loading ? (\r\n           <FindingPartner />\r\n         ) : (\r\n           <>\r\n+            <RemoteVideo stream={remoteStream} />\r\n             <div className=\"absolute bottom-4 right-4 w-40 h-40 border-2 border-white rounded-md overflow-hidden shadow-lg\">\r\n               {localStream ? (\r\n                 <LocalVideo stream={localStream} />\r\n               ) : (\r\n                 <div className=\"text-white text-sm\">Loading camera...</div>\r\n               )}\r\n             </div>\r\n-            <RemoteVideo stream={remoteStream} />\r\n           </>\r\n         )}\r\n       </div>\r\n \r\n"
                },
                {
                    "date": 1752319407180,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,168 @@\n+\"use client\";\r\n+\r\n+import React, { useEffect, useState, useCallback } from \"react\";\r\n+import useWebRTC from \"../hooks/useWebRTC\";\r\n+import useSocket from \"../hooks/useSocket\";\r\n+import LocalVideo from \"../../../components/video/LocalVideo\";\r\n+import RemoteVideo from \"../../../components/video/RemoteVideo\";\r\n+import ChatBox from \"../../../components/chat/ChatBox\";\r\n+import FindingPartner from \"./FindingPartner\";\r\n+import { Video, Users, RefreshCcw, CircleStop } from \"lucide-react\";\r\n+\r\n+export default function AnonymousChatRoom() {\r\n+  const [roomId, setRoomId] = useState<string | null>(null);\r\n+  const [isOfferer, setIsOfferer] = useState<boolean | null>(null);\r\n+  const [loading, setLoading] = useState(false);\r\n+  const [sessionStarted, setSessionStarted] = useState(false);\r\n+\r\n+  const socket = useSocket();\r\n+  const { localStream, remoteStream } = useWebRTC(roomId, isOfferer, sessionStarted);\r\n+\r\n+  const handleMatched = useCallback(({ roomId, isOfferer }: { roomId: string; partnerId: string; isOfferer: boolean }) => {\r\n+    console.log(\"🎉 Matched in room:\", roomId, \"Offerer:\", isOfferer);\r\n+    setRoomId(roomId);\r\n+    setIsOfferer(isOfferer);\r\n+    setLoading(false);\r\n+  }, []);\r\n+\r\n+  useEffect(() => {\r\n+    if (!socket) return;\r\n+    socket.off(\"matched\", handleMatched);\r\n+    socket.on(\"matched\", handleMatched);\r\n+    return () => {\r\n+      socket.off(\"matched\", handleMatched);\r\n+    };\r\n+  }, [socket, handleMatched]);\r\n+\r\n+  useEffect(() => {\r\n+    if (!socket) return;\r\n+\r\n+    const handleDisconnect = () => {\r\n+      console.log(\"⚠️ Disconnected from socket server\");\r\n+      setLoading(false);\r\n+      setSessionStarted(false);\r\n+    };\r\n+\r\n+    const handleConnect = () => {\r\n+      console.log(\"✅ Connected to socket server:\", socket.id);\r\n+    };\r\n+\r\n+    socket.on(\"disconnect\", handleDisconnect);\r\n+    socket.on(\"connect\", handleConnect);\r\n+\r\n+    return () => {\r\n+      socket.off(\"disconnect\", handleDisconnect);\r\n+      socket.off(\"connect\", handleConnect);\r\n+    };\r\n+  }, [socket]);\r\n+\r\n+  useEffect(() => {\r\n+    return () => {\r\n+      if (socket && roomId) {\r\n+        socket.emit(\"leave-room\", roomId);\r\n+        console.log(\"👋 Left room:\", roomId);\r\n+      }\r\n+    };\r\n+  }, [socket, roomId]);\r\n+\r\n+  const handleStart = () => {\r\n+    if (!sessionStarted) {\r\n+      setLoading(true);\r\n+      setSessionStarted(true);\r\n+      socket?.emit(\"start-looking\");\r\n+      console.log(\"🔎 Started looking for partner\");\r\n+    }\r\n+  };\r\n+\r\n+  const handleStop = () => {\r\n+    if (roomId) {\r\n+      socket?.emit(\"leave-room\", roomId);\r\n+      console.log(\"🛑 Stopped session and left room:\", roomId);\r\n+    }\r\n+    setRoomId(null);\r\n+    setIsOfferer(null);\r\n+    setSessionStarted(false);\r\n+    setLoading(false);\r\n+  };\r\n+\r\n+  const handleSkip = () => {\r\n+    handleStop();\r\n+    handleStart();\r\n+    console.log(\"⏭️ Skipped to new partner\");\r\n+  };\r\n+\r\n+  const renderControlButton = () => {\r\n+    const baseClasses = \"flex items-center gap-2 px-4 py-2 rounded-lg shadow font-medium transition\";\r\n+    if (!sessionStarted) {\r\n+      return (\r\n+        <button\r\n+          onClick={handleStart}\r\n+          className={`${baseClasses} bg-green-600 hover:bg-green-700 text-white`}\r\n+        >\r\n+          <Users className=\"w-5 h-5\" />\r\n+          Start\r\n+        </button>\r\n+      );\r\n+    } else if (loading) {\r\n+      return (\r\n+        <button\r\n+          onClick={handleStop}\r\n+          className={`${baseClasses} bg-red-600 hover:bg-red-700 text-white`}\r\n+        >\r\n+          <CircleStop className=\"w-5 h-5\" />\r\n+          Stop\r\n+        </button>\r\n+      );\r\n+    } else {\r\n+      return (\r\n+        <button\r\n+          onClick={handleSkip}\r\n+          className={`${baseClasses} bg-yellow-500 hover:bg-yellow-600 text-white`}\r\n+        >\r\n+          <RefreshCcw className=\"w-5 h-5\" />\r\n+          Skip\r\n+        </button>\r\n+      );\r\n+    }\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"grid md:grid-cols-3 h-screen bg-neutral-100 dark:bg-neutral-900\">\r\n+      {/* Video Section */}\r\n+      <div className=\"md:col-span-2 relative flex items-center justify-center bg-black\">\r\n+        {!sessionStarted ? (\r\n+          <div className=\"text-white text-xl font-semibold\">Click Start to begin searching</div>\r\n+        ) : loading ? (\r\n+          <FindingPartner />\r\n+        ) : (\r\n+          <>\r\n+            <RemoteVideo stream={remoteStream} />\r\n+            <div className=\"absolute bottom-5 right-5 w-36 h-36 border-2 border-white rounded overflow-hidden\">\r\n+              {localStream ? (\r\n+                <LocalVideo stream={localStream} />\r\n+              ) : (\r\n+                <div className=\"text-white text-sm p-2\">Loading camera...</div>\r\n+              )}\r\n+            </div>\r\n+          </>\r\n+        )}\r\n+      </div>\r\n+\r\n+      {/* Chat + Controls */}\r\n+      <div className=\"flex flex-col border-l border-neutral-300 dark:border-neutral-700\">\r\n+        <div className=\"flex-grow overflow-y-auto\">\r\n+          {roomId ? (\r\n+            <ChatBox socket={socket} roomId={roomId} />\r\n+          ) : (\r\n+            <div className=\"flex items-center justify-center h-full text-neutral-400 text-sm px-4\">\r\n+              You’ll be able to chat once you’re matched.\r\n+            </div>\r\n+          )}\r\n+        </div>\r\n+        <div className=\"p-4 border-t border-neutral-300 dark:border-neutral-700 bg-white dark:bg-neutral-800 flex justify-end\">\r\n+          {renderControlButton()}\r\n+        </div>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1752324807137,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,10 +4,10 @@\n import useWebRTC from \"../hooks/useWebRTC\";\r\n import useSocket from \"../hooks/useSocket\";\r\n import LocalVideo from \"../../../components/video/LocalVideo\";\r\n import RemoteVideo from \"../../../components/video/RemoteVideo\";\r\n-import ChatBox from \"../../../components/chat/ChatBox\";\r\n-import FindingPartner from \"./FindingPartner\";\r\n+import ChatBox from \"../\";\r\n+import FindingPartner from \"./FindingPartner.jsx\";\r\n import { Video, Users, RefreshCcw, CircleStop } from \"lucide-react\";\r\n \r\n export default function AnonymousChatRoom() {\r\n   const [roomId, setRoomId] = useState<string | null>(null);\r\n@@ -165,190 +165,4 @@\n       </div>\r\n     </div>\r\n   );\r\n }\r\n-\"use client\";\r\n-\r\n-import React, { useEffect, useState, useCallback } from \"react\";\r\n-import useWebRTC from \"../hooks/useWebRTC\";\r\n-import useSocket from \"../hooks/useSocket\";\r\n-import LocalVideo from \"../../../components/video/LocalVideo\";\r\n-import RemoteVideo from \"../../../components/video/RemoteVideo\";\r\n-import ChatBox from \"../../../components/chat/ChatBox\";\r\n-import FindingPartner from \"./FindingPartner\";\r\n-\r\n-export default function AnonymousChatRoom() {\r\n-  const [roomId, setRoomId] = useState<string | null>(null);\r\n-  const [isOfferer, setIsOfferer] = useState<boolean | null>(null);\r\n-  const [loading, setLoading] = useState(false);\r\n-  const [sessionStarted, setSessionStarted] = useState(false);\r\n-\r\n-  const socket = useSocket();\r\n-\r\n-  /**\r\n-   * ✅ Initialize WebRTC only when session starts\r\n-   */\r\n-  const { localStream, remoteStream } = useWebRTC(roomId, isOfferer, sessionStarted);\r\n-\r\n-  /**\r\n-   * ✅ Handle 'matched' event from server\r\n-   */\r\n-  const handleMatched = useCallback(\r\n-    ({ roomId, isOfferer }: { roomId: string; partnerId: string; isOfferer: boolean }) => {\r\n-      console.log(\"🎉 Matched in room:\", roomId, \"Offerer:\", isOfferer);\r\n-      setRoomId(roomId);\r\n-      setIsOfferer(isOfferer);\r\n-      setLoading(false);\r\n-    },\r\n-    []\r\n-  );\r\n-\r\n-  /**\r\n-   * ✅ Register matched event listener\r\n-   */\r\n-  useEffect(() => {\r\n-    if (!socket) return;\r\n-\r\n-    socket.off(\"matched\", handleMatched);\r\n-    socket.on(\"matched\", handleMatched);\r\n-\r\n-    return () => {\r\n-      socket.off(\"matched\", handleMatched);\r\n-    };\r\n-  }, [socket, handleMatched]);\r\n-\r\n-  /**\r\n-   * ✅ Socket connect/disconnect handlers\r\n-   */\r\n-  useEffect(() => {\r\n-    if (!socket) return;\r\n-\r\n-    const handleDisconnect = () => {\r\n-      console.log(\"⚠️ Disconnected from socket server\");\r\n-      setLoading(false);\r\n-      setSessionStarted(false);\r\n-    };\r\n-\r\n-    const handleConnect = () => {\r\n-      console.log(\"✅ Connected to socket server:\", socket.id);\r\n-    };\r\n-\r\n-    socket.on(\"disconnect\", handleDisconnect);\r\n-    socket.on(\"connect\", handleConnect);\r\n-\r\n-    return () => {\r\n-      socket.off(\"disconnect\", handleDisconnect);\r\n-      socket.off(\"connect\", handleConnect);\r\n-    };\r\n-  }, [socket]);\r\n-\r\n-  /**\r\n-   * ✅ Leave room on unmount\r\n-   */\r\n-  useEffect(() => {\r\n-    return () => {\r\n-      if (socket && roomId) {\r\n-        socket.emit(\"leave-room\", roomId);\r\n-        console.log(\"👋 Left room:\", roomId);\r\n-      }\r\n-    };\r\n-  }, [socket, roomId]);\r\n-\r\n-  /**\r\n-   * 🔘 Start, Stop, and Skip Handlers\r\n-   */\r\n-  const handleStart = () => {\r\n-    if (!sessionStarted) {\r\n-      setLoading(true);\r\n-      setSessionStarted(true);\r\n-      socket?.emit(\"start-looking\");\r\n-      console.log(\"🔎 Started looking for partner\");\r\n-    }\r\n-  };\r\n-\r\n-  const handleStop = () => {\r\n-    if (roomId) {\r\n-      socket?.emit(\"leave-room\", roomId);\r\n-      console.log(\"🛑 Stopped session and left room:\", roomId);\r\n-    }\r\n-    setRoomId(null);\r\n-    setIsOfferer(null);\r\n-    setSessionStarted(false);\r\n-    setLoading(false);\r\n-  };\r\n-\r\n-  const handleSkip = () => {\r\n-    handleStop();\r\n-    handleStart();\r\n-    console.log(\"⏭️ Skipped to new partner\");\r\n-  };\r\n-\r\n-  /**\r\n-   * ✅ Dynamic Button Label\r\n-   */\r\n-  const renderControlButton = () => {\r\n-    if (!sessionStarted) {\r\n-      return (\r\n-        <button\r\n-          onClick={handleStart}\r\n-          className=\"bg-green-600 hover:bg-green-700 text-white font-semibold px-4 py-2 rounded-lg shadow transition duration-200\"\r\n-        >\r\n-          Start\r\n-        </button>\r\n-      );\r\n-    } else if (loading) {\r\n-      return (\r\n-        <button\r\n-          onClick={handleStop}\r\n-          className=\"bg-red-600 hover:bg-red-700 text-white font-semibold px-4 py-2 rounded-lg shadow transition duration-200\"\r\n-        >\r\n-          Stop\r\n-        </button>\r\n-      );\r\n-    } else {\r\n-      return (\r\n-        <button\r\n-          onClick={handleSkip}\r\n-          className=\"bg-yellow-500 hover:bg-yellow-600 text-white font-semibold px-4 py-2 rounded-lg shadow transition duration-200\"\r\n-        >\r\n-          Skip\r\n-        </button>\r\n-      );\r\n-    }\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"flex flex-col md:flex-row h-screen bg-neutral-50 dark:bg-neutral-900\">\r\n-      {/* Video Section */}\r\n-      <div className=\"flex-1 bg-black flex items-center justify-center relative\">\r\n-        {!sessionStarted ? (\r\n-          <div className=\"text-white text-xl font-semibold\">Click Start to begin searching</div>\r\n-        ) : loading ? (\r\n-          <FindingPartner />\r\n-        ) : (\r\n-          <>\r\n-            <RemoteVideo stream={remoteStream} />\r\n-            <div className=\"absolute bottom-4 right-4 w-40 h-40 border-2 border-white rounded-md overflow-hidden shadow-lg\">\r\n-              {localStream ? (\r\n-                <LocalVideo stream={localStream} />\r\n-              ) : (\r\n-                <div className=\"text-white text-sm\">Loading camera...</div>\r\n-              )}\r\n-            </div>\r\n-          </>\r\n-        )}\r\n-      </div>\r\n-\r\n-      {/* Chat Section */}\r\n-      <div className=\"md:w-1/3 bg-neutral-100 dark:bg-neutral-800 border-l border-neutral-300 dark:border-neutral-700 flex flex-col\">\r\n-        <div className=\"flex-grow\">\r\n-          {roomId && <ChatBox socket={socket} roomId={roomId} />}\r\n-        </div>\r\n-\r\n-        {/* Dynamic Start/Stop/Skip Button */}\r\n-        <div className=\"p-4 border-t border-neutral-300 dark:border-neutral-700 flex justify-end\">\r\n-          {renderControlButton()}\r\n-        </div>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1752324863191,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n import useWebRTC from \"../hooks/useWebRTC\";\r\n import useSocket from \"../hooks/useSocket\";\r\n import LocalVideo from \"../../../components/video/LocalVideo\";\r\n import RemoteVideo from \"../../../components/video/RemoteVideo\";\r\n-import ChatBox from \"../\";\r\n+import ChatBox from \"../services/\";\r\n import FindingPartner from \"./FindingPartner.jsx\";\r\n import { Video, Users, RefreshCcw, CircleStop } from \"lucide-react\";\r\n \r\n export default function AnonymousChatRoom() {\r\n"
                },
                {
                    "date": 1752324981391,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n import useWebRTC from \"../hooks/useWebRTC\";\r\n import useSocket from \"../hooks/useSocket\";\r\n import LocalVideo from \"../../../components/video/LocalVideo\";\r\n import RemoteVideo from \"../../../components/video/RemoteVideo\";\r\n-import ChatBox from \"../services/\";\r\n+import ChatBox from \"../../../components/chat/ChatBox\";\r\n import FindingPartner from \"./FindingPartner.jsx\";\r\n import { Video, Users, RefreshCcw, CircleStop } from \"lucide-react\";\r\n \r\n export default function AnonymousChatRoom() {\r\n"
                },
                {
                    "date": 1752325879772,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n import useSocket from \"../hooks/useSocket\";\r\n import LocalVideo from \"../../../components/video/LocalVideo\";\r\n import RemoteVideo from \"../../../components/video/RemoteVideo\";\r\n import ChatBox from \"../../../components/chat/ChatBox\";\r\n-import FindingPartner from \"./FindingPartner.jsx\";\r\n+import FindingPartner from \"./FindingPartner\";\r\n import { Video, Users, RefreshCcw, CircleStop } from \"lucide-react\";\r\n \r\n export default function AnonymousChatRoom() {\r\n   const [roomId, setRoomId] = useState<string | null>(null);\r\n"
                },
                {
                    "date": 1752334456520,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,8 @@\n import LocalVideo from \"../../../components/video/LocalVideo\";\r\n import RemoteVideo from \"../../../components/video/RemoteVideo\";\r\n import ChatBox from \"../../../components/chat/ChatBox\";\r\n import FindingPartner from \"./FindingPartner\";\r\n-import { Video, Users, RefreshCcw, CircleStop } from \"lucide-react\";\r\n \r\n export default function AnonymousChatRoom() {\r\n   const [roomId, setRoomId] = useState<string | null>(null);\r\n   const [isOfferer, setIsOfferer] = useState<boolean | null>(null);\r\n@@ -64,8 +63,9 @@\n       }\r\n     };\r\n   }, [socket, roomId]);\r\n \r\n+  // 🔁 Control functions passed into ChatBox\r\n   const handleStart = () => {\r\n     if (!sessionStarted) {\r\n       setLoading(true);\r\n       setSessionStarted(true);\r\n@@ -90,43 +90,8 @@\n     handleStart();\r\n     console.log(\"⏭️ Skipped to new partner\");\r\n   };\r\n \r\n-  const renderControlButton = () => {\r\n-    const baseClasses = \"flex items-center gap-2 px-4 py-2 rounded-lg shadow font-medium transition\";\r\n-    if (!sessionStarted) {\r\n-      return (\r\n-        <button\r\n-          onClick={handleStart}\r\n-          className={`${baseClasses} bg-green-600 hover:bg-green-700 text-white`}\r\n-        >\r\n-          <Users className=\"w-5 h-5\" />\r\n-          Start\r\n-        </button>\r\n-      );\r\n-    } else if (loading) {\r\n-      return (\r\n-        <button\r\n-          onClick={handleStop}\r\n-          className={`${baseClasses} bg-red-600 hover:bg-red-700 text-white`}\r\n-        >\r\n-          <CircleStop className=\"w-5 h-5\" />\r\n-          Stop\r\n-        </button>\r\n-      );\r\n-    } else {\r\n-      return (\r\n-        <button\r\n-          onClick={handleSkip}\r\n-          className={`${baseClasses} bg-yellow-500 hover:bg-yellow-600 text-white`}\r\n-        >\r\n-          <RefreshCcw className=\"w-5 h-5\" />\r\n-          Skip\r\n-        </button>\r\n-      );\r\n-    }\r\n-  };\r\n-\r\n   return (\r\n     <div className=\"grid md:grid-cols-3 h-screen bg-neutral-100 dark:bg-neutral-900\">\r\n       {/* Video Section */}\r\n       <div className=\"md:col-span-2 relative flex items-center justify-center bg-black\">\r\n@@ -151,18 +116,23 @@\n       {/* Chat + Controls */}\r\n       <div className=\"flex flex-col border-l border-neutral-300 dark:border-neutral-700\">\r\n         <div className=\"flex-grow overflow-y-auto\">\r\n           {roomId ? (\r\n-            <ChatBox socket={socket} roomId={roomId} />\r\n+            <ChatBox\r\n+              socket={socket}\r\n+              roomId={roomId}\r\n+              onStart={handleStart}\r\n+              onStop={handleStop}\r\n+              onSkip={handleSkip}\r\n+              sessionStarted={sessionStarted}\r\n+              loading={loading}\r\n+            />\r\n           ) : (\r\n             <div className=\"flex items-center justify-center h-full text-neutral-400 text-sm px-4\">\r\n               You’ll be able to chat once you’re matched.\r\n             </div>\r\n           )}\r\n         </div>\r\n-        <div className=\"p-4 border-t border-neutral-300 dark:border-neutral-700 bg-white dark:bg-neutral-800 flex justify-end\">\r\n-          {renderControlButton()}\r\n-        </div>\r\n       </div>\r\n     </div>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1752335633773,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,8 +6,9 @@\n import LocalVideo from \"../../../components/video/LocalVideo\";\r\n import RemoteVideo from \"../../../components/video/RemoteVideo\";\r\n import ChatBox from \"../../../components/chat/ChatBox\";\r\n import FindingPartner from \"./FindingPartner\";\r\n+import { Video, Users, RefreshCcw, CircleStop } from \"lucide-react\";\r\n \r\n export default function AnonymousChatRoom() {\r\n   const [roomId, setRoomId] = useState<string | null>(null);\r\n   const [isOfferer, setIsOfferer] = useState<boolean | null>(null);\r\n@@ -63,9 +64,8 @@\n       }\r\n     };\r\n   }, [socket, roomId]);\r\n \r\n-  // 🔁 Control functions passed into ChatBox\r\n   const handleStart = () => {\r\n     if (!sessionStarted) {\r\n       setLoading(true);\r\n       setSessionStarted(true);\r\n@@ -90,8 +90,43 @@\n     handleStart();\r\n     console.log(\"⏭️ Skipped to new partner\");\r\n   };\r\n \r\n+  const renderControlButton = () => {\r\n+    const baseClasses = \"flex items-center gap-2 px-4 py-2 rounded-lg shadow font-medium transition\";\r\n+    if (!sessionStarted) {\r\n+      return (\r\n+        <button\r\n+          onClick={handleStart}\r\n+          className={`${baseClasses} bg-green-600 hover:bg-green-700 text-white`}\r\n+        >\r\n+          <Users className=\"w-5 h-5\" />\r\n+          Start\r\n+        </button>\r\n+      );\r\n+    } else if (loading) {\r\n+      return (\r\n+        <button\r\n+          onClick={handleStop}\r\n+          className={`${baseClasses} bg-red-600 hover:bg-red-700 text-white`}\r\n+        >\r\n+          <CircleStop className=\"w-5 h-5\" />\r\n+          Stop\r\n+        </button>\r\n+      );\r\n+    } else {\r\n+      return (\r\n+        <button\r\n+          onClick={handleSkip}\r\n+          className={`${baseClasses} bg-yellow-500 hover:bg-yellow-600 text-white`}\r\n+        >\r\n+          <RefreshCcw className=\"w-5 h-5\" />\r\n+          Skip\r\n+        </button>\r\n+      );\r\n+    }\r\n+  };\r\n+\r\n   return (\r\n     <div className=\"grid md:grid-cols-3 h-screen bg-neutral-100 dark:bg-neutral-900\">\r\n       {/* Video Section */}\r\n       <div className=\"md:col-span-2 relative flex items-center justify-center bg-black\">\r\n@@ -116,23 +151,18 @@\n       {/* Chat + Controls */}\r\n       <div className=\"flex flex-col border-l border-neutral-300 dark:border-neutral-700\">\r\n         <div className=\"flex-grow overflow-y-auto\">\r\n           {roomId ? (\r\n-            <ChatBox\r\n-              socket={socket}\r\n-              roomId={roomId}\r\n-              onStart={handleStart}\r\n-              onStop={handleStop}\r\n-              onSkip={handleSkip}\r\n-              sessionStarted={sessionStarted}\r\n-              loading={loading}\r\n-            />\r\n+            <ChatBox socket={socket} roomId={roomId} />\r\n           ) : (\r\n             <div className=\"flex items-center justify-center h-full text-neutral-400 text-sm px-4\">\r\n               You’ll be able to chat once you’re matched.\r\n             </div>\r\n           )}\r\n         </div>\r\n+        <div className=\"p-4 border-t border-neutral-300 dark:border-neutral-700 bg-white dark:bg-neutral-800 flex justify-end\">\r\n+          {renderControlButton()}\r\n+        </div>\r\n       </div>\r\n     </div>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1752418722174,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n import LocalVideo from \"../../../components/video/LocalVideo\";\r\n import RemoteVideo from \"../../../components/video/RemoteVideo\";\r\n import ChatBox from \"../../../components/chat/ChatBox\";\r\n import FindingPartner from \"./FindingPartner\";\r\n-import { Video, Users, RefreshCcw, CircleStop } from \"lucide-react\";\r\n+import { Users, RefreshCcw, CircleStop } from \"lucide-react\";\r\n \r\n export default function AnonymousChatRoom() {\r\n   const [roomId, setRoomId] = useState<string | null>(null);\r\n   const [isOfferer, setIsOfferer] = useState<boolean | null>(null);\r\n@@ -17,14 +17,17 @@\n \r\n   const socket = useSocket();\r\n   const { localStream, remoteStream } = useWebRTC(roomId, isOfferer, sessionStarted);\r\n \r\n-  const handleMatched = useCallback(({ roomId, isOfferer }: { roomId: string; partnerId: string; isOfferer: boolean }) => {\r\n-    console.log(\"🎉 Matched in room:\", roomId, \"Offerer:\", isOfferer);\r\n-    setRoomId(roomId);\r\n-    setIsOfferer(isOfferer);\r\n-    setLoading(false);\r\n-  }, []);\r\n+  const handleMatched = useCallback(\r\n+    ({ roomId, isOfferer }: { roomId: string; partnerId: string; isOfferer: boolean }) => {\r\n+      console.log(\"🎉 Matched in room:\", roomId, \"Offerer:\", isOfferer);\r\n+      setRoomId(roomId);\r\n+      setIsOfferer(isOfferer);\r\n+      setLoading(false);\r\n+    },\r\n+    []\r\n+  );\r\n \r\n   useEffect(() => {\r\n     if (!socket) return;\r\n     socket.off(\"matched\", handleMatched);\r\n@@ -91,9 +94,10 @@\n     console.log(\"⏭️ Skipped to new partner\");\r\n   };\r\n \r\n   const renderControlButton = () => {\r\n-    const baseClasses = \"flex items-center gap-2 px-4 py-2 rounded-lg shadow font-medium transition\";\r\n+    const baseClasses =\r\n+      \"flex items-center gap-2 px-4 py-2 rounded-lg shadow font-medium transition whitespace-nowrap\";\r\n     if (!sessionStarted) {\r\n       return (\r\n         <button\r\n           onClick={handleStart}\r\n@@ -126,19 +130,21 @@\n     }\r\n   };\r\n \r\n   return (\r\n-    <div className=\"grid md:grid-cols-3 h-screen bg-neutral-100 dark:bg-neutral-900\">\r\n+    <div className=\"flex flex-col md:grid md:grid-cols-3 h-screen bg-neutral-100 dark:bg-neutral-900\">\r\n       {/* Video Section */}\r\n-      <div className=\"md:col-span-2 relative flex items-center justify-center bg-black\">\r\n+      <div className=\"md:col-span-2 relative flex items-center justify-center bg-black p-2 md:p-4\">\r\n         {!sessionStarted ? (\r\n-          <div className=\"text-white text-xl font-semibold\">Click Start to begin searching</div>\r\n+          <div className=\"text-white text-xl font-semibold text-center px-4\">\r\n+            Click Start to begin searching\r\n+          </div>\r\n         ) : loading ? (\r\n           <FindingPartner />\r\n         ) : (\r\n           <>\r\n             <RemoteVideo stream={remoteStream} />\r\n-            <div className=\"absolute bottom-5 right-5 w-36 h-36 border-2 border-white rounded overflow-hidden\">\r\n+            <div className=\"absolute top-5 right-5 w-40 h-40 md:w-48 md:h-48 rounded overflow-hidden border-2 border-white shadow-lg z-20\">\r\n               {localStream ? (\r\n                 <LocalVideo stream={localStream} />\r\n               ) : (\r\n                 <div className=\"text-white text-sm p-2\">Loading camera...</div>\r\n@@ -148,19 +154,21 @@\n         )}\r\n       </div>\r\n \r\n       {/* Chat + Controls */}\r\n-      <div className=\"flex flex-col border-l border-neutral-300 dark:border-neutral-700\">\r\n-        <div className=\"flex-grow overflow-y-auto\">\r\n+      <div className=\"flex flex-col h-full border-t md:border-t-0 md:border-l border-neutral-300 dark:border-neutral-700\">\r\n+        <div className=\"flex-grow overflow-y-auto bg-white dark:bg-neutral-900\">\r\n           {roomId ? (\r\n             <ChatBox socket={socket} roomId={roomId} />\r\n           ) : (\r\n-            <div className=\"flex items-center justify-center h-full text-neutral-400 text-sm px-4\">\r\n+            <div className=\"flex items-center justify-center h-full text-neutral-400 text-sm px-4 text-center\">\r\n               You’ll be able to chat once you’re matched.\r\n             </div>\r\n           )}\r\n         </div>\r\n-        <div className=\"p-4 border-t border-neutral-300 dark:border-neutral-700 bg-white dark:bg-neutral-800 flex justify-end\">\r\n+\r\n+        {/* Bottom Controls */}\r\n+        <div className=\"p-4 border-t border-neutral-300 dark:border-neutral-700 bg-white dark:bg-neutral-800 flex justify-end sticky bottom-0 z-10\">\r\n           {renderControlButton()}\r\n         </div>\r\n       </div>\r\n     </div>\r\n"
                },
                {
                    "date": 1752422744367,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,8 +13,9 @@\n   const [roomId, setRoomId] = useState<string | null>(null);\r\n   const [isOfferer, setIsOfferer] = useState<boolean | null>(null);\r\n   const [loading, setLoading] = useState(false);\r\n   const [sessionStarted, setSessionStarted] = useState(false);\r\n+  const [lastAction, setLastAction] = useState<\"skipped\" | null>(null); // 🔧 Track skip\r\n \r\n   const socket = useSocket();\r\n   const { localStream, remoteStream } = useWebRTC(roomId, isOfferer, sessionStarted);\r\n \r\n@@ -23,8 +24,9 @@\n       console.log(\"🎉 Matched in room:\", roomId, \"Offerer:\", isOfferer);\r\n       setRoomId(roomId);\r\n       setIsOfferer(isOfferer);\r\n       setLoading(false);\r\n+      setLastAction(null); // reset skip message\r\n     },\r\n     []\r\n   );\r\n \r\n@@ -90,8 +92,9 @@\n \r\n   const handleSkip = () => {\r\n     handleStop();\r\n     handleStart();\r\n+    setLastAction(\"skipped\");\r\n     console.log(\"⏭️ Skipped to new partner\");\r\n   };\r\n \r\n   const renderControlButton = () => {\r\n@@ -130,11 +133,11 @@\n     }\r\n   };\r\n \r\n   return (\r\n-    <div className=\"flex flex-col md:grid md:grid-cols-3 h-screen bg-neutral-100 dark:bg-neutral-900\">\r\n+    <div className=\"grid md:grid-cols-3 h-screen overflow-hidden bg-neutral-100 dark:bg-neutral-900\">\r\n       {/* Video Section */}\r\n-      <div className=\"md:col-span-2 relative flex items-center justify-center bg-black p-2 md:p-4\">\r\n+      <div className=\"md:col-span-2 relative flex items-center justify-center bg-black p-2 md:p-4 overflow-hidden\">\r\n         {!sessionStarted ? (\r\n           <div className=\"text-white text-xl font-semibold text-center px-4\">\r\n             Click Start to begin searching\r\n           </div>\r\n@@ -158,8 +161,12 @@\n       <div className=\"flex flex-col h-full border-t md:border-t-0 md:border-l border-neutral-300 dark:border-neutral-700\">\r\n         <div className=\"flex-grow overflow-y-auto bg-white dark:bg-neutral-900\">\r\n           {roomId ? (\r\n             <ChatBox socket={socket} roomId={roomId} />\r\n+          ) : lastAction === \"skipped\" ? (\r\n+            <div className=\"flex items-center justify-center h-full text-neutral-500 dark:text-neutral-400 text-sm px-4 text-center\">\r\n+              You skipped the chat. Looking for a new partner...\r\n+            </div>\r\n           ) : (\r\n             <div className=\"flex items-center justify-center h-full text-neutral-400 text-sm px-4 text-center\">\r\n               You’ll be able to chat once you’re matched.\r\n             </div>\r\n"
                },
                {
                    "date": 1752426180586,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -163,9 +163,9 @@\n           {roomId ? (\r\n             <ChatBox socket={socket} roomId={roomId} />\r\n           ) : lastAction === \"skipped\" ? (\r\n             <div className=\"flex items-center justify-center h-full text-neutral-500 dark:text-neutral-400 text-sm px-4 text-center\">\r\n-              You skipped the chat. Looking for a new partner...\r\n+              You skipped the chat. Click Start for a new partner...\r\n             </div>\r\n           ) : (\r\n             <div className=\"flex items-center justify-center h-full text-neutral-400 text-sm px-4 text-center\">\r\n               You’ll be able to chat once you’re matched.\r\n"
                },
                {
                    "date": 1752426382492,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -158,9 +158,10 @@\n       </div>\r\n \r\n       {/* Chat + Controls */}\r\n       <div className=\"flex flex-col h-full border-t md:border-t-0 md:border-l border-neutral-300 dark:border-neutral-700\">\r\n-        <div className=\"flex-grow overflow-y-auto bg-white dark:bg-neutral-900\">\r\n+        {/* Permanent Scrollbar Enabled Here */}\r\n+        <div className=\"flex-grow overflow-y-scroll scrollbar-thin scrollbar-thumb-gray-400 dark:scrollbar-thumb-neutral-600 scrollbar-track-transparent bg-white dark:bg-neutral-900\">\r\n           {roomId ? (\r\n             <ChatBox socket={socket} roomId={roomId} />\r\n           ) : lastAction === \"skipped\" ? (\r\n             <div className=\"flex items-center justify-center h-full text-neutral-500 dark:text-neutral-400 text-sm px-4 text-center\">\r\n"
                },
                {
                    "date": 1752426532769,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -158,10 +158,9 @@\n       </div>\r\n \r\n       {/* Chat + Controls */}\r\n       <div className=\"flex flex-col h-full border-t md:border-t-0 md:border-l border-neutral-300 dark:border-neutral-700\">\r\n-        {/* Permanent Scrollbar Enabled Here */}\r\n-        <div className=\"flex-grow overflow-y-scroll scrollbar-thin scrollbar-thumb-gray-400 dark:scrollbar-thumb-neutral-600 scrollbar-track-transparent bg-white dark:bg-neutral-900\">\r\n+        <div className=\"flex-grow overflow-y-auto bg-white dark:bg-neutral-900\">\r\n           {roomId ? (\r\n             <ChatBox socket={socket} roomId={roomId} />\r\n           ) : lastAction === \"skipped\" ? (\r\n             <div className=\"flex items-center justify-center h-full text-neutral-500 dark:text-neutral-400 text-sm px-4 text-center\">\r\n"
                },
                {
                    "date": 1752513500148,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -157,23 +157,26 @@\n         )}\r\n       </div>\r\n \r\n       {/* Chat + Controls */}\r\n-      <div className=\"flex flex-col h-full border-t md:border-t-0 md:border-l border-neutral-300 dark:border-neutral-700\">\r\n-        <div className=\"flex-grow overflow-y-auto bg-white dark:bg-neutral-900\">\r\n-          {roomId ? (\r\n-            <ChatBox socket={socket} roomId={roomId} />\r\n-          ) : lastAction === \"skipped\" ? (\r\n-            <div className=\"flex items-center justify-center h-full text-neutral-500 dark:text-neutral-400 text-sm px-4 text-center\">\r\n-              You skipped the chat. Click Start for a new partner...\r\n-            </div>\r\n-          ) : (\r\n-            <div className=\"flex items-center justify-center h-full text-neutral-400 text-sm px-4 text-center\">\r\n-              You’ll be able to chat once you’re matched.\r\n-            </div>\r\n-          )}\r\n-        </div>\r\n+      {/* Chat + Controls */}\r\n+<div className=\"flex flex-col h-[calc(100vh-64px)] sm:h-[calc(100vh-80px)] border-t md:border-t-0 md:border-l border-neutral-300 dark:border-neutral-700\">\r\n+  <div className=\"flex-grow overflow-hidden bg-white dark:bg-neutral-900\">\r\n+    {roomId ? (\r\n+      <ChatBox socket={socket} roomId={roomId} />\r\n+    ) : lastAction === \"skipped\" ? (\r\n+      <div className=\"flex items-center justify-center h-full text-neutral-500 dark:text-neutral-400 text-sm px-4 text-center\">\r\n+        You skipped the chat. Click Start for a new partner...\r\n+      </div>\r\n+    ) : (\r\n+      <div className=\"flex items-center justify-center h-full text-neutral-400 text-sm px-4 text-center\">\r\n+        You’ll be able to chat once you’re matched.\r\n+      </div>\r\n+    )}\r\n+  </div>\r\n+</div>\r\n \r\n+\r\n         {/* Bottom Controls */}\r\n         <div className=\"p-4 border-t border-neutral-300 dark:border-neutral-700 bg-white dark:bg-neutral-800 flex justify-end sticky bottom-0 z-10\">\r\n           {renderControlButton()}\r\n         </div>\r\n"
                },
                {
                    "date": 1752513517152,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -172,11 +172,9 @@\n         You’ll be able to chat once you’re matched.\r\n       </div>\r\n     )}\r\n   </div>\r\n-</div>\r\n \r\n-\r\n         {/* Bottom Controls */}\r\n         <div className=\"p-4 border-t border-neutral-300 dark:border-neutral-700 bg-white dark:bg-neutral-800 flex justify-end sticky bottom-0 z-10\">\r\n           {renderControlButton()}\r\n         </div>\r\n"
                },
                {
                    "date": 1752513523482,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -158,22 +158,22 @@\n       </div>\r\n \r\n       {/* Chat + Controls */}\r\n       {/* Chat + Controls */}\r\n-<div className=\"flex flex-col h-[calc(100vh-64px)] sm:h-[calc(100vh-80px)] border-t md:border-t-0 md:border-l border-neutral-300 dark:border-neutral-700\">\r\n-  <div className=\"flex-grow overflow-hidden bg-white dark:bg-neutral-900\">\r\n-    {roomId ? (\r\n-      <ChatBox socket={socket} roomId={roomId} />\r\n-    ) : lastAction === \"skipped\" ? (\r\n-      <div className=\"flex items-center justify-center h-full text-neutral-500 dark:text-neutral-400 text-sm px-4 text-center\">\r\n-        You skipped the chat. Click Start for a new partner...\r\n-      </div>\r\n-    ) : (\r\n-      <div className=\"flex items-center justify-center h-full text-neutral-400 text-sm px-4 text-center\">\r\n-        You’ll be able to chat once you’re matched.\r\n-      </div>\r\n-    )}\r\n-  </div>\r\n+      <div className=\"flex flex-col h-[calc(100vh-64px)] sm:h-[calc(100vh-80px)] border-t md:border-t-0 md:border-l border-neutral-300 dark:border-neutral-700\">\r\n+        <div className=\"flex-grow overflow-hidden bg-white dark:bg-neutral-900\">\r\n+          {roomId ? (\r\n+            <ChatBox socket={socket} roomId={roomId} />\r\n+          ) : lastAction === \"skipped\" ? (\r\n+            <div className=\"flex items-center justify-center h-full text-neutral-500 dark:text-neutral-400 text-sm px-4 text-center\">\r\n+              You skipped the chat. Click Start for a new partner...\r\n+            </div>\r\n+          ) : (\r\n+            <div className=\"flex items-center justify-center h-full text-neutral-400 text-sm px-4 text-center\">\r\n+              You’ll be able to chat once you’re matched.\r\n+            </div>\r\n+          )}\r\n+        </div>\r\n \r\n         {/* Bottom Controls */}\r\n         <div className=\"p-4 border-t border-neutral-300 dark:border-neutral-700 bg-white dark:bg-neutral-800 flex justify-end sticky bottom-0 z-10\">\r\n           {renderControlButton()}\r\n"
                },
                {
                    "date": 1752514183684,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,44 +13,40 @@\n   const [roomId, setRoomId] = useState<string | null>(null);\r\n   const [isOfferer, setIsOfferer] = useState<boolean | null>(null);\r\n   const [loading, setLoading] = useState(false);\r\n   const [sessionStarted, setSessionStarted] = useState(false);\r\n-  const [lastAction, setLastAction] = useState<\"skipped\" | null>(null); // 🔧 Track skip\r\n+  const [lastAction, setLastAction] = useState<\"skipped\" | null>(null);\r\n \r\n   const socket = useSocket();\r\n   const { localStream, remoteStream } = useWebRTC(roomId, isOfferer, sessionStarted);\r\n \r\n   const handleMatched = useCallback(\r\n     ({ roomId, isOfferer }: { roomId: string; partnerId: string; isOfferer: boolean }) => {\r\n-      console.log(\"🎉 Matched in room:\", roomId, \"Offerer:\", isOfferer);\r\n       setRoomId(roomId);\r\n       setIsOfferer(isOfferer);\r\n       setLoading(false);\r\n-      setLastAction(null); // reset skip message\r\n+      setLastAction(null);\r\n     },\r\n     []\r\n   );\r\n \r\n   useEffect(() => {\r\n     if (!socket) return;\r\n     socket.off(\"matched\", handleMatched);\r\n     socket.on(\"matched\", handleMatched);\r\n-    return () => {\r\n-      socket.off(\"matched\", handleMatched);\r\n-    };\r\n+    return () => socket.off(\"matched\", handleMatched);\r\n   }, [socket, handleMatched]);\r\n \r\n   useEffect(() => {\r\n     if (!socket) return;\r\n \r\n     const handleDisconnect = () => {\r\n-      console.log(\"⚠️ Disconnected from socket server\");\r\n       setLoading(false);\r\n       setSessionStarted(false);\r\n     };\r\n \r\n     const handleConnect = () => {\r\n-      console.log(\"✅ Connected to socket server:\", socket.id);\r\n+      console.log(\"✅ Connected to socket:\", socket.id);\r\n     };\r\n \r\n     socket.on(\"disconnect\", handleDisconnect);\r\n     socket.on(\"connect\", handleConnect);\r\n@@ -64,9 +60,8 @@\n   useEffect(() => {\r\n     return () => {\r\n       if (socket && roomId) {\r\n         socket.emit(\"leave-room\", roomId);\r\n-        console.log(\"👋 Left room:\", roomId);\r\n       }\r\n     };\r\n   }, [socket, roomId]);\r\n \r\n@@ -74,16 +69,14 @@\n     if (!sessionStarted) {\r\n       setLoading(true);\r\n       setSessionStarted(true);\r\n       socket?.emit(\"start-looking\");\r\n-      console.log(\"🔎 Started looking for partner\");\r\n     }\r\n   };\r\n \r\n   const handleStop = () => {\r\n     if (roomId) {\r\n       socket?.emit(\"leave-room\", roomId);\r\n-      console.log(\"🛑 Stopped session and left room:\", roomId);\r\n     }\r\n     setRoomId(null);\r\n     setIsOfferer(null);\r\n     setSessionStarted(false);\r\n@@ -93,51 +86,42 @@\n   const handleSkip = () => {\r\n     handleStop();\r\n     handleStart();\r\n     setLastAction(\"skipped\");\r\n-    console.log(\"⏭️ Skipped to new partner\");\r\n   };\r\n \r\n   const renderControlButton = () => {\r\n-    const baseClasses =\r\n-      \"flex items-center gap-2 px-4 py-2 rounded-lg shadow font-medium transition whitespace-nowrap\";\r\n+    const base =\r\n+      \"flex items-center gap-2 px-4 py-2 rounded-lg font-medium shadow transition whitespace-nowrap\";\r\n+\r\n     if (!sessionStarted) {\r\n       return (\r\n-        <button\r\n-          onClick={handleStart}\r\n-          className={`${baseClasses} bg-green-600 hover:bg-green-700 text-white`}\r\n-        >\r\n+        <button onClick={handleStart} className={`${base} bg-green-600 hover:bg-green-700 text-white`}>\r\n           <Users className=\"w-5 h-5\" />\r\n           Start\r\n         </button>\r\n       );\r\n     } else if (loading) {\r\n       return (\r\n-        <button\r\n-          onClick={handleStop}\r\n-          className={`${baseClasses} bg-red-600 hover:bg-red-700 text-white`}\r\n-        >\r\n+        <button onClick={handleStop} className={`${base} bg-red-600 hover:bg-red-700 text-white`}>\r\n           <CircleStop className=\"w-5 h-5\" />\r\n           Stop\r\n         </button>\r\n       );\r\n     } else {\r\n       return (\r\n-        <button\r\n-          onClick={handleSkip}\r\n-          className={`${baseClasses} bg-yellow-500 hover:bg-yellow-600 text-white`}\r\n-        >\r\n+        <button onClick={handleSkip} className={`${base} bg-yellow-500 hover:bg-yellow-600 text-white`}>\r\n           <RefreshCcw className=\"w-5 h-5\" />\r\n           Skip\r\n         </button>\r\n       );\r\n     }\r\n   };\r\n \r\n   return (\r\n-    <div className=\"grid md:grid-cols-3 h-screen overflow-hidden bg-neutral-100 dark:bg-neutral-900\">\r\n+    <div className=\"flex flex-col md:grid md:grid-cols-3 h-screen bg-neutral-100 dark:bg-neutral-900\">\r\n       {/* Video Section */}\r\n-      <div className=\"md:col-span-2 relative flex items-center justify-center bg-black p-2 md:p-4 overflow-hidden\">\r\n+      <div className=\"md:col-span-2 relative bg-black flex items-center justify-center p-2 md:p-4 overflow-hidden\">\r\n         {!sessionStarted ? (\r\n           <div className=\"text-white text-xl font-semibold text-center px-4\">\r\n             Click Start to begin searching\r\n           </div>\r\n@@ -145,9 +129,9 @@\n           <FindingPartner />\r\n         ) : (\r\n           <>\r\n             <RemoteVideo stream={remoteStream} />\r\n-            <div className=\"absolute top-5 right-5 w-40 h-40 md:w-48 md:h-48 rounded overflow-hidden border-2 border-white shadow-lg z-20\">\r\n+            <div className=\"absolute top-4 right-4 w-36 h-36 md:w-48 md:h-48 rounded overflow-hidden border-2 border-white shadow-lg z-20\">\r\n               {localStream ? (\r\n                 <LocalVideo stream={localStream} />\r\n               ) : (\r\n                 <div className=\"text-white text-sm p-2\">Loading camera...</div>\r\n@@ -157,11 +141,10 @@\n         )}\r\n       </div>\r\n \r\n       {/* Chat + Controls */}\r\n-      {/* Chat + Controls */}\r\n-      <div className=\"flex flex-col h-[calc(100vh-64px)] sm:h-[calc(100vh-80px)] border-t md:border-t-0 md:border-l border-neutral-300 dark:border-neutral-700\">\r\n-        <div className=\"flex-grow overflow-hidden bg-white dark:bg-neutral-900\">\r\n+      <div className=\"flex flex-col h-full border-t md:border-t-0 md:border-l border-neutral-300 dark:border-neutral-700\">\r\n+        <div className=\"flex-grow overflow-hidden\">\r\n           {roomId ? (\r\n             <ChatBox socket={socket} roomId={roomId} />\r\n           ) : lastAction === \"skipped\" ? (\r\n             <div className=\"flex items-center justify-center h-full text-neutral-500 dark:text-neutral-400 text-sm px-4 text-center\">\r\n@@ -174,9 +157,9 @@\n           )}\r\n         </div>\r\n \r\n         {/* Bottom Controls */}\r\n-        <div className=\"p-4 border-t border-neutral-300 dark:border-neutral-700 bg-white dark:bg-neutral-800 flex justify-end sticky bottom-0 z-10\">\r\n+        <div className=\"p-3 border-t border-neutral-300 dark:border-neutral-700 bg-white dark:bg-neutral-800 flex justify-end\">\r\n           {renderControlButton()}\r\n         </div>\r\n       </div>\r\n     </div>\r\n"
                },
                {
                    "date": 1752514202344,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,40 +13,44 @@\n   const [roomId, setRoomId] = useState<string | null>(null);\r\n   const [isOfferer, setIsOfferer] = useState<boolean | null>(null);\r\n   const [loading, setLoading] = useState(false);\r\n   const [sessionStarted, setSessionStarted] = useState(false);\r\n-  const [lastAction, setLastAction] = useState<\"skipped\" | null>(null);\r\n+  const [lastAction, setLastAction] = useState<\"skipped\" | null>(null); // 🔧 Track skip\r\n \r\n   const socket = useSocket();\r\n   const { localStream, remoteStream } = useWebRTC(roomId, isOfferer, sessionStarted);\r\n \r\n   const handleMatched = useCallback(\r\n     ({ roomId, isOfferer }: { roomId: string; partnerId: string; isOfferer: boolean }) => {\r\n+      console.log(\"🎉 Matched in room:\", roomId, \"Offerer:\", isOfferer);\r\n       setRoomId(roomId);\r\n       setIsOfferer(isOfferer);\r\n       setLoading(false);\r\n-      setLastAction(null);\r\n+      setLastAction(null); // reset skip message\r\n     },\r\n     []\r\n   );\r\n \r\n   useEffect(() => {\r\n     if (!socket) return;\r\n     socket.off(\"matched\", handleMatched);\r\n     socket.on(\"matched\", handleMatched);\r\n-    return () => socket.off(\"matched\", handleMatched);\r\n+    return () => {\r\n+      socket.off(\"matched\", handleMatched);\r\n+    };\r\n   }, [socket, handleMatched]);\r\n \r\n   useEffect(() => {\r\n     if (!socket) return;\r\n \r\n     const handleDisconnect = () => {\r\n+      console.log(\"⚠️ Disconnected from socket server\");\r\n       setLoading(false);\r\n       setSessionStarted(false);\r\n     };\r\n \r\n     const handleConnect = () => {\r\n-      console.log(\"✅ Connected to socket:\", socket.id);\r\n+      console.log(\"✅ Connected to socket server:\", socket.id);\r\n     };\r\n \r\n     socket.on(\"disconnect\", handleDisconnect);\r\n     socket.on(\"connect\", handleConnect);\r\n@@ -60,8 +64,9 @@\n   useEffect(() => {\r\n     return () => {\r\n       if (socket && roomId) {\r\n         socket.emit(\"leave-room\", roomId);\r\n+        console.log(\"👋 Left room:\", roomId);\r\n       }\r\n     };\r\n   }, [socket, roomId]);\r\n \r\n@@ -69,14 +74,16 @@\n     if (!sessionStarted) {\r\n       setLoading(true);\r\n       setSessionStarted(true);\r\n       socket?.emit(\"start-looking\");\r\n+      console.log(\"🔎 Started looking for partner\");\r\n     }\r\n   };\r\n \r\n   const handleStop = () => {\r\n     if (roomId) {\r\n       socket?.emit(\"leave-room\", roomId);\r\n+      console.log(\"🛑 Stopped session and left room:\", roomId);\r\n     }\r\n     setRoomId(null);\r\n     setIsOfferer(null);\r\n     setSessionStarted(false);\r\n@@ -86,42 +93,51 @@\n   const handleSkip = () => {\r\n     handleStop();\r\n     handleStart();\r\n     setLastAction(\"skipped\");\r\n+    console.log(\"⏭️ Skipped to new partner\");\r\n   };\r\n \r\n   const renderControlButton = () => {\r\n-    const base =\r\n-      \"flex items-center gap-2 px-4 py-2 rounded-lg font-medium shadow transition whitespace-nowrap\";\r\n-\r\n+    const baseClasses =\r\n+      \"flex items-center gap-2 px-4 py-2 rounded-lg shadow font-medium transition whitespace-nowrap\";\r\n     if (!sessionStarted) {\r\n       return (\r\n-        <button onClick={handleStart} className={`${base} bg-green-600 hover:bg-green-700 text-white`}>\r\n+        <button\r\n+          onClick={handleStart}\r\n+          className={`${baseClasses} bg-green-600 hover:bg-green-700 text-white`}\r\n+        >\r\n           <Users className=\"w-5 h-5\" />\r\n           Start\r\n         </button>\r\n       );\r\n     } else if (loading) {\r\n       return (\r\n-        <button onClick={handleStop} className={`${base} bg-red-600 hover:bg-red-700 text-white`}>\r\n+        <button\r\n+          onClick={handleStop}\r\n+          className={`${baseClasses} bg-red-600 hover:bg-red-700 text-white`}\r\n+        >\r\n           <CircleStop className=\"w-5 h-5\" />\r\n           Stop\r\n         </button>\r\n       );\r\n     } else {\r\n       return (\r\n-        <button onClick={handleSkip} className={`${base} bg-yellow-500 hover:bg-yellow-600 text-white`}>\r\n+        <button\r\n+          onClick={handleSkip}\r\n+          className={`${baseClasses} bg-yellow-500 hover:bg-yellow-600 text-white`}\r\n+        >\r\n           <RefreshCcw className=\"w-5 h-5\" />\r\n           Skip\r\n         </button>\r\n       );\r\n     }\r\n   };\r\n \r\n   return (\r\n-    <div className=\"flex flex-col md:grid md:grid-cols-3 h-screen bg-neutral-100 dark:bg-neutral-900\">\r\n+    <div className=\"grid md:grid-cols-3 h-screen overflow-hidden bg-neutral-100 dark:bg-neutral-900\">\r\n       {/* Video Section */}\r\n-      <div className=\"md:col-span-2 relative bg-black flex items-center justify-center p-2 md:p-4 overflow-hidden\">\r\n+      <div className=\"md:col-span-2 relative flex items-center justify-center bg-black p-2 md:p-4 overflow-hidden\">\r\n         {!sessionStarted ? (\r\n           <div className=\"text-white text-xl font-semibold text-center px-4\">\r\n             Click Start to begin searching\r\n           </div>\r\n@@ -129,9 +145,9 @@\n           <FindingPartner />\r\n         ) : (\r\n           <>\r\n             <RemoteVideo stream={remoteStream} />\r\n-            <div className=\"absolute top-4 right-4 w-36 h-36 md:w-48 md:h-48 rounded overflow-hidden border-2 border-white shadow-lg z-20\">\r\n+            <div className=\"absolute top-5 right-5 w-40 h-40 md:w-48 md:h-48 rounded overflow-hidden border-2 border-white shadow-lg z-20\">\r\n               {localStream ? (\r\n                 <LocalVideo stream={localStream} />\r\n               ) : (\r\n                 <div className=\"text-white text-sm p-2\">Loading camera...</div>\r\n@@ -141,10 +157,11 @@\n         )}\r\n       </div>\r\n \r\n       {/* Chat + Controls */}\r\n-      <div className=\"flex flex-col h-full border-t md:border-t-0 md:border-l border-neutral-300 dark:border-neutral-700\">\r\n-        <div className=\"flex-grow overflow-hidden\">\r\n+      {/* Chat + Controls */}\r\n+      <div className=\"flex flex-col h-[calc(100vh-64px)] sm:h-[calc(100vh-80px)] border-t md:border-t-0 md:border-l border-neutral-300 dark:border-neutral-700\">\r\n+        <div className=\"flex-grow overflow-hidden bg-white dark:bg-neutral-900\">\r\n           {roomId ? (\r\n             <ChatBox socket={socket} roomId={roomId} />\r\n           ) : lastAction === \"skipped\" ? (\r\n             <div className=\"flex items-center justify-center h-full text-neutral-500 dark:text-neutral-400 text-sm px-4 text-center\">\r\n@@ -157,9 +174,9 @@\n           )}\r\n         </div>\r\n \r\n         {/* Bottom Controls */}\r\n-        <div className=\"p-3 border-t border-neutral-300 dark:border-neutral-700 bg-white dark:bg-neutral-800 flex justify-end\">\r\n+        <div className=\"p-4 border-t border-neutral-300 dark:border-neutral-700 bg-white dark:bg-neutral-800 flex justify-end sticky bottom-0 z-10\">\r\n           {renderControlButton()}\r\n         </div>\r\n       </div>\r\n     </div>\r\n"
                },
                {
                    "date": 1752514331577,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n   const [roomId, setRoomId] = useState<string | null>(null);\r\n   const [isOfferer, setIsOfferer] = useState<boolean | null>(null);\r\n   const [loading, setLoading] = useState(false);\r\n   const [sessionStarted, setSessionStarted] = useState(false);\r\n-  const [lastAction, setLastAction] = useState<\"skipped\" | null>(null); // 🔧 Track skip\r\n+  const [lastAction, setLastAction] = useState<\"skipped\" | null>(null);\r\n \r\n   const socket = useSocket();\r\n   const { localStream, remoteStream } = useWebRTC(roomId, isOfferer, sessionStarted);\r\n \r\n@@ -24,9 +24,9 @@\n       console.log(\"🎉 Matched in room:\", roomId, \"Offerer:\", isOfferer);\r\n       setRoomId(roomId);\r\n       setIsOfferer(isOfferer);\r\n       setLoading(false);\r\n-      setLastAction(null); // reset skip message\r\n+      setLastAction(null);\r\n     },\r\n     []\r\n   );\r\n \r\n@@ -133,11 +133,11 @@\n     }\r\n   };\r\n \r\n   return (\r\n-    <div className=\"grid md:grid-cols-3 h-screen overflow-hidden bg-neutral-100 dark:bg-neutral-900\">\r\n+    <div className=\"flex flex-col md:flex-row h-screen overflow-hidden bg-neutral-100 dark:bg-neutral-900\">\r\n       {/* Video Section */}\r\n-      <div className=\"md:col-span-2 relative flex items-center justify-center bg-black p-2 md:p-4 overflow-hidden\">\r\n+      <div className=\"flex-1 relative bg-black flex items-center justify-center p-2 md:p-4\">\r\n         {!sessionStarted ? (\r\n           <div className=\"text-white text-xl font-semibold text-center px-4\">\r\n             Click Start to begin searching\r\n           </div>\r\n@@ -145,9 +145,9 @@\n           <FindingPartner />\r\n         ) : (\r\n           <>\r\n             <RemoteVideo stream={remoteStream} />\r\n-            <div className=\"absolute top-5 right-5 w-40 h-40 md:w-48 md:h-48 rounded overflow-hidden border-2 border-white shadow-lg z-20\">\r\n+            <div className=\"absolute top-4 right-4 w-36 h-36 md:w-48 md:h-48 rounded overflow-hidden border-2 border-white shadow-lg z-20\">\r\n               {localStream ? (\r\n                 <LocalVideo stream={localStream} />\r\n               ) : (\r\n                 <div className=\"text-white text-sm p-2\">Loading camera...</div>\r\n@@ -157,11 +157,10 @@\n         )}\r\n       </div>\r\n \r\n       {/* Chat + Controls */}\r\n-      {/* Chat + Controls */}\r\n-      <div className=\"flex flex-col h-[calc(100vh-64px)] sm:h-[calc(100vh-80px)] border-t md:border-t-0 md:border-l border-neutral-300 dark:border-neutral-700\">\r\n-        <div className=\"flex-grow overflow-hidden bg-white dark:bg-neutral-900\">\r\n+      <div className=\"w-full md:w-[420px] flex flex-col border-t md:border-t-0 md:border-l border-neutral-300 dark:border-neutral-700\">\r\n+        <div className=\"flex-grow overflow-hidden\">\r\n           {roomId ? (\r\n             <ChatBox socket={socket} roomId={roomId} />\r\n           ) : lastAction === \"skipped\" ? (\r\n             <div className=\"flex items-center justify-center h-full text-neutral-500 dark:text-neutral-400 text-sm px-4 text-center\">\r\n@@ -174,9 +173,9 @@\n           )}\r\n         </div>\r\n \r\n         {/* Bottom Controls */}\r\n-        <div className=\"p-4 border-t border-neutral-300 dark:border-neutral-700 bg-white dark:bg-neutral-800 flex justify-end sticky bottom-0 z-10\">\r\n+        <div className=\"p-3 border-t border-neutral-300 dark:border-neutral-700 bg-white dark:bg-neutral-800 flex justify-end\">\r\n           {renderControlButton()}\r\n         </div>\r\n       </div>\r\n     </div>\r\n"
                },
                {
                    "date": 1752514947338,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n   const [roomId, setRoomId] = useState<string | null>(null);\r\n   const [isOfferer, setIsOfferer] = useState<boolean | null>(null);\r\n   const [loading, setLoading] = useState(false);\r\n   const [sessionStarted, setSessionStarted] = useState(false);\r\n-  const [lastAction, setLastAction] = useState<\"skipped\" | null>(null);\r\n+  const [lastAction, setLastAction] = useState<\"skipped\" | \"left\" | null>(null);\r\n \r\n   const socket = useSocket();\r\n   const { localStream, remoteStream } = useWebRTC(roomId, isOfferer, sessionStarted);\r\n \r\n@@ -29,16 +29,27 @@\n     },\r\n     []\r\n   );\r\n \r\n+  const handlePartnerLeft = useCallback(() => {\r\n+    console.log(\"👋 Partner left the chat\");\r\n+    setRoomId(null);\r\n+    setIsOfferer(null);\r\n+    setSessionStarted(false);\r\n+    setLoading(false);\r\n+    setLastAction(\"left\");\r\n+  }, []);\r\n+\r\n   useEffect(() => {\r\n     if (!socket) return;\r\n     socket.off(\"matched\", handleMatched);\r\n     socket.on(\"matched\", handleMatched);\r\n+    socket.on(\"partner-left\", handlePartnerLeft);\r\n     return () => {\r\n       socket.off(\"matched\", handleMatched);\r\n+      socket.off(\"partner-left\", handlePartnerLeft);\r\n     };\r\n-  }, [socket, handleMatched]);\r\n+  }, [socket, handleMatched, handlePartnerLeft]);\r\n \r\n   useEffect(() => {\r\n     if (!socket) return;\r\n \r\n@@ -165,8 +176,12 @@\n           ) : lastAction === \"skipped\" ? (\r\n             <div className=\"flex items-center justify-center h-full text-neutral-500 dark:text-neutral-400 text-sm px-4 text-center\">\r\n               You skipped the chat. Click Start for a new partner...\r\n             </div>\r\n+          ) : lastAction === \"left\" ? (\r\n+            <div className=\"flex items-center justify-center h-full text-neutral-500 dark:text-neutral-400 text-sm px-4 text-center\">\r\n+              Your partner left the chat. Click Start to begin again.\r\n+            </div>\r\n           ) : (\r\n             <div className=\"flex items-center justify-center h-full text-neutral-400 text-sm px-4 text-center\">\r\n               You’ll be able to chat once you’re matched.\r\n             </div>\r\n"
                },
                {
                    "date": 1752515346454,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,34 +1,45 @@\n \"use client\";\r\n \r\n-import React, { useEffect, useState, useCallback } from \"react\";\r\n+import React, { useEffect, useState, useCallback, useRef } from \"react\";\r\n import useWebRTC from \"../hooks/useWebRTC\";\r\n import useSocket from \"../hooks/useSocket\";\r\n import LocalVideo from \"../../../components/video/LocalVideo\";\r\n import RemoteVideo from \"../../../components/video/RemoteVideo\";\r\n import ChatBox from \"../../../components/chat/ChatBox\";\r\n import FindingPartner from \"./FindingPartner\";\r\n-import { Users, RefreshCcw, CircleStop } from \"lucide-react\";\r\n+import { Users, RefreshCcw, CircleStop, Volume2, VolumeX } from \"lucide-react\";\r\n \r\n export default function AnonymousChatRoom() {\r\n   const [roomId, setRoomId] = useState<string | null>(null);\r\n   const [isOfferer, setIsOfferer] = useState<boolean | null>(null);\r\n   const [loading, setLoading] = useState(false);\r\n   const [sessionStarted, setSessionStarted] = useState(false);\r\n   const [lastAction, setLastAction] = useState<\"skipped\" | \"left\" | null>(null);\r\n+  const [soundOn, setSoundOn] = useState(true);\r\n \r\n   const socket = useSocket();\r\n   const { localStream, remoteStream } = useWebRTC(roomId, isOfferer, sessionStarted);\r\n \r\n+  const matchSoundRef = useRef<HTMLAudioElement>(null);\r\n+  const leaveSoundRef = useRef<HTMLAudioElement>(null);\r\n+\r\n+  const playSound = (type: \"match\" | \"leave\") => {\r\n+    if (!soundOn) return;\r\n+    if (type === \"match\") matchSoundRef.current?.play().catch(() => {});\r\n+    if (type === \"leave\") leaveSoundRef.current?.play().catch(() => {});\r\n+  };\r\n+\r\n   const handleMatched = useCallback(\r\n     ({ roomId, isOfferer }: { roomId: string; partnerId: string; isOfferer: boolean }) => {\r\n       console.log(\"🎉 Matched in room:\", roomId, \"Offerer:\", isOfferer);\r\n       setRoomId(roomId);\r\n       setIsOfferer(isOfferer);\r\n       setLoading(false);\r\n       setLastAction(null);\r\n+      playSound(\"match\");\r\n     },\r\n-    []\r\n+    [soundOn]\r\n   );\r\n \r\n   const handlePartnerLeft = useCallback(() => {\r\n     console.log(\"👋 Partner left the chat\");\r\n@@ -36,9 +47,10 @@\n     setIsOfferer(null);\r\n     setSessionStarted(false);\r\n     setLoading(false);\r\n     setLastAction(\"left\");\r\n-  }, []);\r\n+    playSound(\"leave\");\r\n+  }, [soundOn]);\r\n \r\n   useEffect(() => {\r\n     if (!socket) return;\r\n     socket.off(\"matched\", handleMatched);\r\n@@ -145,8 +157,12 @@\n   };\r\n \r\n   return (\r\n     <div className=\"flex flex-col md:flex-row h-screen overflow-hidden bg-neutral-100 dark:bg-neutral-900\">\r\n+      {/* Sounds */}\r\n+      <audio ref={matchSoundRef} src=\"/sounds/match.mp3\" />\r\n+      <audio ref={leaveSoundRef} src=\"/sounds/leave.mp3\" />\r\n+\r\n       {/* Video Section */}\r\n       <div className=\"flex-1 relative bg-black flex items-center justify-center p-2 md:p-4\">\r\n         {!sessionStarted ? (\r\n           <div className=\"text-white text-xl font-semibold text-center px-4\">\r\n@@ -171,9 +187,9 @@\n       {/* Chat + Controls */}\r\n       <div className=\"w-full md:w-[420px] flex flex-col border-t md:border-t-0 md:border-l border-neutral-300 dark:border-neutral-700\">\r\n         <div className=\"flex-grow overflow-hidden\">\r\n           {roomId ? (\r\n-            <ChatBox socket={socket} roomId={roomId} />\r\n+            <ChatBox socket={socket} roomId={roomId} soundOn={soundOn} />\r\n           ) : lastAction === \"skipped\" ? (\r\n             <div className=\"flex items-center justify-center h-full text-neutral-500 dark:text-neutral-400 text-sm px-4 text-center\">\r\n               You skipped the chat. Click Start for a new partner...\r\n             </div>\r\n@@ -188,9 +204,19 @@\n           )}\r\n         </div>\r\n \r\n         {/* Bottom Controls */}\r\n-        <div className=\"p-3 border-t border-neutral-300 dark:border-neutral-700 bg-white dark:bg-neutral-800 flex justify-end\">\r\n+        <div className=\"p-3 border-t border-neutral-300 dark:border-neutral-700 bg-white dark:bg-neutral-800 flex justify-between items-center\">\r\n+          {/* Sound Toggle */}\r\n+          <button\r\n+            onClick={() => setSoundOn((prev) => !prev)}\r\n+            className=\"text-neutral-700 dark:text-neutral-300 hover:text-blue-600 dark:hover:text-blue-400 transition\"\r\n+            title={soundOn ? \"Mute Sounds\" : \"Unmute Sounds\"}\r\n+          >\r\n+            {soundOn ? <Volume2 className=\"w-5 h-5\" /> : <VolumeX className=\"w-5 h-5\" />}\r\n+          </button>\r\n+\r\n+          {/* Start/Skip/Stop Buttons */}\r\n           {renderControlButton()}\r\n         </div>\r\n       </div>\r\n     </div>\r\n"
                },
                {
                    "date": 1752517662702,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,17 @@\n import LocalVideo from \"../../../components/video/LocalVideo\";\r\n import RemoteVideo from \"../../../components/video/RemoteVideo\";\r\n import ChatBox from \"../../../components/chat/ChatBox\";\r\n import FindingPartner from \"./FindingPartner\";\r\n-import { Users, RefreshCcw, CircleStop, Volume2, VolumeX } from \"lucide-react\";\r\n+import {\r\n+  Users,\r\n+  RefreshCcw,\r\n+  CircleStop,\r\n+  Volume2,\r\n+  VolumeX,\r\n+  Smile,\r\n+  UserX,\r\n+} from \"lucide-react\";\r\n \r\n export default function AnonymousChatRoom() {\r\n   const [roomId, setRoomId] = useState<string | null>(null);\r\n   const [isOfferer, setIsOfferer] = useState<boolean | null>(null);\r\n@@ -24,10 +32,21 @@\n   const leaveSoundRef = useRef<HTMLAudioElement>(null);\r\n \r\n   const playSound = (type: \"match\" | \"leave\") => {\r\n     if (!soundOn) return;\r\n-    if (type === \"match\") matchSoundRef.current?.play().catch(() => {});\r\n-    if (type === \"leave\") leaveSoundRef.current?.play().catch(() => {});\r\n+    const audioRef = type === \"match\" ? matchSoundRef : leaveSoundRef;\r\n+    const play = async () => {\r\n+      try {\r\n+        const audio = audioRef.current;\r\n+        if (!audio) return;\r\n+        audio.volume = 0.8;\r\n+        await audio.play();\r\n+      } catch (err) {\r\n+        const ctx = new AudioContext();\r\n+        await ctx.resume();\r\n+      }\r\n+    };\r\n+    play();\r\n   };\r\n \r\n   const handleMatched = useCallback(\r\n     ({ roomId, isOfferer }: { roomId: string; partnerId: string; isOfferer: boolean }) => {\r\n@@ -155,26 +174,57 @@\n       );\r\n     }\r\n   };\r\n \r\n+  const renderIdleMessage = () => {\r\n+    if (roomId) return null;\r\n+    const baseStyle =\r\n+      \"flex flex-col items-center justify-center h-full text-center text-neutral-500 dark:text-neutral-400 p-4 text-sm gap-2\";\r\n+\r\n+    if (lastAction === \"skipped\") {\r\n+      return (\r\n+        <div className={baseStyle}>\r\n+          <Smile className=\"w-8 h-8 text-yellow-400\" />\r\n+          <p>You skipped the chat.</p>\r\n+          <p>Click <b>Start</b> to connect with someone new!</p>\r\n+        </div>\r\n+      );\r\n+    } else if (lastAction === \"left\") {\r\n+      return (\r\n+        <div className={baseStyle}>\r\n+          <UserX className=\"w-8 h-8 text-red-400\" />\r\n+          <p>Your partner left the chat.</p>\r\n+          <p>Click <b>Start</b> to begin again.</p>\r\n+        </div>\r\n+      );\r\n+    } else {\r\n+      return (\r\n+        <div className={baseStyle}>\r\n+          <Users className=\"w-8 h-8 text-neutral-400\" />\r\n+          <p>Click <b>Start</b> to begin searching for a partner.</p>\r\n+        </div>\r\n+      );\r\n+    }\r\n+  };\r\n+\r\n   return (\r\n     <div className=\"flex flex-col md:flex-row h-screen overflow-hidden bg-neutral-100 dark:bg-neutral-900\">\r\n       {/* Sounds */}\r\n-      <audio ref={matchSoundRef} src=\"/sounds/match.mp3\" />\r\n-      <audio ref={leaveSoundRef} src=\"/sounds/leave.mp3\" />\r\n+      <audio ref={matchSoundRef} src=\"/sounds/match.mp3\" preload=\"auto\" />\r\n+      <audio ref={leaveSoundRef} src=\"/sounds/leave.mp3\" preload=\"auto\" />\r\n \r\n       {/* Video Section */}\r\n-      <div className=\"flex-1 relative bg-black flex items-center justify-center p-2 md:p-4\">\r\n+      <div className=\"flex-1 relative bg-black flex items-center justify-center p-3 sm:p-4\">\r\n         {!sessionStarted ? (\r\n-          <div className=\"text-white text-xl font-semibold text-center px-4\">\r\n+          <div className=\"text-white text-lg sm:text-xl font-semibold text-center px-4\">\r\n             Click Start to begin searching\r\n           </div>\r\n         ) : loading ? (\r\n           <FindingPartner />\r\n         ) : (\r\n           <>\r\n             <RemoteVideo stream={remoteStream} />\r\n-            <div className=\"absolute top-4 right-4 w-36 h-36 md:w-48 md:h-48 rounded overflow-hidden border-2 border-white shadow-lg z-20\">\r\n+            <div className=\"absolute top-4 right-4 w-32 h-32 sm:w-40 sm:h-40 rounded overflow-hidden border-2 border-white shadow-lg z-20\">\r\n               {localStream ? (\r\n                 <LocalVideo stream={localStream} />\r\n               ) : (\r\n                 <div className=\"text-white text-sm p-2\">Loading camera...</div>\r\n@@ -188,20 +238,10 @@\n       <div className=\"w-full md:w-[420px] flex flex-col border-t md:border-t-0 md:border-l border-neutral-300 dark:border-neutral-700\">\r\n         <div className=\"flex-grow overflow-hidden\">\r\n           {roomId ? (\r\n             <ChatBox socket={socket} roomId={roomId} soundOn={soundOn} />\r\n-          ) : lastAction === \"skipped\" ? (\r\n-            <div className=\"flex items-center justify-center h-full text-neutral-500 dark:text-neutral-400 text-sm px-4 text-center\">\r\n-              You skipped the chat. Click Start for a new partner...\r\n-            </div>\r\n-          ) : lastAction === \"left\" ? (\r\n-            <div className=\"flex items-center justify-center h-full text-neutral-500 dark:text-neutral-400 text-sm px-4 text-center\">\r\n-              Your partner left the chat. Click Start to begin again.\r\n-            </div>\r\n           ) : (\r\n-            <div className=\"flex items-center justify-center h-full text-neutral-400 text-sm px-4 text-center\">\r\n-              You’ll be able to chat once you’re matched.\r\n-            </div>\r\n+            renderIdleMessage()\r\n           )}\r\n         </div>\r\n \r\n         {/* Bottom Controls */}\r\n"
                },
                {
                    "date": 1752518967486,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,14 +24,25 @@\n   const [sessionStarted, setSessionStarted] = useState(false);\r\n   const [lastAction, setLastAction] = useState<\"skipped\" | \"left\" | null>(null);\r\n   const [soundOn, setSoundOn] = useState(true);\r\n \r\n+  const [userInfo, setUserInfo] = useState<any>({});\r\n+  const [genderFilter, setGenderFilter] = useState(\"\");\r\n+  const [countryFilter, setCountryFilter] = useState(\"\");\r\n+\r\n   const socket = useSocket();\r\n   const { localStream, remoteStream } = useWebRTC(roomId, isOfferer, sessionStarted);\r\n \r\n   const matchSoundRef = useRef<HTMLAudioElement>(null);\r\n   const leaveSoundRef = useRef<HTMLAudioElement>(null);\r\n \r\n+  useEffect(() => {\r\n+    const stored = localStorage.getItem(\"user-info\");\r\n+    if (stored) {\r\n+      setUserInfo(JSON.parse(stored));\r\n+    }\r\n+  }, []);\r\n+\r\n   const playSound = (type: \"match\" | \"leave\") => {\r\n     if (!soundOn) return;\r\n     const audioRef = type === \"match\" ? matchSoundRef : leaveSoundRef;\r\n     const play = async () => {\r\n@@ -115,10 +126,17 @@\n   const handleStart = () => {\r\n     if (!sessionStarted) {\r\n       setLoading(true);\r\n       setSessionStarted(true);\r\n-      socket?.emit(\"start-looking\");\r\n-      console.log(\"🔎 Started looking for partner\");\r\n+      socket?.emit(\"start-looking\", {\r\n+        name: userInfo.name,\r\n+        age: userInfo.age,\r\n+        gender: userInfo.gender,\r\n+        country: userInfo.country,\r\n+        filterGender: genderFilter,\r\n+        filterCountry: countryFilter,\r\n+      });\r\n+      console.log(\"🔎 Started looking for partner with filters\");\r\n     }\r\n   };\r\n \r\n   const handleStop = () => {\r\n@@ -244,20 +262,45 @@\n           )}\r\n         </div>\r\n \r\n         {/* Bottom Controls */}\r\n-        <div className=\"p-3 border-t border-neutral-300 dark:border-neutral-700 bg-white dark:bg-neutral-800 flex justify-between items-center\">\r\n-          {/* Sound Toggle */}\r\n-          <button\r\n-            onClick={() => setSoundOn((prev) => !prev)}\r\n-            className=\"text-neutral-700 dark:text-neutral-300 hover:text-blue-600 dark:hover:text-blue-400 transition\"\r\n-            title={soundOn ? \"Mute Sounds\" : \"Unmute Sounds\"}\r\n-          >\r\n-            {soundOn ? <Volume2 className=\"w-5 h-5\" /> : <VolumeX className=\"w-5 h-5\" />}\r\n-          </button>\r\n+        <div className=\"p-3 border-t border-neutral-300 dark:border-neutral-700 bg-white dark:bg-neutral-800\">\r\n+          <div className=\"flex flex-col sm:flex-row justify-between gap-2 items-center\">\r\n+            {/* Filters */}\r\n+            <div className=\"flex gap-2 w-full sm:w-auto\">\r\n+              <select\r\n+                value={genderFilter}\r\n+                onChange={(e) => setGenderFilter(e.target.value)}\r\n+                className=\"text-sm px-2 py-1 rounded border dark:bg-neutral-700 dark:text-white\"\r\n+              >\r\n+                <option value=\"\">Any Gender</option>\r\n+                <option value=\"female\">Female</option>\r\n+                <option value=\"male\">Male</option>\r\n+                <option value=\"other\">Other</option>\r\n+              </select>\r\n \r\n-          {/* Start/Skip/Stop Buttons */}\r\n-          {renderControlButton()}\r\n+              <input\r\n+                type=\"text\"\r\n+                placeholder=\"Country\"\r\n+                value={countryFilter}\r\n+                onChange={(e) => setCountryFilter(e.target.value)}\r\n+                className=\"text-sm px-2 py-1 rounded border dark:bg-neutral-700 dark:text-white\"\r\n+              />\r\n+            </div>\r\n+\r\n+            {/* Sound + Control Button */}\r\n+            <div className=\"flex items-center gap-3 w-full sm:w-auto justify-between sm:justify-end\">\r\n+              <button\r\n+                onClick={() => setSoundOn((prev) => !prev)}\r\n+                className=\"text-neutral-700 dark:text-neutral-300 hover:text-blue-600 dark:hover:text-blue-400 transition\"\r\n+                title={soundOn ? \"Mute Sounds\" : \"Unmute Sounds\"}\r\n+              >\r\n+                {soundOn ? <Volume2 className=\"w-5 h-5\" /> : <VolumeX className=\"w-5 h-5\" />}\r\n+              </button>\r\n+\r\n+              {renderControlButton()}\r\n+            </div>\r\n+          </div>\r\n         </div>\r\n       </div>\r\n     </div>\r\n   );\r\n"
                },
                {
                    "date": 1752518984259,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -270,8 +270,9 @@\n               <select\r\n                 value={genderFilter}\r\n                 onChange={(e) => setGenderFilter(e.target.value)}\r\n                 className=\"text-sm px-2 py-1 rounded border dark:bg-neutral-700 dark:text-white\"\r\n+                aria-label=\"Gender filter\"\r\n               >\r\n                 <option value=\"\">Any Gender</option>\r\n                 <option value=\"female\">Female</option>\r\n                 <option value=\"male\">Male</option>\r\n"
                },
                {
                    "date": 1752520464073,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -262,47 +262,57 @@\n           )}\r\n         </div>\r\n \r\n         {/* Bottom Controls */}\r\n-        <div className=\"p-3 border-t border-neutral-300 dark:border-neutral-700 bg-white dark:bg-neutral-800\">\r\n-          <div className=\"flex flex-col sm:flex-row justify-between gap-2 items-center\">\r\n-            {/* Filters */}\r\n-            <div className=\"flex gap-2 w-full sm:w-auto\">\r\n-              <select\r\n-                value={genderFilter}\r\n-                onChange={(e) => setGenderFilter(e.target.value)}\r\n-                className=\"text-sm px-2 py-1 rounded border dark:bg-neutral-700 dark:text-white\"\r\n-                aria-label=\"Gender filter\"\r\n-              >\r\n-                <option value=\"\">Any Gender</option>\r\n-                <option value=\"female\">Female</option>\r\n-                <option value=\"male\">Male</option>\r\n-                <option value=\"other\">Other</option>\r\n-              </select>\r\n+<div className=\"p-3 border-t border-neutral-300 dark:border-neutral-700 bg-white dark:bg-neutral-800\">\r\n+  <div className=\"flex flex-wrap sm:flex-nowrap items-center justify-between gap-3\">\r\n+    \r\n+    {/* Controls Row */}\r\n+    <div className=\"flex flex-wrap sm:flex-nowrap items-center gap-3 flex-grow\">\r\n \r\n-              <input\r\n-                type=\"text\"\r\n-                placeholder=\"Country\"\r\n-                value={countryFilter}\r\n-                onChange={(e) => setCountryFilter(e.target.value)}\r\n-                className=\"text-sm px-2 py-1 rounded border dark:bg-neutral-700 dark:text-white\"\r\n-              />\r\n-            </div>\r\n+      {/* Sound Toggle */}\r\n+      <button\r\n+        onClick={() => setSoundOn((prev) => !prev)}\r\n+        className=\"p-2 rounded-md border border-neutral-300 dark:border-neutral-600 text-neutral-700 dark:text-neutral-200 hover:bg-neutral-100 dark:hover:bg-neutral-700 transition\"\r\n+        title={soundOn ? \"Mute Sounds\" : \"Unmute Sounds\"}\r\n+      >\r\n+        {soundOn ? <Volume2 className=\"w-5 h-5\" /> : <VolumeX className=\"w-5 h-5\" />}\r\n+      </button>\r\n \r\n-            {/* Sound + Control Button */}\r\n-            <div className=\"flex items-center gap-3 w-full sm:w-auto justify-between sm:justify-end\">\r\n-              <button\r\n-                onClick={() => setSoundOn((prev) => !prev)}\r\n-                className=\"text-neutral-700 dark:text-neutral-300 hover:text-blue-600 dark:hover:text-blue-400 transition\"\r\n-                title={soundOn ? \"Mute Sounds\" : \"Unmute Sounds\"}\r\n-              >\r\n-                {soundOn ? <Volume2 className=\"w-5 h-5\" /> : <VolumeX className=\"w-5 h-5\" />}\r\n-              </button>\r\n+      {/* Gender Filter */}\r\n+      <select\r\n+        value={genderFilter}\r\n+        onChange={(e) => setGenderFilter(e.target.value)}\r\n+        className=\"text-sm px-3 py-2 rounded-md border border-neutral-300 dark:border-neutral-600 bg-white dark:bg-neutral-700 dark:text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n+        aria-label=\"Gender filter\"\r\n+      >\r\n+        <option value=\"\">Any Gender</option>\r\n+        <option value=\"female\">Female</option>\r\n+        <option value=\"male\">Male</option>\r\n+        <option value=\"other\">Other</option>\r\n+      </select>\r\n \r\n-              {renderControlButton()}\r\n-            </div>\r\n-          </div>\r\n-        </div>\r\n+      {/* Country Input */}\r\n+      <input\r\n+        type=\"text\"\r\n+        placeholder=\"Country\"\r\n+        value={countryFilter}\r\n+        onChange={(e) => setCountryFilter(e.target.value)}\r\n+        className=\"text-sm px-3 py-2 rounded-md border border-neutral-300 dark:border-neutral-600 bg-white dark:bg-neutral-700 dark:text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n+      />\r\n+    </div>\r\n+\r\n+    {/* Start Button */}\r\n+    <div className=\"w-full sm:w-auto\">\r\n+      <button\r\n+        onClick={handleStart}\r\n+        className=\"w-full sm:w-auto px-6 py-2 text-sm font-semibold bg-blue-600 text-white rounded-md hover:bg-blue-700 transition\"\r\n+      >\r\n+        Start\r\n+      </button>\r\n+    </div>\r\n+  </div>\r\n+</div>\r\n       </div>\r\n     </div>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1752520592483,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -262,57 +262,48 @@\n           )}\r\n         </div>\r\n \r\n         {/* Bottom Controls */}\r\n-<div className=\"p-3 border-t border-neutral-300 dark:border-neutral-700 bg-white dark:bg-neutral-800\">\r\n-  <div className=\"flex flex-wrap sm:flex-nowrap items-center justify-between gap-3\">\r\n-    \r\n-    {/* Controls Row */}\r\n-    <div className=\"flex flex-wrap sm:flex-nowrap items-center gap-3 flex-grow\">\r\n+        <div className=\"p-3 border-t border-neutral-300 dark:border-neutral-700 bg-white dark:bg-neutral-800\">\r\n+          <div className=\"flex flex-wrap sm:flex-nowrap items-center justify-between gap-3\">\r\n \r\n-      {/* Sound Toggle */}\r\n-      <button\r\n-        onClick={() => setSoundOn((prev) => !prev)}\r\n-        className=\"p-2 rounded-md border border-neutral-300 dark:border-neutral-600 text-neutral-700 dark:text-neutral-200 hover:bg-neutral-100 dark:hover:bg-neutral-700 transition\"\r\n-        title={soundOn ? \"Mute Sounds\" : \"Unmute Sounds\"}\r\n-      >\r\n-        {soundOn ? <Volume2 className=\"w-5 h-5\" /> : <VolumeX className=\"w-5 h-5\" />}\r\n-      </button>\r\n+            {/* Controls Row */}\r\n+            <div className=\"flex flex-wrap sm:flex-nowrap items-center gap-3 flex-grow\">\r\n \r\n-      {/* Gender Filter */}\r\n-      <select\r\n-        value={genderFilter}\r\n-        onChange={(e) => setGenderFilter(e.target.value)}\r\n-        className=\"text-sm px-3 py-2 rounded-md border border-neutral-300 dark:border-neutral-600 bg-white dark:bg-neutral-700 dark:text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n-        aria-label=\"Gender filter\"\r\n-      >\r\n-        <option value=\"\">Any Gender</option>\r\n-        <option value=\"female\">Female</option>\r\n-        <option value=\"male\">Male</option>\r\n-        <option value=\"other\">Other</option>\r\n-      </select>\r\n+              {/* Sound Toggle */}\r\n+              <button\r\n+                onClick={() => setSoundOn((prev) => !prev)}\r\n+                className=\"p-2 rounded-md border border-neutral-300 dark:border-neutral-600 text-neutral-700 dark:text-neutral-200 hover:bg-neutral-100 dark:hover:bg-neutral-700 transition\"\r\n+                title={soundOn ? \"Mute Sounds\" : \"Unmute Sounds\"}\r\n+              >\r\n+                {soundOn ? <Volume2 className=\"w-5 h-5\" /> : <VolumeX className=\"w-5 h-5\" />}\r\n+              </button>\r\n \r\n-      {/* Country Input */}\r\n-      <input\r\n-        type=\"text\"\r\n-        placeholder=\"Country\"\r\n-        value={countryFilter}\r\n-        onChange={(e) => setCountryFilter(e.target.value)}\r\n-        className=\"text-sm px-3 py-2 rounded-md border border-neutral-300 dark:border-neutral-600 bg-white dark:bg-neutral-700 dark:text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n-      />\r\n-    </div>\r\n+              {/* Gender Filter */}\r\n+              <select\r\n+                value={genderFilter}\r\n+                onChange={(e) => setGenderFilter(e.target.value)}\r\n+                className=\"text-sm px-3 py-2 rounded-md border border-neutral-300 dark:border-neutral-600 bg-white dark:bg-neutral-700 dark:text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n+                aria-label=\"Gender filter\"\r\n+              >\r\n+                <option value=\"\">Any Gender</option>\r\n+                <option value=\"female\">Female</option>\r\n+                <option value=\"male\">Male</option>\r\n+                <option value=\"other\">Other</option>\r\n+              </select>\r\n \r\n-    {/* Start Button */}\r\n-    <div className=\"w-full sm:w-auto\">\r\n-      <button\r\n-        onClick={handleStart}\r\n-        className=\"w-full sm:w-auto px-6 py-2 text-sm font-semibold bg-blue-600 text-white rounded-md hover:bg-blue-700 transition\"\r\n-      >\r\n-        Start\r\n-      </button>\r\n-    </div>\r\n-  </div>\r\n-</div>\r\n+              {/* Country Input */}\r\n+              <input\r\n+                type=\"text\"\r\n+                placeholder=\"Country\"\r\n+                value={countryFilter}\r\n+                onChange={(e) => setCountryFilter(e.target.value)}\r\n+                className=\"text-sm px-3 py-2 rounded-md border border-neutral-300 dark:border-neutral-600 bg-white dark:bg-neutral-700 dark:text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n+              />\r\n+            </div>\r\n+\r\n+          </div>\r\n+        </div>\r\n       </div>\r\n     </div>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1752520710010,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -263,45 +263,43 @@\n         </div>\r\n \r\n         {/* Bottom Controls */}\r\n         <div className=\"p-3 border-t border-neutral-300 dark:border-neutral-700 bg-white dark:bg-neutral-800\">\r\n-          <div className=\"flex flex-wrap sm:flex-nowrap items-center justify-between gap-3\">\r\n-\r\n-            {/* Controls Row */}\r\n-            <div className=\"flex flex-wrap sm:flex-nowrap items-center gap-3 flex-grow\">\r\n-\r\n-              {/* Sound Toggle */}\r\n-              <button\r\n-                onClick={() => setSoundOn((prev) => !prev)}\r\n-                className=\"p-2 rounded-md border border-neutral-300 dark:border-neutral-600 text-neutral-700 dark:text-neutral-200 hover:bg-neutral-100 dark:hover:bg-neutral-700 transition\"\r\n-                title={soundOn ? \"Mute Sounds\" : \"Unmute Sounds\"}\r\n-              >\r\n-                {soundOn ? <Volume2 className=\"w-5 h-5\" /> : <VolumeX className=\"w-5 h-5\" />}\r\n-              </button>\r\n-\r\n-              {/* Gender Filter */}\r\n+          <div className=\"flex flex-col sm:flex-row justify-between gap-2 items-center\">\r\n+            {/* Filters */}\r\n+            <div className=\"flex gap-2 w-full sm:w-auto\">\r\n               <select\r\n                 value={genderFilter}\r\n                 onChange={(e) => setGenderFilter(e.target.value)}\r\n-                className=\"text-sm px-3 py-2 rounded-md border border-neutral-300 dark:border-neutral-600 bg-white dark:bg-neutral-700 dark:text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n+                className=\"text-sm px-2 py-1 rounded border dark:bg-neutral-700 dark:text-white\"\r\n                 aria-label=\"Gender filter\"\r\n               >\r\n                 <option value=\"\">Any Gender</option>\r\n                 <option value=\"female\">Female</option>\r\n                 <option value=\"male\">Male</option>\r\n                 <option value=\"other\">Other</option>\r\n               </select>\r\n \r\n-              {/* Country Input */}\r\n               <input\r\n                 type=\"text\"\r\n                 placeholder=\"Country\"\r\n                 value={countryFilter}\r\n                 onChange={(e) => setCountryFilter(e.target.value)}\r\n-                className=\"text-sm px-3 py-2 rounded-md border border-neutral-300 dark:border-neutral-600 bg-white dark:bg-neutral-700 dark:text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n+                className=\"text-sm px-2 py-1 rounded border dark:bg-neutral-700 dark:text-white\"\r\n               />\r\n             </div>\r\n \r\n+            {/* Sound + Control Button */}\r\n+            <div className=\"flex items-center gap-3 w-full sm:w-auto justify-between sm:justify-end\">\r\n+              <button\r\n+                onClick={() => setSoundOn((prev) => !prev)}\r\n+                className=\"text-neutral-700 dark:text-neutral-300 hover:text-blue-600 dark:hover:text-blue-400 transition\"\r\n+                title={soundOn ? \"Mute Sounds\" : \"Unmute Sounds\"}\r\n+              >\r\n+                {soundOn ? <Volume2 className=\"w-5 h-5\" /> : <VolumeX className=\"w-5 h-5\" />}\r\n+              </button>\r\n+              {renderControlButton()}\r\n+            </div>\r\n           </div>\r\n         </div>\r\n       </div>\r\n     </div>\r\n"
                },
                {
                    "date": 1752520955220,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -261,47 +261,48 @@\n             renderIdleMessage()\r\n           )}\r\n         </div>\r\n \r\n-        {/* Bottom Controls */}\r\n-        <div className=\"p-3 border-t border-neutral-300 dark:border-neutral-700 bg-white dark:bg-neutral-800\">\r\n-          <div className=\"flex flex-col sm:flex-row justify-between gap-2 items-center\">\r\n-            {/* Filters */}\r\n-            <div className=\"flex gap-2 w-full sm:w-auto\">\r\n-              <select\r\n-                value={genderFilter}\r\n-                onChange={(e) => setGenderFilter(e.target.value)}\r\n-                className=\"text-sm px-2 py-1 rounded border dark:bg-neutral-700 dark:text-white\"\r\n-                aria-label=\"Gender filter\"\r\n-              >\r\n-                <option value=\"\">Any Gender</option>\r\n-                <option value=\"female\">Female</option>\r\n-                <option value=\"male\">Male</option>\r\n-                <option value=\"other\">Other</option>\r\n-              </select>\r\n+{/* Bottom Controls */}\r\n+<div className=\"p-3 border-t border-neutral-300 dark:border-neutral-700 bg-white dark:bg-neutral-800\">\r\n+  <div className=\"flex flex-wrap sm:flex-nowrap gap-3 items-center justify-between\">\r\n+    {/* Sound Toggle */}\r\n+    <button\r\n+      onClick={() => setSoundOn((prev) => !prev)}\r\n+      className=\"text-neutral-700 dark:text-neutral-300 hover:text-blue-600 dark:hover:text-blue-400 transition\"\r\n+      title={soundOn ? \"Mute Sounds\" : \"Unmute Sounds\"}\r\n+    >\r\n+      {soundOn ? <Volume2 className=\"w-5 h-5\" /> : <VolumeX className=\"w-5 h-5\" />}\r\n+    </button>\r\n \r\n-              <input\r\n-                type=\"text\"\r\n-                placeholder=\"Country\"\r\n-                value={countryFilter}\r\n-                onChange={(e) => setCountryFilter(e.target.value)}\r\n-                className=\"text-sm px-2 py-1 rounded border dark:bg-neutral-700 dark:text-white\"\r\n-              />\r\n-            </div>\r\n+    {/* Gender Filter */}\r\n+    <select\r\n+      value={genderFilter}\r\n+      onChange={(e) => setGenderFilter(e.target.value)}\r\n+      className=\"text-sm px-3 py-2 rounded-lg border border-neutral-300 dark:border-neutral-600 bg-white dark:bg-neutral-700 text-neutral-800 dark:text-white shadow-sm focus:outline-none\"\r\n+      aria-label=\"Gender Filter\"\r\n+    >\r\n+      <option value=\"\">Any Gender</option>\r\n+      <option value=\"female\">Female</option>\r\n+      <option value=\"male\">Male</option>\r\n+      <option value=\"other\">Other</option>\r\n+    </select>\r\n \r\n-            {/* Sound + Control Button */}\r\n-            <div className=\"flex items-center gap-3 w-full sm:w-auto justify-between sm:justify-end\">\r\n-              <button\r\n-                onClick={() => setSoundOn((prev) => !prev)}\r\n-                className=\"text-neutral-700 dark:text-neutral-300 hover:text-blue-600 dark:hover:text-blue-400 transition\"\r\n-                title={soundOn ? \"Mute Sounds\" : \"Unmute Sounds\"}\r\n-              >\r\n-                {soundOn ? <Volume2 className=\"w-5 h-5\" /> : <VolumeX className=\"w-5 h-5\" />}\r\n-              </button>\r\n-              {renderControlButton()}\r\n-            </div>\r\n-          </div>\r\n-        </div>\r\n+    {/* Country Input */}\r\n+    <input\r\n+      type=\"text\"\r\n+      placeholder=\"Country\"\r\n+      value={countryFilter}\r\n+      onChange={(e) => setCountryFilter(e.target.value)}\r\n+      className=\"text-sm px-3 py-2 rounded-lg border border-neutral-300 dark:border-neutral-600 bg-white dark:bg-neutral-700 text-neutral-800 dark:text-white shadow-sm focus:outline-none\"\r\n+    />\r\n+\r\n+    {/* Control Button (Start/Stop/Skip) */}\r\n+    <div className=\"flex-1 sm:flex-initial\">\r\n+      {renderControlButton()}\r\n+    </div>\r\n+  </div>\r\n+</div>\r\n       </div>\r\n     </div>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1752520977394,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -261,48 +261,48 @@\n             renderIdleMessage()\r\n           )}\r\n         </div>\r\n \r\n-{/* Bottom Controls */}\r\n-<div className=\"p-3 border-t border-neutral-300 dark:border-neutral-700 bg-white dark:bg-neutral-800\">\r\n-  <div className=\"flex flex-wrap sm:flex-nowrap gap-3 items-center justify-between\">\r\n-    {/* Sound Toggle */}\r\n-    <button\r\n-      onClick={() => setSoundOn((prev) => !prev)}\r\n-      className=\"text-neutral-700 dark:text-neutral-300 hover:text-blue-600 dark:hover:text-blue-400 transition\"\r\n-      title={soundOn ? \"Mute Sounds\" : \"Unmute Sounds\"}\r\n-    >\r\n-      {soundOn ? <Volume2 className=\"w-5 h-5\" /> : <VolumeX className=\"w-5 h-5\" />}\r\n-    </button>\r\n+        {/* Bottom Controls */}\r\n+        <div className=\"p-3 border-t border-neutral-300 dark:border-neutral-700 bg-white dark:bg-neutral-800\">\r\n+          <div className=\"flex flex-wrap sm:flex-nowrap gap-3 items-center justify-between\">\r\n+            {/* Sound Toggle */}\r\n+            <button\r\n+              onClick={() => setSoundOn((prev) => !prev)}\r\n+              className=\"text-neutral-700 dark:text-neutral-300 hover:text-blue-600 dark:hover:text-blue-400 transition\"\r\n+              title={soundOn ? \"Mute Sounds\" : \"Unmute Sounds\"}\r\n+            >\r\n+              {soundOn ? <Volume2 className=\"w-5 h-5\" /> : <VolumeX className=\"w-5 h-5\" />}\r\n+            </button>\r\n \r\n-    {/* Gender Filter */}\r\n-    <select\r\n-      value={genderFilter}\r\n-      onChange={(e) => setGenderFilter(e.target.value)}\r\n-      className=\"text-sm px-3 py-2 rounded-lg border border-neutral-300 dark:border-neutral-600 bg-white dark:bg-neutral-700 text-neutral-800 dark:text-white shadow-sm focus:outline-none\"\r\n-      aria-label=\"Gender Filter\"\r\n-    >\r\n-      <option value=\"\">Any Gender</option>\r\n-      <option value=\"female\">Female</option>\r\n-      <option value=\"male\">Male</option>\r\n-      <option value=\"other\">Other</option>\r\n-    </select>\r\n+            {/* Gender Filter */}\r\n+            <select\r\n+              value={genderFilter}\r\n+              onChange={(e) => setGenderFilter(e.target.value)}\r\n+              className=\"text-sm px-3 py-2 rounded-lg border border-neutral-300 dark:border-neutral-600 bg-white dark:bg-neutral-700 text-neutral-800 dark:text-white shadow-sm focus:outline-none\"\r\n+              aria-label=\"Gender Filter\"\r\n+            >\r\n+              <option value=\"\">Any Gender</option>\r\n+              <option value=\"female\">Female</option>\r\n+              <option value=\"male\">Male</option>\r\n+              <option value=\"other\">Other</option>\r\n+            </select>\r\n \r\n-    {/* Country Input */}\r\n-    <input\r\n-      type=\"text\"\r\n-      placeholder=\"Country\"\r\n-      value={countryFilter}\r\n-      onChange={(e) => setCountryFilter(e.target.value)}\r\n-      className=\"text-sm px-3 py-2 rounded-lg border border-neutral-300 dark:border-neutral-600 bg-white dark:bg-neutral-700 text-neutral-800 dark:text-white shadow-sm focus:outline-none\"\r\n-    />\r\n+            {/* Country Input */}\r\n+            <input\r\n+              type=\"text\"\r\n+              placeholder=\"Country\"\r\n+              value={countryFilter}\r\n+              onChange={(e) => setCountryFilter(e.target.value)}\r\n+              className=\"text-sm px-3 py-2 rounded-lg border border-neutral-300 dark:border-neutral-600 bg-white dark:bg-neutral-700 text-neutral-800 dark:text-white shadow-sm focus:outline-none\"\r\n+            />\r\n \r\n-    {/* Control Button (Start/Stop/Skip) */}\r\n-    <div className=\"flex-1 sm:flex-initial\">\r\n-      {renderControlButton()}\r\n-    </div>\r\n-  </div>\r\n-</div>\r\n+            {/* Control Button (Start/Stop/Skip) */}\r\n+            <div className=\"flex-1 sm:flex-initial\">\r\n+              {renderControlButton()}\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n       </div>\r\n     </div>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1752521041590,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -280,9 +280,9 @@\n               onChange={(e) => setGenderFilter(e.target.value)}\r\n               className=\"text-sm px-3 py-2 rounded-lg border border-neutral-300 dark:border-neutral-600 bg-white dark:bg-neutral-700 text-neutral-800 dark:text-white shadow-sm focus:outline-none\"\r\n               aria-label=\"Gender Filter\"\r\n             >\r\n-              <option value=\"\">Any Gender</option>\r\n+              <option value=\"\">Gender</option>\r\n               <option value=\"female\">Female</option>\r\n               <option value=\"male\">Male</option>\r\n               <option value=\"other\">Other</option>\r\n             </select>\r\n"
                },
                {
                    "date": 1752521152461,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -288,15 +288,16 @@\n             </select>\r\n \r\n             {/* Country Input */}\r\n             <input\r\n-              type=\"text\"\r\n-              placeholder=\"Country\"\r\n-              value={countryFilter}\r\n-              onChange={(e) => setCountryFilter(e.target.value)}\r\n-              className=\"text-sm px-3 py-2 rounded-lg border border-neutral-300 dark:border-neutral-600 bg-white dark:bg-neutral-700 text-neutral-800 dark:text-white shadow-sm focus:outline-none\"\r\n-            />\r\n+  type=\"text\"\r\n+  placeholder=\"Country\"\r\n+  value={countryFilter}\r\n+  onChange={(e) => setCountryFilter(e.target.value)}\r\n+  className=\"w-[70%] text-sm px-3 py-2 rounded-lg border border-neutral-300 dark:border-neutral-600 bg-white dark:bg-neutral-700 text-neutral-800 dark:text-white shadow-sm focus:outline-none\"\r\n+/>\r\n \r\n+\r\n             {/* Control Button (Start/Stop/Skip) */}\r\n             <div className=\"flex-1 sm:flex-initial\">\r\n               {renderControlButton()}\r\n             </div>\r\n"
                },
                {
                    "date": 1752521157670,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -288,16 +288,15 @@\n             </select>\r\n \r\n             {/* Country Input */}\r\n             <input\r\n-  type=\"text\"\r\n-  placeholder=\"Country\"\r\n-  value={countryFilter}\r\n-  onChange={(e) => setCountryFilter(e.target.value)}\r\n-  className=\"w-[70%] text-sm px-3 py-2 rounded-lg border border-neutral-300 dark:border-neutral-600 bg-white dark:bg-neutral-700 text-neutral-800 dark:text-white shadow-sm focus:outline-none\"\r\n-/>\r\n+              type=\"text\"\r\n+              placeholder=\"Country\"\r\n+              value={countryFilter}\r\n+              onChange={(e) => setCountryFilter(e.target.value)}\r\n+              className=\"w-[70%] text-sm px-3 py-2 rounded-lg border border-neutral-300 dark:border-neutral-600 bg-white dark:bg-neutral-700 text-neutral-800 dark:text-white shadow-sm focus:outline-none\"\r\n+            />\r\n \r\n-\r\n             {/* Control Button (Start/Stop/Skip) */}\r\n             <div className=\"flex-1 sm:flex-initial\">\r\n               {renderControlButton()}\r\n             </div>\r\n"
                },
                {
                    "date": 1752521917466,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,8 +25,9 @@\n   const [lastAction, setLastAction] = useState<\"skipped\" | \"left\" | null>(null);\r\n   const [soundOn, setSoundOn] = useState(true);\r\n \r\n   const [userInfo, setUserInfo] = useState<any>({});\r\n+  const [partnerInfo, setPartnerInfo] = useState<any>(null);\r\n   const [genderFilter, setGenderFilter] = useState(\"\");\r\n   const [countryFilter, setCountryFilter] = useState(\"\");\r\n \r\n   const socket = useSocket();\r\n@@ -59,12 +60,13 @@\n     play();\r\n   };\r\n \r\n   const handleMatched = useCallback(\r\n-    ({ roomId, isOfferer }: { roomId: string; partnerId: string; isOfferer: boolean }) => {\r\n-      console.log(\"🎉 Matched in room:\", roomId, \"Offerer:\", isOfferer);\r\n+    ({ roomId, isOfferer, partnerInfo }: { roomId: string; partnerId: string; isOfferer: boolean; partnerInfo: any }) => {\r\n+      console.log(\"🎉 Matched in room:\", roomId, \"Offerer:\", isOfferer, \"Partner:\", partnerInfo);\r\n       setRoomId(roomId);\r\n       setIsOfferer(isOfferer);\r\n+      setPartnerInfo(partnerInfo);\r\n       setLoading(false);\r\n       setLastAction(null);\r\n       playSound(\"match\");\r\n     },\r\n@@ -255,9 +257,9 @@\n       {/* Chat + Controls */}\r\n       <div className=\"w-full md:w-[420px] flex flex-col border-t md:border-t-0 md:border-l border-neutral-300 dark:border-neutral-700\">\r\n         <div className=\"flex-grow overflow-hidden\">\r\n           {roomId ? (\r\n-            <ChatBox socket={socket} roomId={roomId} soundOn={soundOn} />\r\n+            <ChatBox socket={socket} roomId={roomId} soundOn={soundOn} partnerInfo={partnerInfo} />\r\n           ) : (\r\n             renderIdleMessage()\r\n           )}\r\n         </div>\r\n@@ -295,9 +297,9 @@\n               onChange={(e) => setCountryFilter(e.target.value)}\r\n               className=\"w-[70%] text-sm px-3 py-2 rounded-lg border border-neutral-300 dark:border-neutral-600 bg-white dark:bg-neutral-700 text-neutral-800 dark:text-white shadow-sm focus:outline-none\"\r\n             />\r\n \r\n-            {/* Control Button (Start/Stop/Skip) */}\r\n+            {/* Control Button */}\r\n             <div className=\"flex-1 sm:flex-initial\">\r\n               {renderControlButton()}\r\n             </div>\r\n           </div>\r\n"
                },
                {
                    "date": 1752522695090,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -257,9 +257,15 @@\n       {/* Chat + Controls */}\r\n       <div className=\"w-full md:w-[420px] flex flex-col border-t md:border-t-0 md:border-l border-neutral-300 dark:border-neutral-700\">\r\n         <div className=\"flex-grow overflow-hidden\">\r\n           {roomId ? (\r\n-            <ChatBox socket={socket} roomId={roomId} soundOn={soundOn} partnerInfo={partnerInfo} />\r\n+            <ChatBox\r\n+              socket={socket}\r\n+              roomId={roomId}\r\n+              soundOn={soundOn}\r\n+              partnerName={partnerInfo?.name}\r\n+              partnerAge={partnerInfo?.age}\r\n+            />\r\n           ) : (\r\n             renderIdleMessage()\r\n           )}\r\n         </div>\r\n"
                },
                {
                    "date": 1752582010502,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,8 +5,9 @@\n import useSocket from \"../hooks/useSocket\";\r\n import LocalVideo from \"../../../components/video/LocalVideo\";\r\n import RemoteVideo from \"../../../components/video/RemoteVideo\";\r\n import ChatBox from \"../../../components/chat/ChatBox\";\r\n+import Navbar from \"../../components/common/Navbar\"; \r\n import FindingPartner from \"./FindingPartner\";\r\n import {\r\n   Users,\r\n   RefreshCcw,\r\n"
                },
                {
                    "date": 1752582077474,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,8 @@\n import useSocket from \"../hooks/useSocket\";\r\n import LocalVideo from \"../../../components/video/LocalVideo\";\r\n import RemoteVideo from \"../../../components/video/RemoteVideo\";\r\n import ChatBox from \"../../../components/chat/ChatBox\";\r\n-import Navbar from \"../../components/common/Navbar\"; \r\n import FindingPartner from \"./FindingPartner\";\r\n import {\r\n   Users,\r\n   RefreshCcw,\r\n"
                },
                {
                    "date": 1752582137640,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,8 +5,9 @@\n import useSocket from \"../hooks/useSocket\";\r\n import LocalVideo from \"../../../components/video/LocalVideo\";\r\n import RemoteVideo from \"../../../components/video/RemoteVideo\";\r\n import ChatBox from \"../../../components/chat/ChatBox\";\r\n+import Image from \"next/image\";\r\n import FindingPartner from \"./FindingPartner\";\r\n import {\r\n   Users,\r\n   RefreshCcw,\r\n"
                },
                {
                    "date": 1752582165410,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,8 +26,9 @@\n   const [lastAction, setLastAction] = useState<\"skipped\" | \"left\" | null>(null);\r\n   const [soundOn, setSoundOn] = useState(true);\r\n \r\n   const [userInfo, setUserInfo] = useState<any>({});\r\n+  const avatarUrl = userInfo?.avatar || \"/default-avatar.png\";\r\n   const [partnerInfo, setPartnerInfo] = useState<any>(null);\r\n   const [genderFilter, setGenderFilter] = useState(\"\");\r\n   const [countryFilter, setCountryFilter] = useState(\"\");\r\n \r\n"
                },
                {
                    "date": 1752582193096,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,320 @@\n+\"use client\";\r\n+\r\n+import React, { useEffect, useState, useCallback, useRef } from \"react\";\r\n+import useWebRTC from \"../hooks/useWebRTC\";\r\n+import useSocket from \"../hooks/useSocket\";\r\n+import LocalVideo from \"../../../components/video/LocalVideo\";\r\n+import RemoteVideo from \"../../../components/video/RemoteVideo\";\r\n+import ChatBox from \"../../../components/chat/ChatBox\";\r\n+import Image from \"next/image\";\r\n+import FindingPartner from \"./FindingPartner\";\r\n+import {\r\n+  Users,\r\n+  RefreshCcw,\r\n+  CircleStop,\r\n+  Volume2,\r\n+  VolumeX,\r\n+  Smile,\r\n+  UserX,\r\n+} from \"lucide-react\";\r\n+\r\n+export default function AnonymousChatRoom() {\r\n+  const [roomId, setRoomId] = useState<string | null>(null);\r\n+  const [isOfferer, setIsOfferer] = useState<boolean | null>(null);\r\n+  const [loading, setLoading] = useState(false);\r\n+  const [sessionStarted, setSessionStarted] = useState(false);\r\n+  const [lastAction, setLastAction] = useState<\"skipped\" | \"left\" | null>(null);\r\n+  const [soundOn, setSoundOn] = useState(true);\r\n+\r\n+  const [userInfo, setUserInfo] = useState<any>({});\r\n+  const avatarUrl = userInfo?.avatar || \"/default-avatar.png\";\r\n+  const [partnerInfo, setPartnerInfo] = useState<any>(null);\r\n+  const [genderFilter, setGenderFilter] = useState(\"\");\r\n+  const [countryFilter, setCountryFilter] = useState(\"\");\r\n+\r\n+  const socket = useSocket();\r\n+  const { localStream, remoteStream } = useWebRTC(roomId, isOfferer, sessionStarted);\r\n+\r\n+  const matchSoundRef = useRef<HTMLAudioElement>(null);\r\n+  const leaveSoundRef = useRef<HTMLAudioElement>(null);\r\n+\r\n+  useEffect(() => {\r\n+    const stored = localStorage.getItem(\"user-info\");\r\n+    if (stored) {\r\n+      setUserInfo(JSON.parse(stored));\r\n+    }\r\n+  }, []);\r\n+\r\n+  const playSound = (type: \"match\" | \"leave\") => {\r\n+    if (!soundOn) return;\r\n+    const audioRef = type === \"match\" ? matchSoundRef : leaveSoundRef;\r\n+    const play = async () => {\r\n+      try {\r\n+        const audio = audioRef.current;\r\n+        if (!audio) return;\r\n+        audio.volume = 0.8;\r\n+        await audio.play();\r\n+      } catch (err) {\r\n+        const ctx = new AudioContext();\r\n+        await ctx.resume();\r\n+      }\r\n+    };\r\n+    play();\r\n+  };\r\n+\r\n+  const handleMatched = useCallback(\r\n+    ({ roomId, isOfferer, partnerInfo }: { roomId: string; partnerId: string; isOfferer: boolean; partnerInfo: any }) => {\r\n+      console.log(\"🎉 Matched in room:\", roomId, \"Offerer:\", isOfferer, \"Partner:\", partnerInfo);\r\n+      setRoomId(roomId);\r\n+      setIsOfferer(isOfferer);\r\n+      setPartnerInfo(partnerInfo);\r\n+      setLoading(false);\r\n+      setLastAction(null);\r\n+      playSound(\"match\");\r\n+    },\r\n+    [soundOn]\r\n+  );\r\n+\r\n+  const handlePartnerLeft = useCallback(() => {\r\n+    console.log(\"👋 Partner left the chat\");\r\n+    setRoomId(null);\r\n+    setIsOfferer(null);\r\n+    setSessionStarted(false);\r\n+    setLoading(false);\r\n+    setLastAction(\"left\");\r\n+    playSound(\"leave\");\r\n+  }, [soundOn]);\r\n+\r\n+  useEffect(() => {\r\n+    if (!socket) return;\r\n+    socket.off(\"matched\", handleMatched);\r\n+    socket.on(\"matched\", handleMatched);\r\n+    socket.on(\"partner-left\", handlePartnerLeft);\r\n+    return () => {\r\n+      socket.off(\"matched\", handleMatched);\r\n+      socket.off(\"partner-left\", handlePartnerLeft);\r\n+    };\r\n+  }, [socket, handleMatched, handlePartnerLeft]);\r\n+\r\n+  useEffect(() => {\r\n+    if (!socket) return;\r\n+\r\n+    const handleDisconnect = () => {\r\n+      console.log(\"⚠️ Disconnected from socket server\");\r\n+      setLoading(false);\r\n+      setSessionStarted(false);\r\n+    };\r\n+\r\n+    const handleConnect = () => {\r\n+      console.log(\"✅ Connected to socket server:\", socket.id);\r\n+    };\r\n+\r\n+    socket.on(\"disconnect\", handleDisconnect);\r\n+    socket.on(\"connect\", handleConnect);\r\n+\r\n+    return () => {\r\n+      socket.off(\"disconnect\", handleDisconnect);\r\n+      socket.off(\"connect\", handleConnect);\r\n+    };\r\n+  }, [socket]);\r\n+\r\n+  useEffect(() => {\r\n+    return () => {\r\n+      if (socket && roomId) {\r\n+        socket.emit(\"leave-room\", roomId);\r\n+        console.log(\"👋 Left room:\", roomId);\r\n+      }\r\n+    };\r\n+  }, [socket, roomId]);\r\n+\r\n+  const handleStart = () => {\r\n+    if (!sessionStarted) {\r\n+      setLoading(true);\r\n+      setSessionStarted(true);\r\n+      socket?.emit(\"start-looking\", {\r\n+        name: userInfo.name,\r\n+        age: userInfo.age,\r\n+        gender: userInfo.gender,\r\n+        country: userInfo.country,\r\n+        filterGender: genderFilter,\r\n+        filterCountry: countryFilter,\r\n+      });\r\n+      console.log(\"🔎 Started looking for partner with filters\");\r\n+    }\r\n+  };\r\n+\r\n+  const handleStop = () => {\r\n+    if (roomId) {\r\n+      socket?.emit(\"leave-room\", roomId);\r\n+      console.log(\"🛑 Stopped session and left room:\", roomId);\r\n+    }\r\n+    setRoomId(null);\r\n+    setIsOfferer(null);\r\n+    setSessionStarted(false);\r\n+    setLoading(false);\r\n+  };\r\n+\r\n+  const handleSkip = () => {\r\n+    handleStop();\r\n+    handleStart();\r\n+    setLastAction(\"skipped\");\r\n+    console.log(\"⏭️ Skipped to new partner\");\r\n+  };\r\n+\r\n+  const renderControlButton = () => {\r\n+    const baseClasses =\r\n+      \"flex items-center gap-2 px-4 py-2 rounded-lg shadow font-medium transition whitespace-nowrap\";\r\n+    if (!sessionStarted) {\r\n+      return (\r\n+        <button\r\n+          onClick={handleStart}\r\n+          className={`${baseClasses} bg-green-600 hover:bg-green-700 text-white`}\r\n+        >\r\n+          <Users className=\"w-5 h-5\" />\r\n+          Start\r\n+        </button>\r\n+      );\r\n+    } else if (loading) {\r\n+      return (\r\n+        <button\r\n+          onClick={handleStop}\r\n+          className={`${baseClasses} bg-red-600 hover:bg-red-700 text-white`}\r\n+        >\r\n+          <CircleStop className=\"w-5 h-5\" />\r\n+          Stop\r\n+        </button>\r\n+      );\r\n+    } else {\r\n+      return (\r\n+        <button\r\n+          onClick={handleSkip}\r\n+          className={`${baseClasses} bg-yellow-500 hover:bg-yellow-600 text-white`}\r\n+        >\r\n+          <RefreshCcw className=\"w-5 h-5\" />\r\n+          Skip\r\n+        </button>\r\n+      );\r\n+    }\r\n+  };\r\n+\r\n+  const renderIdleMessage = () => {\r\n+    if (roomId) return null;\r\n+    const baseStyle =\r\n+      \"flex flex-col items-center justify-center h-full text-center text-neutral-500 dark:text-neutral-400 p-4 text-sm gap-2\";\r\n+\r\n+    if (lastAction === \"skipped\") {\r\n+      return (\r\n+        <div className={baseStyle}>\r\n+          <Smile className=\"w-8 h-8 text-yellow-400\" />\r\n+          <p>You skipped the chat.</p>\r\n+          <p>Click <b>Start</b> to connect with someone new!</p>\r\n+        </div>\r\n+      );\r\n+    } else if (lastAction === \"left\") {\r\n+      return (\r\n+        <div className={baseStyle}>\r\n+          <UserX className=\"w-8 h-8 text-red-400\" />\r\n+          <p>Your partner left the chat.</p>\r\n+          <p>Click <b>Start</b> to begin again.</p>\r\n+        </div>\r\n+      );\r\n+    } else {\r\n+      return (\r\n+        <div className={baseStyle}>\r\n+          <Users className=\"w-8 h-8 text-neutral-400\" />\r\n+          <p>Click <b>Start</b> to begin searching for a partner.</p>\r\n+        </div>\r\n+      );\r\n+    }\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"flex flex-col md:flex-row h-screen overflow-hidden bg-neutral-100 dark:bg-neutral-900\">\r\n+      {/* Sounds */}\r\n+      <audio ref={matchSoundRef} src=\"/sounds/match.mp3\" preload=\"auto\" />\r\n+      <audio ref={leaveSoundRef} src=\"/sounds/leave.mp3\" preload=\"auto\" />\r\n+\r\n+      {/* Video Section */}\r\n+      <div className=\"flex-1 relative bg-black flex items-center justify-center p-3 sm:p-4\">\r\n+        {!sessionStarted ? (\r\n+          <div className=\"text-white text-lg sm:text-xl font-semibold text-center px-4\">\r\n+            Click Start to begin searching\r\n+          </div>\r\n+        ) : loading ? (\r\n+          <FindingPartner />\r\n+        ) : (\r\n+          <>\r\n+            <RemoteVideo stream={remoteStream} />\r\n+            <div className=\"absolute top-4 right-4 w-32 h-32 sm:w-40 sm:h-40 rounded overflow-hidden border-2 border-white shadow-lg z-20\">\r\n+              {localStream ? (\r\n+                <LocalVideo stream={localStream} />\r\n+              ) : (\r\n+                <div className=\"text-white text-sm p-2\">Loading camera...</div>\r\n+              )}\r\n+            </div>\r\n+          </>\r\n+        )}\r\n+      </div>\r\n+\r\n+      {/* Chat + Controls */}\r\n+      <div className=\"w-full md:w-[420px] flex flex-col border-t md:border-t-0 md:border-l border-neutral-300 dark:border-neutral-700\">\r\n+        <div className=\"flex-grow overflow-hidden\">\r\n+          {roomId ? (\r\n+            <ChatBox\r\n+              socket={socket}\r\n+              roomId={roomId}\r\n+              soundOn={soundOn}\r\n+              partnerName={partnerInfo?.name}\r\n+              partnerAge={partnerInfo?.age}\r\n+            />\r\n+          ) : (\r\n+            renderIdleMessage()\r\n+          )}\r\n+        </div>\r\n+\r\n+        {/* Bottom Controls */}\r\n+        <div className=\"p-3 border-t border-neutral-300 dark:border-neutral-700 bg-white dark:bg-neutral-800\">\r\n+          <div className=\"flex flex-wrap sm:flex-nowrap gap-3 items-center justify-between\">\r\n+\r\n+            \r\n+            {/* Sound Toggle */}\r\n+            <button\r\n+              onClick={() => setSoundOn((prev) => !prev)}\r\n+              className=\"text-neutral-700 dark:text-neutral-300 hover:text-blue-600 dark:hover:text-blue-400 transition\"\r\n+              title={soundOn ? \"Mute Sounds\" : \"Unmute Sounds\"}\r\n+            >\r\n+              {soundOn ? <Volume2 className=\"w-5 h-5\" /> : <VolumeX className=\"w-5 h-5\" />}\r\n+            </button>\r\n+\r\n+            {/* Gender Filter */}\r\n+            <select\r\n+              value={genderFilter}\r\n+              onChange={(e) => setGenderFilter(e.target.value)}\r\n+              className=\"text-sm px-3 py-2 rounded-lg border border-neutral-300 dark:border-neutral-600 bg-white dark:bg-neutral-700 text-neutral-800 dark:text-white shadow-sm focus:outline-none\"\r\n+              aria-label=\"Gender Filter\"\r\n+            >\r\n+              <option value=\"\">Gender</option>\r\n+              <option value=\"female\">Female</option>\r\n+              <option value=\"male\">Male</option>\r\n+              <option value=\"other\">Other</option>\r\n+            </select>\r\n+\r\n+            {/* Country Input */}\r\n+            <input\r\n+              type=\"text\"\r\n+              placeholder=\"Country\"\r\n+              value={countryFilter}\r\n+              onChange={(e) => setCountryFilter(e.target.value)}\r\n+              className=\"w-[70%] text-sm px-3 py-2 rounded-lg border border-neutral-300 dark:border-neutral-600 bg-white dark:bg-neutral-700 text-neutral-800 dark:text-white shadow-sm focus:outline-none\"\r\n+            />\r\n+\r\n+            {/* Control Button */}\r\n+            <div className=\"flex-1 sm:flex-initial\">\r\n+              {renderControlButton()}\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1752582204632,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -274,328 +274,22 @@\n \r\n         {/* Bottom Controls */}\r\n         <div className=\"p-3 border-t border-neutral-300 dark:border-neutral-700 bg-white dark:bg-neutral-800\">\r\n           <div className=\"flex flex-wrap sm:flex-nowrap gap-3 items-center justify-between\">\r\n-\r\n-            \r\n-            {/* Sound Toggle */}\r\n-            <button\r\n-              onClick={() => setSoundOn((prev) => !prev)}\r\n-              className=\"text-neutral-700 dark:text-neutral-300 hover:text-blue-600 dark:hover:text-blue-400 transition\"\r\n-              title={soundOn ? \"Mute Sounds\" : \"Unmute Sounds\"}\r\n-            >\r\n-              {soundOn ? <Volume2 className=\"w-5 h-5\" /> : <VolumeX className=\"w-5 h-5\" />}\r\n-            </button>\r\n-\r\n-            {/* Gender Filter */}\r\n-            <select\r\n-              value={genderFilter}\r\n-              onChange={(e) => setGenderFilter(e.target.value)}\r\n-              className=\"text-sm px-3 py-2 rounded-lg border border-neutral-300 dark:border-neutral-600 bg-white dark:bg-neutral-700 text-neutral-800 dark:text-white shadow-sm focus:outline-none\"\r\n-              aria-label=\"Gender Filter\"\r\n-            >\r\n-              <option value=\"\">Gender</option>\r\n-              <option value=\"female\">Female</option>\r\n-              <option value=\"male\">Male</option>\r\n-              <option value=\"other\">Other</option>\r\n-            </select>\r\n-\r\n-            {/* Country Input */}\r\n-            <input\r\n-              type=\"text\"\r\n-              placeholder=\"Country\"\r\n-              value={countryFilter}\r\n-              onChange={(e) => setCountryFilter(e.target.value)}\r\n-              className=\"w-[70%] text-sm px-3 py-2 rounded-lg border border-neutral-300 dark:border-neutral-600 bg-white dark:bg-neutral-700 text-neutral-800 dark:text-white shadow-sm focus:outline-none\"\r\n-            />\r\n-\r\n-            {/* Control Button */}\r\n-            <div className=\"flex-1 sm:flex-initial\">\r\n-              {renderControlButton()}\r\n-            </div>\r\n-          </div>\r\n-        </div>\r\n-      </div>\r\n+  {/* Avatar */}\r\n+  <div className=\"flex items-center gap-2\">\r\n+    <Image\r\n+      src={avatarUrl}\r\n+      alt=\"Your Avatar\"\r\n+      width={36}\r\n+      height={36}\r\n+      className=\"rounded-full border-2 border-neutral-300 dark:border-neutral-600 shadow\"\r\n+    />\r\n+    <div className=\"text-sm font-medium text-neutral-800 dark:text-neutral-200\">\r\n+      {userInfo.name} <span className=\"text-xs opacity-70\">({userInfo.age})</span>\r\n     </div>\r\n-  );\r\n-}\r\n-\"use client\";\r\n+  </div>\r\n \r\n-import React, { useEffect, useState, useCallback, useRef } from \"react\";\r\n-import useWebRTC from \"../hooks/useWebRTC\";\r\n-import useSocket from \"../hooks/useSocket\";\r\n-import LocalVideo from \"../../../components/video/LocalVideo\";\r\n-import RemoteVideo from \"../../../components/video/RemoteVideo\";\r\n-import ChatBox from \"../../../components/chat/ChatBox\";\r\n-import Image from \"next/image\";\r\n-import FindingPartner from \"./FindingPartner\";\r\n-import {\r\n-  Users,\r\n-  RefreshCcw,\r\n-  CircleStop,\r\n-  Volume2,\r\n-  VolumeX,\r\n-  Smile,\r\n-  UserX,\r\n-} from \"lucide-react\";\r\n-\r\n-export default function AnonymousChatRoom() {\r\n-  const [roomId, setRoomId] = useState<string | null>(null);\r\n-  const [isOfferer, setIsOfferer] = useState<boolean | null>(null);\r\n-  const [loading, setLoading] = useState(false);\r\n-  const [sessionStarted, setSessionStarted] = useState(false);\r\n-  const [lastAction, setLastAction] = useState<\"skipped\" | \"left\" | null>(null);\r\n-  const [soundOn, setSoundOn] = useState(true);\r\n-\r\n-  const [userInfo, setUserInfo] = useState<any>({});\r\n-  const avatarUrl = userInfo?.avatar || \"/default-avatar.png\";\r\n-  const [partnerInfo, setPartnerInfo] = useState<any>(null);\r\n-  const [genderFilter, setGenderFilter] = useState(\"\");\r\n-  const [countryFilter, setCountryFilter] = useState(\"\");\r\n-\r\n-  const socket = useSocket();\r\n-  const { localStream, remoteStream } = useWebRTC(roomId, isOfferer, sessionStarted);\r\n-\r\n-  const matchSoundRef = useRef<HTMLAudioElement>(null);\r\n-  const leaveSoundRef = useRef<HTMLAudioElement>(null);\r\n-\r\n-  useEffect(() => {\r\n-    const stored = localStorage.getItem(\"user-info\");\r\n-    if (stored) {\r\n-      setUserInfo(JSON.parse(stored));\r\n-    }\r\n-  }, []);\r\n-\r\n-  const playSound = (type: \"match\" | \"leave\") => {\r\n-    if (!soundOn) return;\r\n-    const audioRef = type === \"match\" ? matchSoundRef : leaveSoundRef;\r\n-    const play = async () => {\r\n-      try {\r\n-        const audio = audioRef.current;\r\n-        if (!audio) return;\r\n-        audio.volume = 0.8;\r\n-        await audio.play();\r\n-      } catch (err) {\r\n-        const ctx = new AudioContext();\r\n-        await ctx.resume();\r\n-      }\r\n-    };\r\n-    play();\r\n-  };\r\n-\r\n-  const handleMatched = useCallback(\r\n-    ({ roomId, isOfferer, partnerInfo }: { roomId: string; partnerId: string; isOfferer: boolean; partnerInfo: any }) => {\r\n-      console.log(\"🎉 Matched in room:\", roomId, \"Offerer:\", isOfferer, \"Partner:\", partnerInfo);\r\n-      setRoomId(roomId);\r\n-      setIsOfferer(isOfferer);\r\n-      setPartnerInfo(partnerInfo);\r\n-      setLoading(false);\r\n-      setLastAction(null);\r\n-      playSound(\"match\");\r\n-    },\r\n-    [soundOn]\r\n-  );\r\n-\r\n-  const handlePartnerLeft = useCallback(() => {\r\n-    console.log(\"👋 Partner left the chat\");\r\n-    setRoomId(null);\r\n-    setIsOfferer(null);\r\n-    setSessionStarted(false);\r\n-    setLoading(false);\r\n-    setLastAction(\"left\");\r\n-    playSound(\"leave\");\r\n-  }, [soundOn]);\r\n-\r\n-  useEffect(() => {\r\n-    if (!socket) return;\r\n-    socket.off(\"matched\", handleMatched);\r\n-    socket.on(\"matched\", handleMatched);\r\n-    socket.on(\"partner-left\", handlePartnerLeft);\r\n-    return () => {\r\n-      socket.off(\"matched\", handleMatched);\r\n-      socket.off(\"partner-left\", handlePartnerLeft);\r\n-    };\r\n-  }, [socket, handleMatched, handlePartnerLeft]);\r\n-\r\n-  useEffect(() => {\r\n-    if (!socket) return;\r\n-\r\n-    const handleDisconnect = () => {\r\n-      console.log(\"⚠️ Disconnected from socket server\");\r\n-      setLoading(false);\r\n-      setSessionStarted(false);\r\n-    };\r\n-\r\n-    const handleConnect = () => {\r\n-      console.log(\"✅ Connected to socket server:\", socket.id);\r\n-    };\r\n-\r\n-    socket.on(\"disconnect\", handleDisconnect);\r\n-    socket.on(\"connect\", handleConnect);\r\n-\r\n-    return () => {\r\n-      socket.off(\"disconnect\", handleDisconnect);\r\n-      socket.off(\"connect\", handleConnect);\r\n-    };\r\n-  }, [socket]);\r\n-\r\n-  useEffect(() => {\r\n-    return () => {\r\n-      if (socket && roomId) {\r\n-        socket.emit(\"leave-room\", roomId);\r\n-        console.log(\"👋 Left room:\", roomId);\r\n-      }\r\n-    };\r\n-  }, [socket, roomId]);\r\n-\r\n-  const handleStart = () => {\r\n-    if (!sessionStarted) {\r\n-      setLoading(true);\r\n-      setSessionStarted(true);\r\n-      socket?.emit(\"start-looking\", {\r\n-        name: userInfo.name,\r\n-        age: userInfo.age,\r\n-        gender: userInfo.gender,\r\n-        country: userInfo.country,\r\n-        filterGender: genderFilter,\r\n-        filterCountry: countryFilter,\r\n-      });\r\n-      console.log(\"🔎 Started looking for partner with filters\");\r\n-    }\r\n-  };\r\n-\r\n-  const handleStop = () => {\r\n-    if (roomId) {\r\n-      socket?.emit(\"leave-room\", roomId);\r\n-      console.log(\"🛑 Stopped session and left room:\", roomId);\r\n-    }\r\n-    setRoomId(null);\r\n-    setIsOfferer(null);\r\n-    setSessionStarted(false);\r\n-    setLoading(false);\r\n-  };\r\n-\r\n-  const handleSkip = () => {\r\n-    handleStop();\r\n-    handleStart();\r\n-    setLastAction(\"skipped\");\r\n-    console.log(\"⏭️ Skipped to new partner\");\r\n-  };\r\n-\r\n-  const renderControlButton = () => {\r\n-    const baseClasses =\r\n-      \"flex items-center gap-2 px-4 py-2 rounded-lg shadow font-medium transition whitespace-nowrap\";\r\n-    if (!sessionStarted) {\r\n-      return (\r\n-        <button\r\n-          onClick={handleStart}\r\n-          className={`${baseClasses} bg-green-600 hover:bg-green-700 text-white`}\r\n-        >\r\n-          <Users className=\"w-5 h-5\" />\r\n-          Start\r\n-        </button>\r\n-      );\r\n-    } else if (loading) {\r\n-      return (\r\n-        <button\r\n-          onClick={handleStop}\r\n-          className={`${baseClasses} bg-red-600 hover:bg-red-700 text-white`}\r\n-        >\r\n-          <CircleStop className=\"w-5 h-5\" />\r\n-          Stop\r\n-        </button>\r\n-      );\r\n-    } else {\r\n-      return (\r\n-        <button\r\n-          onClick={handleSkip}\r\n-          className={`${baseClasses} bg-yellow-500 hover:bg-yellow-600 text-white`}\r\n-        >\r\n-          <RefreshCcw className=\"w-5 h-5\" />\r\n-          Skip\r\n-        </button>\r\n-      );\r\n-    }\r\n-  };\r\n-\r\n-  const renderIdleMessage = () => {\r\n-    if (roomId) return null;\r\n-    const baseStyle =\r\n-      \"flex flex-col items-center justify-center h-full text-center text-neutral-500 dark:text-neutral-400 p-4 text-sm gap-2\";\r\n-\r\n-    if (lastAction === \"skipped\") {\r\n-      return (\r\n-        <div className={baseStyle}>\r\n-          <Smile className=\"w-8 h-8 text-yellow-400\" />\r\n-          <p>You skipped the chat.</p>\r\n-          <p>Click <b>Start</b> to connect with someone new!</p>\r\n-        </div>\r\n-      );\r\n-    } else if (lastAction === \"left\") {\r\n-      return (\r\n-        <div className={baseStyle}>\r\n-          <UserX className=\"w-8 h-8 text-red-400\" />\r\n-          <p>Your partner left the chat.</p>\r\n-          <p>Click <b>Start</b> to begin again.</p>\r\n-        </div>\r\n-      );\r\n-    } else {\r\n-      return (\r\n-        <div className={baseStyle}>\r\n-          <Users className=\"w-8 h-8 text-neutral-400\" />\r\n-          <p>Click <b>Start</b> to begin searching for a partner.</p>\r\n-        </div>\r\n-      );\r\n-    }\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"flex flex-col md:flex-row h-screen overflow-hidden bg-neutral-100 dark:bg-neutral-900\">\r\n-      {/* Sounds */}\r\n-      <audio ref={matchSoundRef} src=\"/sounds/match.mp3\" preload=\"auto\" />\r\n-      <audio ref={leaveSoundRef} src=\"/sounds/leave.mp3\" preload=\"auto\" />\r\n-\r\n-      {/* Video Section */}\r\n-      <div className=\"flex-1 relative bg-black flex items-center justify-center p-3 sm:p-4\">\r\n-        {!sessionStarted ? (\r\n-          <div className=\"text-white text-lg sm:text-xl font-semibold text-center px-4\">\r\n-            Click Start to begin searching\r\n-          </div>\r\n-        ) : loading ? (\r\n-          <FindingPartner />\r\n-        ) : (\r\n-          <>\r\n-            <RemoteVideo stream={remoteStream} />\r\n-            <div className=\"absolute top-4 right-4 w-32 h-32 sm:w-40 sm:h-40 rounded overflow-hidden border-2 border-white shadow-lg z-20\">\r\n-              {localStream ? (\r\n-                <LocalVideo stream={localStream} />\r\n-              ) : (\r\n-                <div className=\"text-white text-sm p-2\">Loading camera...</div>\r\n-              )}\r\n-            </div>\r\n-          </>\r\n-        )}\r\n-      </div>\r\n-\r\n-      {/* Chat + Controls */}\r\n-      <div className=\"w-full md:w-[420px] flex flex-col border-t md:border-t-0 md:border-l border-neutral-300 dark:border-neutral-700\">\r\n-        <div className=\"flex-grow overflow-hidden\">\r\n-          {roomId ? (\r\n-            <ChatBox\r\n-              socket={socket}\r\n-              roomId={roomId}\r\n-              soundOn={soundOn}\r\n-              partnerName={partnerInfo?.name}\r\n-              partnerAge={partnerInfo?.age}\r\n-            />\r\n-          ) : (\r\n-            renderIdleMessage()\r\n-          )}\r\n-        </div>\r\n-\r\n-        {/* Bottom Controls */}\r\n-        <div className=\"p-3 border-t border-neutral-300 dark:border-neutral-700 bg-white dark:bg-neutral-800\">\r\n-          <div className=\"flex flex-wrap sm:flex-nowrap gap-3 items-center justify-between\">\r\n             {/* Sound Toggle */}\r\n             <button\r\n               onClick={() => setSoundOn((prev) => !prev)}\r\n               className=\"text-neutral-700 dark:text-neutral-300 hover:text-blue-600 dark:hover:text-blue-400 transition\"\r\n"
                },
                {
                    "date": 1752582864432,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -256,39 +256,39 @@\n         )}\r\n       </div>\r\n \r\n       {/* Chat + Controls */}\r\n-      <div className=\"w-full md:w-[420px] flex flex-col border-t md:border-t-0 md:border-l border-neutral-300 dark:border-neutral-700\">\r\n-        <div className=\"flex-grow overflow-hidden\">\r\n-          {roomId ? (\r\n-            <ChatBox\r\n-              socket={socket}\r\n-              roomId={roomId}\r\n-              soundOn={soundOn}\r\n-              partnerName={partnerInfo?.name}\r\n-              partnerAge={partnerInfo?.age}\r\n-            />\r\n-          ) : (\r\n-            renderIdleMessage()\r\n-          )}\r\n+      <div className=\"flex-grow overflow-hidden flex flex-col\">\r\n+  <div className=\"flex-1 overflow-y-auto\">\r\n+    {roomId ? (\r\n+      <ChatBox\r\n+        socket={socket}\r\n+        roomId={roomId}\r\n+        soundOn={soundOn}\r\n+        partnerName={partnerInfo?.name}\r\n+        partnerAge={partnerInfo?.age}\r\n+      />\r\n+    ) : (\r\n+      renderIdleMessage()\r\n+    )}\r\n         </div>\r\n \r\n         {/* Bottom Controls */}\r\n         <div className=\"p-3 border-t border-neutral-300 dark:border-neutral-700 bg-white dark:bg-neutral-800\">\r\n           <div className=\"flex flex-wrap sm:flex-nowrap gap-3 items-center justify-between\">\r\n-  {/* Avatar */}\r\n-  <div className=\"flex items-center gap-2\">\r\n-    <Image\r\n-      src={avatarUrl}\r\n-      alt=\"Your Avatar\"\r\n-      width={36}\r\n-      height={36}\r\n-      className=\"rounded-full border-2 border-neutral-300 dark:border-neutral-600 shadow\"\r\n-    />\r\n-    <div className=\"text-sm font-medium text-neutral-800 dark:text-neutral-200\">\r\n-      {userInfo.name} <span className=\"text-xs opacity-70\">({userInfo.age})</span>\r\n-    </div>\r\n-  </div>\r\n+            {/* Avatar */}\r\n+            <div className=\"flex items-center gap-2\">\r\n+              <Image\r\n+                src={avatarUrl}\r\n+                alt=\"Your Avatar\"\r\n+                width={36}\r\n+                height={36}\r\n+                className=\"rounded-full border-2 border-neutral-300 dark:border-neutral-600 shadow\"\r\n+              />\r\n+              <div className=\"text-sm font-medium text-neutral-800 dark:text-neutral-200\">\r\n+                {userInfo.name} <span className=\"text-xs opacity-70\">({userInfo.age})</span>\r\n+              </div>\r\n+            </div>\r\n \r\n             {/* Sound Toggle */}\r\n             <button\r\n               onClick={() => setSoundOn((prev) => !prev)}\r\n"
                },
                {
                    "date": 1752582976528,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -256,21 +256,21 @@\n         )}\r\n       </div>\r\n \r\n       {/* Chat + Controls */}\r\n-      <div className=\"flex-grow overflow-hidden flex flex-col\">\r\n-  <div className=\"flex-1 overflow-y-auto\">\r\n-    {roomId ? (\r\n-      <ChatBox\r\n-        socket={socket}\r\n-        roomId={roomId}\r\n-        soundOn={soundOn}\r\n-        partnerName={partnerInfo?.name}\r\n-        partnerAge={partnerInfo?.age}\r\n-      />\r\n-    ) : (\r\n-      renderIdleMessage()\r\n-    )}\r\n+      <div className=\"w-full md:w-[420px] flex flex-col border-t md:border-t-0 md:border-l border-neutral-300 dark:border-neutral-700\">\r\n+        <div className=\"flex-grow overflow-hidden\">\r\n+          {roomId ? (\r\n+            <ChatBox\r\n+              socket={socket}\r\n+              roomId={roomId}\r\n+              soundOn={soundOn}\r\n+              partnerName={partnerInfo?.name}\r\n+              partnerAge={partnerInfo?.age}\r\n+            />\r\n+          ) : (\r\n+            renderIdleMessage()\r\n+          )}\r\n         </div>\r\n \r\n         {/* Bottom Controls */}\r\n         <div className=\"p-3 border-t border-neutral-300 dark:border-neutral-700 bg-white dark:bg-neutral-800\">\r\n"
                },
                {
                    "date": 1752583540166,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,9 +63,8 @@\n   };\r\n \r\n   const handleMatched = useCallback(\r\n     ({ roomId, isOfferer, partnerInfo }: { roomId: string; partnerId: string; isOfferer: boolean; partnerInfo: any }) => {\r\n-      console.log(\"🎉 Matched in room:\", roomId, \"Offerer:\", isOfferer, \"Partner:\", partnerInfo);\r\n       setRoomId(roomId);\r\n       setIsOfferer(isOfferer);\r\n       setPartnerInfo(partnerInfo);\r\n       setLoading(false);\r\n@@ -75,9 +74,8 @@\n     [soundOn]\r\n   );\r\n \r\n   const handlePartnerLeft = useCallback(() => {\r\n-    console.log(\"👋 Partner left the chat\");\r\n     setRoomId(null);\r\n     setIsOfferer(null);\r\n     setSessionStarted(false);\r\n     setLoading(false);\r\n@@ -99,15 +97,14 @@\n   useEffect(() => {\r\n     if (!socket) return;\r\n \r\n     const handleDisconnect = () => {\r\n-      console.log(\"⚠️ Disconnected from socket server\");\r\n       setLoading(false);\r\n       setSessionStarted(false);\r\n     };\r\n \r\n     const handleConnect = () => {\r\n-      console.log(\"✅ Connected to socket server:\", socket.id);\r\n+      console.log(\"Connected to socket:\", socket.id);\r\n     };\r\n \r\n     socket.on(\"disconnect\", handleDisconnect);\r\n     socket.on(\"connect\", handleConnect);\r\n@@ -121,9 +118,8 @@\n   useEffect(() => {\r\n     return () => {\r\n       if (socket && roomId) {\r\n         socket.emit(\"leave-room\", roomId);\r\n-        console.log(\"👋 Left room:\", roomId);\r\n       }\r\n     };\r\n   }, [socket, roomId]);\r\n \r\n@@ -138,16 +134,14 @@\n         country: userInfo.country,\r\n         filterGender: genderFilter,\r\n         filterCountry: countryFilter,\r\n       });\r\n-      console.log(\"🔎 Started looking for partner with filters\");\r\n     }\r\n   };\r\n \r\n   const handleStop = () => {\r\n     if (roomId) {\r\n       socket?.emit(\"leave-room\", roomId);\r\n-      console.log(\"🛑 Stopped session and left room:\", roomId);\r\n     }\r\n     setRoomId(null);\r\n     setIsOfferer(null);\r\n     setSessionStarted(false);\r\n@@ -157,9 +151,8 @@\n   const handleSkip = () => {\r\n     handleStop();\r\n     handleStart();\r\n     setLastAction(\"skipped\");\r\n-    console.log(\"⏭️ Skipped to new partner\");\r\n   };\r\n \r\n   const renderControlButton = () => {\r\n     const baseClasses =\r\n@@ -228,15 +221,15 @@\n     }\r\n   };\r\n \r\n   return (\r\n-    <div className=\"flex flex-col md:flex-row h-screen overflow-hidden bg-neutral-100 dark:bg-neutral-900\">\r\n+    <div className=\"flex flex-col md:flex-row h-[calc(100vh-56px)] overflow-hidden bg-neutral-100 dark:bg-neutral-900\">\r\n       {/* Sounds */}\r\n       <audio ref={matchSoundRef} src=\"/sounds/match.mp3\" preload=\"auto\" />\r\n       <audio ref={leaveSoundRef} src=\"/sounds/leave.mp3\" preload=\"auto\" />\r\n \r\n       {/* Video Section */}\r\n-      <div className=\"flex-1 relative bg-black flex items-center justify-center p-3 sm:p-4\">\r\n+      <div className=\"flex-1 relative bg-black flex items-center justify-center p-3 sm:p-4 overflow-hidden\">\r\n         {!sessionStarted ? (\r\n           <div className=\"text-white text-lg sm:text-xl font-semibold text-center px-4\">\r\n             Click Start to begin searching\r\n           </div>\r\n@@ -257,9 +250,9 @@\n       </div>\r\n \r\n       {/* Chat + Controls */}\r\n       <div className=\"w-full md:w-[420px] flex flex-col border-t md:border-t-0 md:border-l border-neutral-300 dark:border-neutral-700\">\r\n-        <div className=\"flex-grow overflow-hidden\">\r\n+        <div className=\"flex-grow overflow-y-auto\">\r\n           {roomId ? (\r\n             <ChatBox\r\n               socket={socket}\r\n               roomId={roomId}\r\n"
                },
                {
                    "date": 1752583669048,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -267,17 +267,9 @@\n \r\n         {/* Bottom Controls */}\r\n         <div className=\"p-3 border-t border-neutral-300 dark:border-neutral-700 bg-white dark:bg-neutral-800\">\r\n           <div className=\"flex flex-wrap sm:flex-nowrap gap-3 items-center justify-between\">\r\n-            {/* Avatar */}\r\n-            <div className=\"flex items-center gap-2\">\r\n-              <Image\r\n-                src={avatarUrl}\r\n-                alt=\"Your Avatar\"\r\n-                width={36}\r\n-                height={36}\r\n-                className=\"rounded-full border-2 border-neutral-300 dark:border-neutral-600 shadow\"\r\n-              />\r\n+           \r\n               <div className=\"text-sm font-medium text-neutral-800 dark:text-neutral-200\">\r\n                 {userInfo.name} <span className=\"text-xs opacity-70\">({userInfo.age})</span>\r\n               </div>\r\n             </div>\r\n@@ -319,7 +311,6 @@\n             </div>\r\n           </div>\r\n         </div>\r\n       </div>\r\n-    </div>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1752583836457,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -267,9 +267,10 @@\n \r\n         {/* Bottom Controls */}\r\n         <div className=\"p-3 border-t border-neutral-300 dark:border-neutral-700 bg-white dark:bg-neutral-800\">\r\n           <div className=\"flex flex-wrap sm:flex-nowrap gap-3 items-center justify-between\">\r\n-           \r\n+            {/* Avatar */}\r\n+            <div className=\"flex items-center gap-2\">\r\n               <div className=\"text-sm font-medium text-neutral-800 dark:text-neutral-200\">\r\n                 {userInfo.name} <span className=\"text-xs opacity-70\">({userInfo.age})</span>\r\n               </div>\r\n             </div>\r\n@@ -311,6 +312,7 @@\n             </div>\r\n           </div>\r\n         </div>\r\n       </div>\r\n+    </div>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1752585223714,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -266,14 +266,13 @@\n         </div>\r\n \r\n         {/* Bottom Controls */}\r\n         <div className=\"p-3 border-t border-neutral-300 dark:border-neutral-700 bg-white dark:bg-neutral-800\">\r\n-          <div className=\"flex flex-wrap sm:flex-nowrap gap-3 items-center justify-between\">\r\n+          <div className=\"flex flex-wrap md:flex-nowrap items-center gap-3\">\r\n             {/* Avatar */}\r\n-            <div className=\"flex items-center gap-2\">\r\n-              <div className=\"text-sm font-medium text-neutral-800 dark:text-neutral-200\">\r\n-                {userInfo.name} <span className=\"text-xs opacity-70\">({userInfo.age})</span>\r\n-              </div>\r\n+            <div className=\"text-sm font-medium text-neutral-800 dark:text-neutral-200 min-w-[80px]\">\r\n+              {userInfo.name}{\" \"}\r\n+              <span className=\"text-xs opacity-70\">({userInfo.age})</span>\r\n             </div>\r\n \r\n             {/* Sound Toggle */}\r\n             <button\r\n@@ -288,9 +287,8 @@\n             <select\r\n               value={genderFilter}\r\n               onChange={(e) => setGenderFilter(e.target.value)}\r\n               className=\"text-sm px-3 py-2 rounded-lg border border-neutral-300 dark:border-neutral-600 bg-white dark:bg-neutral-700 text-neutral-800 dark:text-white shadow-sm focus:outline-none\"\r\n-              aria-label=\"Gender Filter\"\r\n             >\r\n               <option value=\"\">Gender</option>\r\n               <option value=\"female\">Female</option>\r\n               <option value=\"male\">Male</option>\r\n@@ -302,15 +300,13 @@\n               type=\"text\"\r\n               placeholder=\"Country\"\r\n               value={countryFilter}\r\n               onChange={(e) => setCountryFilter(e.target.value)}\r\n-              className=\"w-[70%] text-sm px-3 py-2 rounded-lg border border-neutral-300 dark:border-neutral-600 bg-white dark:bg-neutral-700 text-neutral-800 dark:text-white shadow-sm focus:outline-none\"\r\n+              className=\"flex-1 min-w-[120px] max-w-[180px] text-sm px-3 py-2 rounded-lg border border-neutral-300 dark:border-neutral-600 bg-white dark:bg-neutral-700 text-neutral-800 dark:text-white shadow-sm focus:outline-none\"\r\n             />\r\n \r\n             {/* Control Button */}\r\n-            <div className=\"flex-1 sm:flex-initial\">\r\n-              {renderControlButton()}\r\n-            </div>\r\n+            <div className=\"ml-auto\">{renderControlButton()}</div>\r\n           </div>\r\n         </div>\r\n       </div>\r\n     </div>\r\n"
                },
                {
                    "date": 1752585307694,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -284,18 +284,19 @@\n             </button>\r\n \r\n             {/* Gender Filter */}\r\n             <select\r\n-              value={genderFilter}\r\n-              onChange={(e) => setGenderFilter(e.target.value)}\r\n-              className=\"text-sm px-3 py-2 rounded-lg border border-neutral-300 dark:border-neutral-600 bg-white dark:bg-neutral-700 text-neutral-800 dark:text-white shadow-sm focus:outline-none\"\r\n-            >\r\n-              <option value=\"\">Gender</option>\r\n-              <option value=\"female\">Female</option>\r\n-              <option value=\"male\">Male</option>\r\n-              <option value=\"other\">Other</option>\r\n-            </select>\r\n+  value={genderFilter}\r\n+  onChange={(e) => setGenderFilter(e.target.value)}\r\n+  className=\"min-w-[100px] w-[110px] text-sm px-3 py-2 rounded-lg border border-neutral-300 dark:border-neutral-600 bg-white dark:bg-neutral-700 text-neutral-800 dark:text-white shadow-sm focus:outline-none\"\r\n+>\r\n+  <option value=\"\">Gender</option>\r\n+  <option value=\"female\">Female</option>\r\n+  <option value=\"male\">Male</option>\r\n+  <option value=\"other\">Other</option>\r\n+</select>\r\n \r\n+\r\n             {/* Country Input */}\r\n             <input\r\n               type=\"text\"\r\n               placeholder=\"Country\"\r\n"
                },
                {
                    "date": 1752585334809,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -284,19 +284,18 @@\n             </button>\r\n \r\n             {/* Gender Filter */}\r\n             <select\r\n-  value={genderFilter}\r\n-  onChange={(e) => setGenderFilter(e.target.value)}\r\n-  className=\"min-w-[100px] w-[110px] text-sm px-3 py-2 rounded-lg border border-neutral-300 dark:border-neutral-600 bg-white dark:bg-neutral-700 text-neutral-800 dark:text-white shadow-sm focus:outline-none\"\r\n->\r\n-  <option value=\"\">Gender</option>\r\n-  <option value=\"female\">Female</option>\r\n-  <option value=\"male\">Male</option>\r\n-  <option value=\"other\">Other</option>\r\n-</select>\r\n+              value={genderFilter}\r\n+              onChange={(e) => setGenderFilter(e.target.value)}\r\n+              className=\"text-sm px-3 py-2 rounded-lg border border-neutral-300 dark:border-neutral-600 bg-white dark:bg-neutral-700 text-neutral-800 dark:text-white shadow-sm focus:outline-none\"\r\n+            >\r\n+              <option value=\"\">Gender</option>\r\n+              <option value=\"female\">Female</option>\r\n+              <option value=\"male\">Male</option>\r\n+              <option value=\"other\">Other</option>\r\n+            </select>\r\n \r\n-\r\n             {/* Country Input */}\r\n             <input\r\n               type=\"text\"\r\n               placeholder=\"Country\"\r\n"
                },
                {
                    "date": 1752585410038,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -283,12 +283,13 @@\n               {soundOn ? <Volume2 className=\"w-5 h-5\" /> : <VolumeX className=\"w-5 h-5\" />}\r\n             </button>\r\n \r\n             {/* Gender Filter */}\r\n-            <select\r\n+             <select\r\n               value={genderFilter}\r\n               onChange={(e) => setGenderFilter(e.target.value)}\r\n               className=\"text-sm px-3 py-2 rounded-lg border border-neutral-300 dark:border-neutral-600 bg-white dark:bg-neutral-700 text-neutral-800 dark:text-white shadow-sm focus:outline-none\"\r\n+              aria-label=\"Gender Filter\"\r\n             >\r\n               <option value=\"\">Gender</option>\r\n               <option value=\"female\">Female</option>\r\n               <option value=\"male\">Male</option>\r\n"
                },
                {
                    "date": 1752585581600,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -266,13 +266,14 @@\n         </div>\r\n \r\n         {/* Bottom Controls */}\r\n         <div className=\"p-3 border-t border-neutral-300 dark:border-neutral-700 bg-white dark:bg-neutral-800\">\r\n-          <div className=\"flex flex-wrap md:flex-nowrap items-center gap-3\">\r\n+          <div className=\"flex flex-wrap sm:flex-nowrap gap-3 items-center justify-between\">\r\n             {/* Avatar */}\r\n-            <div className=\"text-sm font-medium text-neutral-800 dark:text-neutral-200 min-w-[80px]\">\r\n-              {userInfo.name}{\" \"}\r\n-              <span className=\"text-xs opacity-70\">({userInfo.age})</span>\r\n+            <div className=\"flex items-center gap-2\">\r\n+              <div className=\"text-sm font-medium text-neutral-800 dark:text-neutral-200\">\r\n+                {userInfo.name} <span className=\"text-xs opacity-70\">({userInfo.age})</span>\r\n+              </div>\r\n             </div>\r\n \r\n             {/* Sound Toggle */}\r\n             <button\r\n@@ -283,9 +284,9 @@\n               {soundOn ? <Volume2 className=\"w-5 h-5\" /> : <VolumeX className=\"w-5 h-5\" />}\r\n             </button>\r\n \r\n             {/* Gender Filter */}\r\n-             <select\r\n+            <select\r\n               value={genderFilter}\r\n               onChange={(e) => setGenderFilter(e.target.value)}\r\n               className=\"text-sm px-3 py-2 rounded-lg border border-neutral-300 dark:border-neutral-600 bg-white dark:bg-neutral-700 text-neutral-800 dark:text-white shadow-sm focus:outline-none\"\r\n               aria-label=\"Gender Filter\"\r\n@@ -301,13 +302,15 @@\n               type=\"text\"\r\n               placeholder=\"Country\"\r\n               value={countryFilter}\r\n               onChange={(e) => setCountryFilter(e.target.value)}\r\n-              className=\"flex-1 min-w-[120px] max-w-[180px] text-sm px-3 py-2 rounded-lg border border-neutral-300 dark:border-neutral-600 bg-white dark:bg-neutral-700 text-neutral-800 dark:text-white shadow-sm focus:outline-none\"\r\n+              className=\"w-[70%] text-sm px-3 py-2 rounded-lg border border-neutral-300 dark:border-neutral-600 bg-white dark:bg-neutral-700 text-neutral-800 dark:text-white shadow-sm focus:outline-none\"\r\n             />\r\n \r\n             {/* Control Button */}\r\n-            <div className=\"ml-auto\">{renderControlButton()}</div>\r\n+            <div className=\"flex-1 sm:flex-initial\">\r\n+              {renderControlButton()}\r\n+            </div>\r\n           </div>\r\n         </div>\r\n       </div>\r\n     </div>\r\n"
                },
                {
                    "date": 1752600597651,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -221,15 +221,15 @@\n     }\r\n   };\r\n \r\n   return (\r\n-    <div className=\"flex flex-col md:flex-row h-[calc(100vh-56px)] overflow-hidden bg-neutral-100 dark:bg-neutral-900\">\r\n+    <div className=\"flex flex-col md:flex-row h-[calc(100vh-56px)] bg-neutral-100 dark:bg-neutral-900 overflow-hidden\">\r\n       {/* Sounds */}\r\n       <audio ref={matchSoundRef} src=\"/sounds/match.mp3\" preload=\"auto\" />\r\n       <audio ref={leaveSoundRef} src=\"/sounds/leave.mp3\" preload=\"auto\" />\r\n \r\n       {/* Video Section */}\r\n-      <div className=\"flex-1 relative bg-black flex items-center justify-center p-3 sm:p-4 overflow-hidden\">\r\n+      <div className=\"flex-1 relative flex items-center justify-center p-3 sm:p-4 bg-black min-h-0 overflow-hidden\">\r\n         {!sessionStarted ? (\r\n           <div className=\"text-white text-lg sm:text-xl font-semibold text-center px-4\">\r\n             Click Start to begin searching\r\n           </div>\r\n@@ -249,10 +249,10 @@\n         )}\r\n       </div>\r\n \r\n       {/* Chat + Controls */}\r\n-      <div className=\"w-full md:w-[420px] flex flex-col border-t md:border-t-0 md:border-l border-neutral-300 dark:border-neutral-700\">\r\n-        <div className=\"flex-grow overflow-y-auto\">\r\n+      <div className=\"w-full md:w-[420px] flex flex-col min-h-0 border-t md:border-t-0 md:border-l border-neutral-300 dark:border-neutral-700\">\r\n+        <div className=\"flex-grow overflow-y-auto min-h-0\">\r\n           {roomId ? (\r\n             <ChatBox\r\n               socket={socket}\r\n               roomId={roomId}\r\n"
                },
                {
                    "date": 1752603296840,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -226,10 +226,10 @@\n       {/* Sounds */}\r\n       <audio ref={matchSoundRef} src=\"/sounds/match.mp3\" preload=\"auto\" />\r\n       <audio ref={leaveSoundRef} src=\"/sounds/leave.mp3\" preload=\"auto\" />\r\n \r\n-      {/* Video Section */}\r\n-      <div className=\"flex-1 relative flex items-center justify-center p-3 sm:p-4 bg-black min-h-0 overflow-hidden\">\r\n+      {/* Video Area */}\r\n+      <div className=\"flex-1 relative flex items-center justify-center p-4 bg-black min-h-0 overflow-hidden\">\r\n         {!sessionStarted ? (\r\n           <div className=\"text-white text-lg sm:text-xl font-semibold text-center px-4\">\r\n             Click Start to begin searching\r\n           </div>\r\n@@ -237,20 +237,20 @@\n           <FindingPartner />\r\n         ) : (\r\n           <>\r\n             <RemoteVideo stream={remoteStream} />\r\n-            <div className=\"absolute top-4 right-4 w-32 h-32 sm:w-40 sm:h-40 rounded overflow-hidden border-2 border-white shadow-lg z-20\">\r\n+            <div className=\"absolute top-4 right-4 w-28 h-28 sm:w-36 sm:h-36 md:w-40 md:h-40 rounded overflow-hidden border-2 border-white shadow-lg z-20\">\r\n               {localStream ? (\r\n                 <LocalVideo stream={localStream} />\r\n               ) : (\r\n-                <div className=\"text-white text-sm p-2\">Loading camera...</div>\r\n+                <div className=\"text-white text-xs p-2\">Loading camera...</div>\r\n               )}\r\n             </div>\r\n           </>\r\n         )}\r\n       </div>\r\n \r\n-      {/* Chat + Controls */}\r\n+      {/* Chat Panel */}\r\n       <div className=\"w-full md:w-[420px] flex flex-col min-h-0 border-t md:border-t-0 md:border-l border-neutral-300 dark:border-neutral-700\">\r\n         <div className=\"flex-grow overflow-y-auto min-h-0\">\r\n           {roomId ? (\r\n             <ChatBox\r\n@@ -266,14 +266,12 @@\n         </div>\r\n \r\n         {/* Bottom Controls */}\r\n         <div className=\"p-3 border-t border-neutral-300 dark:border-neutral-700 bg-white dark:bg-neutral-800\">\r\n-          <div className=\"flex flex-wrap sm:flex-nowrap gap-3 items-center justify-between\">\r\n-            {/* Avatar */}\r\n-            <div className=\"flex items-center gap-2\">\r\n-              <div className=\"text-sm font-medium text-neutral-800 dark:text-neutral-200\">\r\n-                {userInfo.name} <span className=\"text-xs opacity-70\">({userInfo.age})</span>\r\n-              </div>\r\n+          <div className=\"flex flex-col sm:flex-row gap-2 items-center justify-between flex-wrap sm:flex-nowrap\">\r\n+            {/* Avatar Info */}\r\n+            <div className=\"text-sm font-medium text-neutral-800 dark:text-neutral-200\">\r\n+              {userInfo.name} <span className=\"text-xs opacity-70\">({userInfo.age})</span>\r\n             </div>\r\n \r\n             {/* Sound Toggle */}\r\n             <button\r\n@@ -283,34 +281,32 @@\n             >\r\n               {soundOn ? <Volume2 className=\"w-5 h-5\" /> : <VolumeX className=\"w-5 h-5\" />}\r\n             </button>\r\n \r\n-            {/* Gender Filter */}\r\n-            <select\r\n-              value={genderFilter}\r\n-              onChange={(e) => setGenderFilter(e.target.value)}\r\n-              className=\"text-sm px-3 py-2 rounded-lg border border-neutral-300 dark:border-neutral-600 bg-white dark:bg-neutral-700 text-neutral-800 dark:text-white shadow-sm focus:outline-none\"\r\n-              aria-label=\"Gender Filter\"\r\n-            >\r\n-              <option value=\"\">Gender</option>\r\n-              <option value=\"female\">Female</option>\r\n-              <option value=\"male\">Male</option>\r\n-              <option value=\"other\">Other</option>\r\n-            </select>\r\n+            {/* Filters */}\r\n+            <div className=\"flex gap-2 w-full sm:w-auto\">\r\n+              <select\r\n+                value={genderFilter}\r\n+                onChange={(e) => setGenderFilter(e.target.value)}\r\n+                className=\"text-sm px-3 py-2 rounded-lg border border-neutral-300 dark:border-neutral-600 bg-white dark:bg-neutral-700 text-neutral-800 dark:text-white shadow-sm w-full sm:w-auto\"\r\n+              >\r\n+                <option value=\"\">Gender</option>\r\n+                <option value=\"female\">Female</option>\r\n+                <option value=\"male\">Male</option>\r\n+                <option value=\"other\">Other</option>\r\n+              </select>\r\n \r\n-            {/* Country Input */}\r\n-            <input\r\n-              type=\"text\"\r\n-              placeholder=\"Country\"\r\n-              value={countryFilter}\r\n-              onChange={(e) => setCountryFilter(e.target.value)}\r\n-              className=\"w-[70%] text-sm px-3 py-2 rounded-lg border border-neutral-300 dark:border-neutral-600 bg-white dark:bg-neutral-700 text-neutral-800 dark:text-white shadow-sm focus:outline-none\"\r\n-            />\r\n+              <input\r\n+                type=\"text\"\r\n+                placeholder=\"Country\"\r\n+                value={countryFilter}\r\n+                onChange={(e) => setCountryFilter(e.target.value)}\r\n+                className=\"text-sm px-3 py-2 rounded-lg border border-neutral-300 dark:border-neutral-600 bg-white dark:bg-neutral-700 text-neutral-800 dark:text-white shadow-sm w-full sm:w-auto\"\r\n+              />\r\n+            </div>\r\n \r\n-            {/* Control Button */}\r\n-            <div className=\"flex-1 sm:flex-initial\">\r\n-              {renderControlButton()}\r\n-            </div>\r\n+            {/* Start/Stop/Skip Button */}\r\n+            <div className=\"w-full sm:w-auto\">{renderControlButton()}</div>\r\n           </div>\r\n         </div>\r\n       </div>\r\n     </div>\r\n"
                },
                {
                    "date": 1752603364702,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -284,18 +284,18 @@\n \r\n             {/* Filters */}\r\n             <div className=\"flex gap-2 w-full sm:w-auto\">\r\n               <select\r\n-                value={genderFilter}\r\n-                onChange={(e) => setGenderFilter(e.target.value)}\r\n-                className=\"text-sm px-3 py-2 rounded-lg border border-neutral-300 dark:border-neutral-600 bg-white dark:bg-neutral-700 text-neutral-800 dark:text-white shadow-sm w-full sm:w-auto\"\r\n-              >\r\n-                <option value=\"\">Gender</option>\r\n-                <option value=\"female\">Female</option>\r\n-                <option value=\"male\">Male</option>\r\n-                <option value=\"other\">Other</option>\r\n-              </select>\r\n-\r\n+              value={genderFilter}\r\n+              onChange={(e) => setGenderFilter(e.target.value)}\r\n+              className=\"text-sm px-3 py-2 rounded-lg border border-neutral-300 dark:border-neutral-600 bg-white dark:bg-neutral-700 text-neutral-800 dark:text-white shadow-sm focus:outline-none\"\r\n+              aria-label=\"Gender Filter\"\r\n+            >\r\n+              <option value=\"\">Gender</option>\r\n+              <option value=\"female\">Female</option>\r\n+              <option value=\"male\">Male</option>\r\n+              <option value=\"other\">Other</option>\r\n+            </select>\r\n               <input\r\n                 type=\"text\"\r\n                 placeholder=\"Country\"\r\n                 value={countryFilter}\r\n"
                },
                {
                    "date": 1752664288309,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -226,10 +226,10 @@\n       {/* Sounds */}\r\n       <audio ref={matchSoundRef} src=\"/sounds/match.mp3\" preload=\"auto\" />\r\n       <audio ref={leaveSoundRef} src=\"/sounds/leave.mp3\" preload=\"auto\" />\r\n \r\n-      {/* Video Area */}\r\n-      <div className=\"flex-1 relative flex items-center justify-center p-4 bg-black min-h-0 overflow-hidden\">\r\n+      {/* Video Section */}\r\n+      <div className=\"flex-1 relative flex items-center justify-center p-3 sm:p-4 bg-black min-h-0 overflow-hidden\">\r\n         {!sessionStarted ? (\r\n           <div className=\"text-white text-lg sm:text-xl font-semibold text-center px-4\">\r\n             Click Start to begin searching\r\n           </div>\r\n@@ -237,20 +237,20 @@\n           <FindingPartner />\r\n         ) : (\r\n           <>\r\n             <RemoteVideo stream={remoteStream} />\r\n-            <div className=\"absolute top-4 right-4 w-28 h-28 sm:w-36 sm:h-36 md:w-40 md:h-40 rounded overflow-hidden border-2 border-white shadow-lg z-20\">\r\n+            <div className=\"absolute top-4 right-4 w-32 h-32 sm:w-40 sm:h-40 rounded overflow-hidden border-2 border-white shadow-lg z-20\">\r\n               {localStream ? (\r\n                 <LocalVideo stream={localStream} />\r\n               ) : (\r\n-                <div className=\"text-white text-xs p-2\">Loading camera...</div>\r\n+                <div className=\"text-white text-sm p-2\">Loading camera...</div>\r\n               )}\r\n             </div>\r\n           </>\r\n         )}\r\n       </div>\r\n \r\n-      {/* Chat Panel */}\r\n+      {/* Chat + Controls */}\r\n       <div className=\"w-full md:w-[420px] flex flex-col min-h-0 border-t md:border-t-0 md:border-l border-neutral-300 dark:border-neutral-700\">\r\n         <div className=\"flex-grow overflow-y-auto min-h-0\">\r\n           {roomId ? (\r\n             <ChatBox\r\n@@ -266,12 +266,14 @@\n         </div>\r\n \r\n         {/* Bottom Controls */}\r\n         <div className=\"p-3 border-t border-neutral-300 dark:border-neutral-700 bg-white dark:bg-neutral-800\">\r\n-          <div className=\"flex flex-col sm:flex-row gap-2 items-center justify-between flex-wrap sm:flex-nowrap\">\r\n-            {/* Avatar Info */}\r\n-            <div className=\"text-sm font-medium text-neutral-800 dark:text-neutral-200\">\r\n-              {userInfo.name} <span className=\"text-xs opacity-70\">({userInfo.age})</span>\r\n+          <div className=\"flex flex-wrap sm:flex-nowrap gap-3 items-center justify-between\">\r\n+            {/* Avatar */}\r\n+            <div className=\"flex items-center gap-2\">\r\n+              <div className=\"text-sm font-medium text-neutral-800 dark:text-neutral-200\">\r\n+                {userInfo.name} <span className=\"text-xs opacity-70\">({userInfo.age})</span>\r\n+              </div>\r\n             </div>\r\n \r\n             {/* Sound Toggle */}\r\n             <button\r\n@@ -281,11 +283,10 @@\n             >\r\n               {soundOn ? <Volume2 className=\"w-5 h-5\" /> : <VolumeX className=\"w-5 h-5\" />}\r\n             </button>\r\n \r\n-            {/* Filters */}\r\n-            <div className=\"flex gap-2 w-full sm:w-auto\">\r\n-              <select\r\n+            {/* Gender Filter */}\r\n+            <select\r\n               value={genderFilter}\r\n               onChange={(e) => setGenderFilter(e.target.value)}\r\n               className=\"text-sm px-3 py-2 rounded-lg border border-neutral-300 dark:border-neutral-600 bg-white dark:bg-neutral-700 text-neutral-800 dark:text-white shadow-sm focus:outline-none\"\r\n               aria-label=\"Gender Filter\"\r\n@@ -294,19 +295,22 @@\n               <option value=\"female\">Female</option>\r\n               <option value=\"male\">Male</option>\r\n               <option value=\"other\">Other</option>\r\n             </select>\r\n-              <input\r\n-                type=\"text\"\r\n-                placeholder=\"Country\"\r\n-                value={countryFilter}\r\n-                onChange={(e) => setCountryFilter(e.target.value)}\r\n-                className=\"text-sm px-3 py-2 rounded-lg border border-neutral-300 dark:border-neutral-600 bg-white dark:bg-neutral-700 text-neutral-800 dark:text-white shadow-sm w-full sm:w-auto\"\r\n-              />\r\n+\r\n+            {/* Country Input */}\r\n+            <input\r\n+              type=\"text\"\r\n+              placeholder=\"Country\"\r\n+              value={countryFilter}\r\n+              onChange={(e) => setCountryFilter(e.target.value)}\r\n+              className=\"w-[70%] text-sm px-3 py-2 rounded-lg border border-neutral-300 dark:border-neutral-600 bg-white dark:bg-neutral-700 text-neutral-800 dark:text-white shadow-sm focus:outline-none\"\r\n+            />\r\n+\r\n+            {/* Control Button */}\r\n+            <div className=\"flex-1 sm:flex-initial\">\r\n+              {renderControlButton()}\r\n             </div>\r\n-\r\n-            {/* Start/Stop/Skip Button */}\r\n-            <div className=\"w-full sm:w-auto\">{renderControlButton()}</div>\r\n           </div>\r\n         </div>\r\n       </div>\r\n     </div>\r\n"
                },
                {
                    "date": 1752665044880,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,24 +1,24 @@\n \"use client\";\r\n \r\n-import React, { useEffect, useState, useCallback, useRef } from \"react\";\r\n+import React, { useEffect, useState } from \"react\";\r\n import useWebRTC from \"../hooks/useWebRTC\";\r\n import useSocket from \"../hooks/useSocket\";\r\n import LocalVideo from \"../../../components/video/LocalVideo\";\r\n import RemoteVideo from \"../../../components/video/RemoteVideo\";\r\n import ChatBox from \"../../../components/chat/ChatBox\";\r\n-import Image from \"next/image\";\r\n import FindingPartner from \"./FindingPartner\";\r\n import {\r\n   Users,\r\n   RefreshCcw,\r\n   CircleStop,\r\n-  Volume2,\r\n-  VolumeX,\r\n-  Smile,\r\n-  UserX,\r\n } from \"lucide-react\";\r\n \r\n+import { useSoundPlayer } from \"../hooks/useSoundPlayer\";\r\n+import { useChatHandlers } from \"../hooks/useChatHandlers\";\r\n+import IdleMessage from \"./IdleMessage\";\r\n+import ControlBar from \"./ControlBar\";\r\n+\r\n export default function AnonymousChatRoom() {\r\n   const [roomId, setRoomId] = useState<string | null>(null);\r\n   const [isOfferer, setIsOfferer] = useState<boolean | null>(null);\r\n   const [loading, setLoading] = useState(false);\r\n@@ -26,98 +26,37 @@\n   const [lastAction, setLastAction] = useState<\"skipped\" | \"left\" | null>(null);\r\n   const [soundOn, setSoundOn] = useState(true);\r\n \r\n   const [userInfo, setUserInfo] = useState<any>({});\r\n-  const avatarUrl = userInfo?.avatar || \"/default-avatar.png\";\r\n   const [partnerInfo, setPartnerInfo] = useState<any>(null);\r\n   const [genderFilter, setGenderFilter] = useState(\"\");\r\n   const [countryFilter, setCountryFilter] = useState(\"\");\r\n \r\n   const socket = useSocket();\r\n   const { localStream, remoteStream } = useWebRTC(roomId, isOfferer, sessionStarted);\r\n \r\n-  const matchSoundRef = useRef<HTMLAudioElement>(null);\r\n-  const leaveSoundRef = useRef<HTMLAudioElement>(null);\r\n+  const { matchSoundRef, leaveSoundRef, playSound } = useSoundPlayer(soundOn);\r\n \r\n+  useChatHandlers({\r\n+    socket,\r\n+    playSound,\r\n+    setRoomId,\r\n+    setIsOfferer,\r\n+    setPartnerInfo,\r\n+    setLoading,\r\n+    setSessionStarted,\r\n+    setLastAction,\r\n+  });\r\n+\r\n   useEffect(() => {\r\n     const stored = localStorage.getItem(\"user-info\");\r\n     if (stored) {\r\n       setUserInfo(JSON.parse(stored));\r\n     }\r\n   }, []);\r\n \r\n-  const playSound = (type: \"match\" | \"leave\") => {\r\n-    if (!soundOn) return;\r\n-    const audioRef = type === \"match\" ? matchSoundRef : leaveSoundRef;\r\n-    const play = async () => {\r\n-      try {\r\n-        const audio = audioRef.current;\r\n-        if (!audio) return;\r\n-        audio.volume = 0.8;\r\n-        await audio.play();\r\n-      } catch (err) {\r\n-        const ctx = new AudioContext();\r\n-        await ctx.resume();\r\n-      }\r\n-    };\r\n-    play();\r\n-  };\r\n-\r\n-  const handleMatched = useCallback(\r\n-    ({ roomId, isOfferer, partnerInfo }: { roomId: string; partnerId: string; isOfferer: boolean; partnerInfo: any }) => {\r\n-      setRoomId(roomId);\r\n-      setIsOfferer(isOfferer);\r\n-      setPartnerInfo(partnerInfo);\r\n-      setLoading(false);\r\n-      setLastAction(null);\r\n-      playSound(\"match\");\r\n-    },\r\n-    [soundOn]\r\n-  );\r\n-\r\n-  const handlePartnerLeft = useCallback(() => {\r\n-    setRoomId(null);\r\n-    setIsOfferer(null);\r\n-    setSessionStarted(false);\r\n-    setLoading(false);\r\n-    setLastAction(\"left\");\r\n-    playSound(\"leave\");\r\n-  }, [soundOn]);\r\n-\r\n   useEffect(() => {\r\n-    if (!socket) return;\r\n-    socket.off(\"matched\", handleMatched);\r\n-    socket.on(\"matched\", handleMatched);\r\n-    socket.on(\"partner-left\", handlePartnerLeft);\r\n     return () => {\r\n-      socket.off(\"matched\", handleMatched);\r\n-      socket.off(\"partner-left\", handlePartnerLeft);\r\n-    };\r\n-  }, [socket, handleMatched, handlePartnerLeft]);\r\n-\r\n-  useEffect(() => {\r\n-    if (!socket) return;\r\n-\r\n-    const handleDisconnect = () => {\r\n-      setLoading(false);\r\n-      setSessionStarted(false);\r\n-    };\r\n-\r\n-    const handleConnect = () => {\r\n-      console.log(\"Connected to socket:\", socket.id);\r\n-    };\r\n-\r\n-    socket.on(\"disconnect\", handleDisconnect);\r\n-    socket.on(\"connect\", handleConnect);\r\n-\r\n-    return () => {\r\n-      socket.off(\"disconnect\", handleDisconnect);\r\n-      socket.off(\"connect\", handleConnect);\r\n-    };\r\n-  }, [socket]);\r\n-\r\n-  useEffect(() => {\r\n-    return () => {\r\n       if (socket && roomId) {\r\n         socket.emit(\"leave-room\", roomId);\r\n       }\r\n     };\r\n@@ -189,39 +128,8 @@\n       );\r\n     }\r\n   };\r\n \r\n-  const renderIdleMessage = () => {\r\n-    if (roomId) return null;\r\n-    const baseStyle =\r\n-      \"flex flex-col items-center justify-center h-full text-center text-neutral-500 dark:text-neutral-400 p-4 text-sm gap-2\";\r\n-\r\n-    if (lastAction === \"skipped\") {\r\n-      return (\r\n-        <div className={baseStyle}>\r\n-          <Smile className=\"w-8 h-8 text-yellow-400\" />\r\n-          <p>You skipped the chat.</p>\r\n-          <p>Click <b>Start</b> to connect with someone new!</p>\r\n-        </div>\r\n-      );\r\n-    } else if (lastAction === \"left\") {\r\n-      return (\r\n-        <div className={baseStyle}>\r\n-          <UserX className=\"w-8 h-8 text-red-400\" />\r\n-          <p>Your partner left the chat.</p>\r\n-          <p>Click <b>Start</b> to begin again.</p>\r\n-        </div>\r\n-      );\r\n-    } else {\r\n-      return (\r\n-        <div className={baseStyle}>\r\n-          <Users className=\"w-8 h-8 text-neutral-400\" />\r\n-          <p>Click <b>Start</b> to begin searching for a partner.</p>\r\n-        </div>\r\n-      );\r\n-    }\r\n-  };\r\n-\r\n   return (\r\n     <div className=\"flex flex-col md:flex-row h-[calc(100vh-56px)] bg-neutral-100 dark:bg-neutral-900 overflow-hidden\">\r\n       {/* Sounds */}\r\n       <audio ref={matchSoundRef} src=\"/sounds/match.mp3\" preload=\"auto\" />\r\n@@ -260,59 +168,23 @@\n               partnerName={partnerInfo?.name}\r\n               partnerAge={partnerInfo?.age}\r\n             />\r\n           ) : (\r\n-            renderIdleMessage()\r\n+            <IdleMessage lastAction={lastAction} />\r\n           )}\r\n         </div>\r\n \r\n         {/* Bottom Controls */}\r\n-        <div className=\"p-3 border-t border-neutral-300 dark:border-neutral-700 bg-white dark:bg-neutral-800\">\r\n-          <div className=\"flex flex-wrap sm:flex-nowrap gap-3 items-center justify-between\">\r\n-            {/* Avatar */}\r\n-            <div className=\"flex items-center gap-2\">\r\n-              <div className=\"text-sm font-medium text-neutral-800 dark:text-neutral-200\">\r\n-                {userInfo.name} <span className=\"text-xs opacity-70\">({userInfo.age})</span>\r\n-              </div>\r\n-            </div>\r\n-\r\n-            {/* Sound Toggle */}\r\n-            <button\r\n-              onClick={() => setSoundOn((prev) => !prev)}\r\n-              className=\"text-neutral-700 dark:text-neutral-300 hover:text-blue-600 dark:hover:text-blue-400 transition\"\r\n-              title={soundOn ? \"Mute Sounds\" : \"Unmute Sounds\"}\r\n-            >\r\n-              {soundOn ? <Volume2 className=\"w-5 h-5\" /> : <VolumeX className=\"w-5 h-5\" />}\r\n-            </button>\r\n-\r\n-            {/* Gender Filter */}\r\n-            <select\r\n-              value={genderFilter}\r\n-              onChange={(e) => setGenderFilter(e.target.value)}\r\n-              className=\"text-sm px-3 py-2 rounded-lg border border-neutral-300 dark:border-neutral-600 bg-white dark:bg-neutral-700 text-neutral-800 dark:text-white shadow-sm focus:outline-none\"\r\n-              aria-label=\"Gender Filter\"\r\n-            >\r\n-              <option value=\"\">Gender</option>\r\n-              <option value=\"female\">Female</option>\r\n-              <option value=\"male\">Male</option>\r\n-              <option value=\"other\">Other</option>\r\n-            </select>\r\n-\r\n-            {/* Country Input */}\r\n-            <input\r\n-              type=\"text\"\r\n-              placeholder=\"Country\"\r\n-              value={countryFilter}\r\n-              onChange={(e) => setCountryFilter(e.target.value)}\r\n-              className=\"w-[70%] text-sm px-3 py-2 rounded-lg border border-neutral-300 dark:border-neutral-600 bg-white dark:bg-neutral-700 text-neutral-800 dark:text-white shadow-sm focus:outline-none\"\r\n-            />\r\n-\r\n-            {/* Control Button */}\r\n-            <div className=\"flex-1 sm:flex-initial\">\r\n-              {renderControlButton()}\r\n-            </div>\r\n-          </div>\r\n-        </div>\r\n+        <ControlBar\r\n+          userInfo={userInfo}\r\n+          soundOn={soundOn}\r\n+          setSoundOn={setSoundOn}\r\n+          genderFilter={genderFilter}\r\n+          setGenderFilter={setGenderFilter}\r\n+          countryFilter={countryFilter}\r\n+          setCountryFilter={setCountryFilter}\r\n+          renderControlButton={renderControlButton}\r\n+        />\r\n       </div>\r\n     </div>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1752665609612,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -129,15 +129,18 @@\n     }\r\n   };\r\n \r\n   return (\r\n-    <div className=\"flex flex-col md:flex-row h-[calc(100vh-56px)] bg-neutral-100 dark:bg-neutral-900 overflow-hidden\">\r\n+    <div className=\"flex flex-col md:flex-row h-[100dvh] bg-neutral-100 dark:bg-neutral-900 overflow-hidden\">\r\n       {/* Sounds */}\r\n       <audio ref={matchSoundRef} src=\"/sounds/match.mp3\" preload=\"auto\" />\r\n       <audio ref={leaveSoundRef} src=\"/sounds/leave.mp3\" preload=\"auto\" />\r\n \r\n       {/* Video Section */}\r\n-      <div className=\"flex-1 relative flex items-center justify-center p-3 sm:p-4 bg-black min-h-0 overflow-hidden\">\r\n+      <div\r\n+        className=\"relative flex items-center justify-center p-3 sm:p-4 bg-black overflow-hidden w-full md:flex-1\"\r\n+        style={{ height: \"55vh\" }}\r\n+      >\r\n         {!sessionStarted ? (\r\n           <div className=\"text-white text-lg sm:text-xl font-semibold text-center px-4\">\r\n             Click Start to begin searching\r\n           </div>\r\n@@ -157,9 +160,9 @@\n         )}\r\n       </div>\r\n \r\n       {/* Chat + Controls */}\r\n-      <div className=\"w-full md:w-[420px] flex flex-col min-h-0 border-t md:border-t-0 md:border-l border-neutral-300 dark:border-neutral-700\">\r\n+      <div className=\"w-full md:w-[420px] flex flex-col flex-1 min-h-0 border-t md:border-t-0 md:border-l border-neutral-300 dark:border-neutral-700\">\r\n         <div className=\"flex-grow overflow-y-auto min-h-0\">\r\n           {roomId ? (\r\n             <ChatBox\r\n               socket={socket}\r\n"
                },
                {
                    "date": 1752666262208,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -129,18 +129,15 @@\n     }\r\n   };\r\n \r\n   return (\r\n-    <div className=\"flex flex-col md:flex-row h-[100dvh] bg-neutral-100 dark:bg-neutral-900 overflow-hidden\">\r\n+    <div className=\"flex flex-col md:flex-row h-[calc(100vh-56px)] bg-neutral-100 dark:bg-neutral-900 overflow-hidden\">\r\n       {/* Sounds */}\r\n       <audio ref={matchSoundRef} src=\"/sounds/match.mp3\" preload=\"auto\" />\r\n       <audio ref={leaveSoundRef} src=\"/sounds/leave.mp3\" preload=\"auto\" />\r\n \r\n       {/* Video Section */}\r\n-      <div\r\n-        className=\"relative flex items-center justify-center p-3 sm:p-4 bg-black overflow-hidden w-full md:flex-1\"\r\n-        style={{ height: \"55vh\" }}\r\n-      >\r\n+      <div className=\"flex-1 relative flex items-center justify-center p-3 sm:p-4 bg-black min-h-0 overflow-hidden\">\r\n         {!sessionStarted ? (\r\n           <div className=\"text-white text-lg sm:text-xl font-semibold text-center px-4\">\r\n             Click Start to begin searching\r\n           </div>\r\n@@ -160,9 +157,9 @@\n         )}\r\n       </div>\r\n \r\n       {/* Chat + Controls */}\r\n-      <div className=\"w-full md:w-[420px] flex flex-col flex-1 min-h-0 border-t md:border-t-0 md:border-l border-neutral-300 dark:border-neutral-700\">\r\n+      <div className=\"w-full md:w-[420px] flex flex-col min-h-0 border-t md:border-t-0 md:border-l border-neutral-300 dark:border-neutral-700\">\r\n         <div className=\"flex-grow overflow-y-auto min-h-0\">\r\n           {roomId ? (\r\n             <ChatBox\r\n               socket={socket}\r\n"
                },
                {
                    "date": 1752666598258,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,14 +6,9 @@\n import LocalVideo from \"../../../components/video/LocalVideo\";\r\n import RemoteVideo from \"../../../components/video/RemoteVideo\";\r\n import ChatBox from \"../../../components/chat/ChatBox\";\r\n import FindingPartner from \"./FindingPartner\";\r\n-import {\r\n-  Users,\r\n-  RefreshCcw,\r\n-  CircleStop,\r\n-} from \"lucide-react\";\r\n-\r\n+import { Users, RefreshCcw, CircleStop } from \"lucide-react\";\r\n import { useSoundPlayer } from \"../hooks/useSoundPlayer\";\r\n import { useChatHandlers } from \"../hooks/useChatHandlers\";\r\n import IdleMessage from \"./IdleMessage\";\r\n import ControlBar from \"./ControlBar\";\r\n@@ -32,9 +27,8 @@\n   const [countryFilter, setCountryFilter] = useState(\"\");\r\n \r\n   const socket = useSocket();\r\n   const { localStream, remoteStream } = useWebRTC(roomId, isOfferer, sessionStarted);\r\n-\r\n   const { matchSoundRef, leaveSoundRef, playSound } = useSoundPlayer(soundOn);\r\n \r\n   useChatHandlers({\r\n     socket,\r\n@@ -158,9 +152,15 @@\n       </div>\r\n \r\n       {/* Chat + Controls */}\r\n       <div className=\"w-full md:w-[420px] flex flex-col min-h-0 border-t md:border-t-0 md:border-l border-neutral-300 dark:border-neutral-700\">\r\n-        <div className=\"flex-grow overflow-y-auto min-h-0\">\r\n+        <div\r\n+          className={`\r\n+            flex-grow overflow-y-auto min-h-0\r\n+            sm:max-h-none\r\n+            max-h-[45vh] sm:max-h-full\r\n+          `}\r\n+        >\r\n           {roomId ? (\r\n             <ChatBox\r\n               socket={socket}\r\n               roomId={roomId}\r\n"
                },
                {
                    "date": 1752666639419,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -153,14 +153,14 @@\n \r\n       {/* Chat + Controls */}\r\n       <div className=\"w-full md:w-[420px] flex flex-col min-h-0 border-t md:border-t-0 md:border-l border-neutral-300 dark:border-neutral-700\">\r\n         <div\r\n-          className={`\r\n-            flex-grow overflow-y-auto min-h-0\r\n-            sm:max-h-none\r\n-            max-h-[45vh] sm:max-h-full\r\n-          `}\r\n-        >\r\n+  className={`\r\n+    flex-grow overflow-y-auto min-h-0\r\n+    max-h-[45vh] sm:max-h-full\r\n+  `}\r\n+>\r\n+\r\n           {roomId ? (\r\n             <ChatBox\r\n               socket={socket}\r\n               roomId={roomId}\r\n"
                },
                {
                    "date": 1752666904863,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,214 @@\n+\"use client\";\r\n+\r\n+import React, { useEffect, useState } from \"react\";\r\n+import useWebRTC from \"../hooks/useWebRTC\";\r\n+import useSocket from \"../hooks/useSocket\";\r\n+import LocalVideo from \"../../../components/video/LocalVideo\";\r\n+import RemoteVideo from \"../../../components/video/RemoteVideo\";\r\n+import ChatBox from \"../../../components/chat/ChatBox\";\r\n+import FindingPartner from \"./FindingPartner\";\r\n+import { Users, RefreshCcw, CircleStop } from \"lucide-react\";\r\n+import { useSoundPlayer } from \"../hooks/useSoundPlayer\";\r\n+import { useChatHandlers } from \"../hooks/useChatHandlers\";\r\n+import IdleMessage from \"./IdleMessage\";\r\n+import ControlBar from \"./ControlBar\";\r\n+\r\n+export default function AnonymousChatRoom() {\r\n+  const [roomId, setRoomId] = useState<string | null>(null);\r\n+  const [isOfferer, setIsOfferer] = useState<boolean | null>(null);\r\n+  const [loading, setLoading] = useState(false);\r\n+  const [sessionStarted, setSessionStarted] = useState(false);\r\n+  const [lastAction, setLastAction] = useState<\"skipped\" | \"left\" | null>(null);\r\n+  const [soundOn, setSoundOn] = useState(true);\r\n+\r\n+  const [userInfo, setUserInfo] = useState<any>({});\r\n+  const [partnerInfo, setPartnerInfo] = useState<any>(null);\r\n+  const [genderFilter, setGenderFilter] = useState(\"\");\r\n+  const [countryFilter, setCountryFilter] = useState(\"\");\r\n+\r\n+  const socket = useSocket();\r\n+  const { localStream, remoteStream } = useWebRTC(roomId, isOfferer, sessionStarted);\r\n+  const { matchSoundRef, leaveSoundRef, playSound } = useSoundPlayer(soundOn);\r\n+\r\n+  useChatHandlers({\r\n+    socket,\r\n+    playSound,\r\n+    setRoomId,\r\n+    setIsOfferer,\r\n+    setPartnerInfo,\r\n+    setLoading,\r\n+    setSessionStarted,\r\n+    setLastAction,\r\n+  });\r\n+\r\n+  useEffect(() => {\r\n+    const stored = localStorage.getItem(\"user-info\");\r\n+    if (stored) {\r\n+      setUserInfo(JSON.parse(stored));\r\n+    }\r\n+  }, []);\r\n+\r\n+  useEffect(() => {\r\n+    return () => {\r\n+      if (socket && roomId) {\r\n+        socket.emit(\"leave-room\", roomId);\r\n+      }\r\n+    };\r\n+  }, [socket, roomId]);\r\n+\r\n+  const handleStart = () => {\r\n+    if (!sessionStarted) {\r\n+      setLoading(true);\r\n+      setSessionStarted(true);\r\n+      socket?.emit(\"start-looking\", {\r\n+        name: userInfo.name,\r\n+        age: userInfo.age,\r\n+        gender: userInfo.gender,\r\n+        country: userInfo.country,\r\n+        filterGender: genderFilter,\r\n+        filterCountry: countryFilter,\r\n+      });\r\n+    }\r\n+  };\r\n+\r\n+  const handleStop = () => {\r\n+    if (roomId) {\r\n+      socket?.emit(\"leave-room\", roomId);\r\n+    }\r\n+    setRoomId(null);\r\n+    setIsOfferer(null);\r\n+    setSessionStarted(false);\r\n+    setLoading(false);\r\n+  };\r\n+\r\n+  const handleSkip = () => {\r\n+    handleStop();\r\n+    handleStart();\r\n+    setLastAction(\"skipped\");\r\n+  };\r\n+\r\n+  const renderControlButton = () => {\r\n+    const baseClasses =\r\n+      \"flex items-center gap-2 px-4 py-2 rounded-lg shadow font-medium transition whitespace-nowrap\";\r\n+    if (!sessionStarted) {\r\n+      return (\r\n+        <button\r\n+          onClick={handleStart}\r\n+          className={`${baseClasses} bg-green-600 hover:bg-green-700 text-white`}\r\n+        >\r\n+          <Users className=\"w-5 h-5\" />\r\n+          Start\r\n+        </button>\r\n+      );\r\n+    } else if (loading) {\r\n+      return (\r\n+        <button\r\n+          onClick={handleStop}\r\n+          className={`${baseClasses} bg-red-600 hover:bg-red-700 text-white`}\r\n+        >\r\n+          <CircleStop className=\"w-5 h-5\" />\r\n+          Stop\r\n+        </button>\r\n+      );\r\n+    } else {\r\n+      return (\r\n+        <button\r\n+          onClick={handleSkip}\r\n+          className={`${baseClasses} bg-yellow-500 hover:bg-yellow-600 text-white`}\r\n+        >\r\n+          <RefreshCcw className=\"w-5 h-5\" />\r\n+          Skip\r\n+        </button>\r\n+      );\r\n+    }\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"flex flex-col md:flex-row h-[calc(100vh-56px)] bg-neutral-100 dark:bg-neutral-900 overflow-hidden\">\r\n+      {/* Sounds */}\r\n+      <audio ref={matchSoundRef} src=\"/sounds/match.mp3\" preload=\"auto\" />\r\n+      <audio ref={leaveSoundRef} src=\"/sounds/leave.mp3\" preload=\"auto\" />\r\n+\r\n+      {/* Video Section */}\r\n+      <div className=\"flex-1 relative flex items-center justify-center p-3 sm:p-4 bg-black min-h-0 overflow-hidden\">\r\n+        {!sessionStarted ? (\r\n+          <div className=\"text-white text-lg sm:text-xl font-semibold text-center px-4\">\r\n+            Click Start to begin searching\r\n+          </div>\r\n+        ) : loading ? (\r\n+          <FindingPartner />\r\n+        ) : (\r\n+          <>\r\n+            <RemoteVideo stream={remoteStream} />\r\n+            <div className=\"absolute top-4 right-4 w-32 h-32 sm:w-40 sm:h-40 rounded overflow-hidden border-2 border-white shadow-lg z-20\">\r\n+              {localStream ? (\r\n+                <LocalVideo stream={localStream} />\r\n+              ) : (\r\n+                <div className=\"text-white text-sm p-2\">Loading camera...</div>\r\n+              )}\r\n+            </div>\r\n+          </>\r\n+        )}\r\n+      </div>\r\n+\r\n+      {/* Chat + Controls */}\r\n+      <div className=\"w-full md:w-[420px] flex flex-col min-h-0 border-t md:border-t-0 md:border-l border-neutral-300 dark:border-neutral-700\">\r\n+        <div\r\n+          className={`\r\n+            flex-grow overflow-y-auto min-h-0\r\n+            max-h-[45vh] sm:max-h-full\r\n+          `}\r\n+        >\r\n+          {roomId ? (\r\n+            <ChatBox\r\n+              socket={socket}\r\n+              roomId={roomId}\r\n+              soundOn={soundOn}\r\n+              partnerName={partnerInfo?.name}\r\n+              partnerAge={partnerInfo?.age}\r\n+            />\r\n+          ) : (\r\n+            <IdleMessage lastAction={lastAction} />\r\n+          )}\r\n+        </div>\r\n+\r\n+        {/* Bottom Controls */}\r\n+        <div className=\"p-3 border-t border-neutral-300 dark:border-neutral-700 bg-white dark:bg-neutral-800\">\r\n+          <div className=\"flex flex-col sm:flex-row justify-between items-center gap-3 sm:gap-2\">\r\n+            <div className=\"flex flex-wrap justify-center sm:justify-start items-center gap-2 w-full sm:w-auto\">\r\n+              <select\r\n+                value={genderFilter}\r\n+                onChange={(e) => setGenderFilter(e.target.value)}\r\n+                className=\"text-sm px-3 py-2 rounded-lg border border-neutral-300 dark:border-neutral-600 bg-white dark:bg-neutral-700 text-neutral-800 dark:text-white shadow-sm focus:outline-none\"\r\n+              >\r\n+                <option value=\"\">Any Gender</option>\r\n+                <option value=\"male\">Male</option>\r\n+                <option value=\"female\">Female</option>\r\n+              </select>\r\n+\r\n+              <input\r\n+                type=\"text\"\r\n+                placeholder=\"Country\"\r\n+                value={countryFilter}\r\n+                onChange={(e) => setCountryFilter(e.target.value)}\r\n+                className=\"text-sm px-3 py-2 rounded-lg border border-neutral-300 dark:border-neutral-600 bg-white dark:bg-neutral-700 text-neutral-800 dark:text-white shadow-sm focus:outline-none\"\r\n+              />\r\n+\r\n+              <button\r\n+                onClick={() => setSoundOn(!soundOn)}\r\n+                className=\"text-sm px-3 py-2 rounded-lg border border-neutral-300 dark:border-neutral-600 bg-white dark:bg-neutral-700 text-neutral-800 dark:text-white shadow-sm hover:bg-neutral-200 dark:hover:bg-neutral-600\"\r\n+              >\r\n+                Sound: {soundOn ? \"On\" : \"Off\"}\r\n+              </button>\r\n+            </div>\r\n+\r\n+            {/* Control Button */}\r\n+            <div className=\"w-full sm:w-auto flex justify-center sm:justify-end\">\r\n+              {renderControlButton()}\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1752667204545,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -172,223 +172,8 @@\n           )}\r\n         </div>\r\n \r\n         {/* Bottom Controls */}\r\n-        <div className=\"p-3 border-t border-neutral-300 dark:border-neutral-700 bg-white dark:bg-neutral-800\">\r\n-          <div className=\"flex flex-col sm:flex-row justify-between items-center gap-3 sm:gap-2\">\r\n-            <div className=\"flex flex-wrap justify-center sm:justify-start items-center gap-2 w-full sm:w-auto\">\r\n-              <select\r\n-                value={genderFilter}\r\n-                onChange={(e) => setGenderFilter(e.target.value)}\r\n-                className=\"text-sm px-3 py-2 rounded-lg border border-neutral-300 dark:border-neutral-600 bg-white dark:bg-neutral-700 text-neutral-800 dark:text-white shadow-sm focus:outline-none\"\r\n-              >\r\n-                <option value=\"\">Any Gender</option>\r\n-                <option value=\"male\">Male</option>\r\n-                <option value=\"female\">Female</option>\r\n-              </select>\r\n-\r\n-              <input\r\n-                type=\"text\"\r\n-                placeholder=\"Country\"\r\n-                value={countryFilter}\r\n-                onChange={(e) => setCountryFilter(e.target.value)}\r\n-                className=\"text-sm px-3 py-2 rounded-lg border border-neutral-300 dark:border-neutral-600 bg-white dark:bg-neutral-700 text-neutral-800 dark:text-white shadow-sm focus:outline-none\"\r\n-              />\r\n-\r\n-              <button\r\n-                onClick={() => setSoundOn(!soundOn)}\r\n-                className=\"text-sm px-3 py-2 rounded-lg border border-neutral-300 dark:border-neutral-600 bg-white dark:bg-neutral-700 text-neutral-800 dark:text-white shadow-sm hover:bg-neutral-200 dark:hover:bg-neutral-600\"\r\n-              >\r\n-                Sound: {soundOn ? \"On\" : \"Off\"}\r\n-              </button>\r\n-            </div>\r\n-\r\n-            {/* Control Button */}\r\n-            <div className=\"w-full sm:w-auto flex justify-center sm:justify-end\">\r\n-              {renderControlButton()}\r\n-            </div>\r\n-          </div>\r\n-        </div>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n-\"use client\";\r\n-\r\n-import React, { useEffect, useState } from \"react\";\r\n-import useWebRTC from \"../hooks/useWebRTC\";\r\n-import useSocket from \"../hooks/useSocket\";\r\n-import LocalVideo from \"../../../components/video/LocalVideo\";\r\n-import RemoteVideo from \"../../../components/video/RemoteVideo\";\r\n-import ChatBox from \"../../../components/chat/ChatBox\";\r\n-import FindingPartner from \"./FindingPartner\";\r\n-import { Users, RefreshCcw, CircleStop } from \"lucide-react\";\r\n-import { useSoundPlayer } from \"../hooks/useSoundPlayer\";\r\n-import { useChatHandlers } from \"../hooks/useChatHandlers\";\r\n-import IdleMessage from \"./IdleMessage\";\r\n-import ControlBar from \"./ControlBar\";\r\n-\r\n-export default function AnonymousChatRoom() {\r\n-  const [roomId, setRoomId] = useState<string | null>(null);\r\n-  const [isOfferer, setIsOfferer] = useState<boolean | null>(null);\r\n-  const [loading, setLoading] = useState(false);\r\n-  const [sessionStarted, setSessionStarted] = useState(false);\r\n-  const [lastAction, setLastAction] = useState<\"skipped\" | \"left\" | null>(null);\r\n-  const [soundOn, setSoundOn] = useState(true);\r\n-\r\n-  const [userInfo, setUserInfo] = useState<any>({});\r\n-  const [partnerInfo, setPartnerInfo] = useState<any>(null);\r\n-  const [genderFilter, setGenderFilter] = useState(\"\");\r\n-  const [countryFilter, setCountryFilter] = useState(\"\");\r\n-\r\n-  const socket = useSocket();\r\n-  const { localStream, remoteStream } = useWebRTC(roomId, isOfferer, sessionStarted);\r\n-  const { matchSoundRef, leaveSoundRef, playSound } = useSoundPlayer(soundOn);\r\n-\r\n-  useChatHandlers({\r\n-    socket,\r\n-    playSound,\r\n-    setRoomId,\r\n-    setIsOfferer,\r\n-    setPartnerInfo,\r\n-    setLoading,\r\n-    setSessionStarted,\r\n-    setLastAction,\r\n-  });\r\n-\r\n-  useEffect(() => {\r\n-    const stored = localStorage.getItem(\"user-info\");\r\n-    if (stored) {\r\n-      setUserInfo(JSON.parse(stored));\r\n-    }\r\n-  }, []);\r\n-\r\n-  useEffect(() => {\r\n-    return () => {\r\n-      if (socket && roomId) {\r\n-        socket.emit(\"leave-room\", roomId);\r\n-      }\r\n-    };\r\n-  }, [socket, roomId]);\r\n-\r\n-  const handleStart = () => {\r\n-    if (!sessionStarted) {\r\n-      setLoading(true);\r\n-      setSessionStarted(true);\r\n-      socket?.emit(\"start-looking\", {\r\n-        name: userInfo.name,\r\n-        age: userInfo.age,\r\n-        gender: userInfo.gender,\r\n-        country: userInfo.country,\r\n-        filterGender: genderFilter,\r\n-        filterCountry: countryFilter,\r\n-      });\r\n-    }\r\n-  };\r\n-\r\n-  const handleStop = () => {\r\n-    if (roomId) {\r\n-      socket?.emit(\"leave-room\", roomId);\r\n-    }\r\n-    setRoomId(null);\r\n-    setIsOfferer(null);\r\n-    setSessionStarted(false);\r\n-    setLoading(false);\r\n-  };\r\n-\r\n-  const handleSkip = () => {\r\n-    handleStop();\r\n-    handleStart();\r\n-    setLastAction(\"skipped\");\r\n-  };\r\n-\r\n-  const renderControlButton = () => {\r\n-    const baseClasses =\r\n-      \"flex items-center gap-2 px-4 py-2 rounded-lg shadow font-medium transition whitespace-nowrap\";\r\n-    if (!sessionStarted) {\r\n-      return (\r\n-        <button\r\n-          onClick={handleStart}\r\n-          className={`${baseClasses} bg-green-600 hover:bg-green-700 text-white`}\r\n-        >\r\n-          <Users className=\"w-5 h-5\" />\r\n-          Start\r\n-        </button>\r\n-      );\r\n-    } else if (loading) {\r\n-      return (\r\n-        <button\r\n-          onClick={handleStop}\r\n-          className={`${baseClasses} bg-red-600 hover:bg-red-700 text-white`}\r\n-        >\r\n-          <CircleStop className=\"w-5 h-5\" />\r\n-          Stop\r\n-        </button>\r\n-      );\r\n-    } else {\r\n-      return (\r\n-        <button\r\n-          onClick={handleSkip}\r\n-          className={`${baseClasses} bg-yellow-500 hover:bg-yellow-600 text-white`}\r\n-        >\r\n-          <RefreshCcw className=\"w-5 h-5\" />\r\n-          Skip\r\n-        </button>\r\n-      );\r\n-    }\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"flex flex-col md:flex-row h-[calc(100vh-56px)] bg-neutral-100 dark:bg-neutral-900 overflow-hidden\">\r\n-      {/* Sounds */}\r\n-      <audio ref={matchSoundRef} src=\"/sounds/match.mp3\" preload=\"auto\" />\r\n-      <audio ref={leaveSoundRef} src=\"/sounds/leave.mp3\" preload=\"auto\" />\r\n-\r\n-      {/* Video Section */}\r\n-      <div className=\"flex-1 relative flex items-center justify-center p-3 sm:p-4 bg-black min-h-0 overflow-hidden\">\r\n-        {!sessionStarted ? (\r\n-          <div className=\"text-white text-lg sm:text-xl font-semibold text-center px-4\">\r\n-            Click Start to begin searching\r\n-          </div>\r\n-        ) : loading ? (\r\n-          <FindingPartner />\r\n-        ) : (\r\n-          <>\r\n-            <RemoteVideo stream={remoteStream} />\r\n-            <div className=\"absolute top-4 right-4 w-32 h-32 sm:w-40 sm:h-40 rounded overflow-hidden border-2 border-white shadow-lg z-20\">\r\n-              {localStream ? (\r\n-                <LocalVideo stream={localStream} />\r\n-              ) : (\r\n-                <div className=\"text-white text-sm p-2\">Loading camera...</div>\r\n-              )}\r\n-            </div>\r\n-          </>\r\n-        )}\r\n-      </div>\r\n-\r\n-      {/* Chat + Controls */}\r\n-      <div className=\"w-full md:w-[420px] flex flex-col min-h-0 border-t md:border-t-0 md:border-l border-neutral-300 dark:border-neutral-700\">\r\n-        <div\r\n-  className={`\r\n-    flex-grow overflow-y-auto min-h-0\r\n-    max-h-[45vh] sm:max-h-full\r\n-  `}\r\n->\r\n-\r\n-          {roomId ? (\r\n-            <ChatBox\r\n-              socket={socket}\r\n-              roomId={roomId}\r\n-              soundOn={soundOn}\r\n-              partnerName={partnerInfo?.name}\r\n-              partnerAge={partnerInfo?.age}\r\n-            />\r\n-          ) : (\r\n-            <IdleMessage lastAction={lastAction} />\r\n-          )}\r\n-        </div>\r\n-\r\n-        {/* Bottom Controls */}\r\n         <ControlBar\r\n           userInfo={userInfo}\r\n           soundOn={soundOn}\r\n           setSoundOn={setSoundOn}\r\n"
                },
                {
                    "date": 1752667845400,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,8 @@\n import LocalVideo from \"../../../components/video/LocalVideo\";\r\n import RemoteVideo from \"../../../components/video/RemoteVideo\";\r\n import ChatBox from \"../../../components/chat/ChatBox\";\r\n import FindingPartner from \"./FindingPartner\";\r\n-import { Users, RefreshCcw, CircleStop } from \"lucide-react\";\r\n import { useSoundPlayer } from \"../hooks/useSoundPlayer\";\r\n import { useChatHandlers } from \"../hooks/useChatHandlers\";\r\n import IdleMessage from \"./IdleMessage\";\r\n import ControlBar from \"./ControlBar\";\r\n@@ -86,47 +85,10 @@\n     handleStart();\r\n     setLastAction(\"skipped\");\r\n   };\r\n \r\n-  const renderControlButton = () => {\r\n-    const baseClasses =\r\n-      \"flex items-center gap-2 px-4 py-2 rounded-lg shadow font-medium transition whitespace-nowrap\";\r\n-    if (!sessionStarted) {\r\n-      return (\r\n-        <button\r\n-          onClick={handleStart}\r\n-          className={`${baseClasses} bg-green-600 hover:bg-green-700 text-white`}\r\n-        >\r\n-          <Users className=\"w-5 h-5\" />\r\n-          Start\r\n-        </button>\r\n-      );\r\n-    } else if (loading) {\r\n-      return (\r\n-        <button\r\n-          onClick={handleStop}\r\n-          className={`${baseClasses} bg-red-600 hover:bg-red-700 text-white`}\r\n-        >\r\n-          <CircleStop className=\"w-5 h-5\" />\r\n-          Stop\r\n-        </button>\r\n-      );\r\n-    } else {\r\n-      return (\r\n-        <button\r\n-          onClick={handleSkip}\r\n-          className={`${baseClasses} bg-yellow-500 hover:bg-yellow-600 text-white`}\r\n-        >\r\n-          <RefreshCcw className=\"w-5 h-5\" />\r\n-          Skip\r\n-        </button>\r\n-      );\r\n-    }\r\n-  };\r\n-\r\n   return (\r\n     <div className=\"flex flex-col md:flex-row h-[calc(100vh-56px)] bg-neutral-100 dark:bg-neutral-900 overflow-hidden\">\r\n-      {/* Sounds */}\r\n       <audio ref={matchSoundRef} src=\"/sounds/match.mp3\" preload=\"auto\" />\r\n       <audio ref={leaveSoundRef} src=\"/sounds/leave.mp3\" preload=\"auto\" />\r\n \r\n       {/* Video Section */}\r\n@@ -152,14 +114,9 @@\n       </div>\r\n \r\n       {/* Chat + Controls */}\r\n       <div className=\"w-full md:w-[420px] flex flex-col min-h-0 border-t md:border-t-0 md:border-l border-neutral-300 dark:border-neutral-700\">\r\n-        <div\r\n-          className={`\r\n-            flex-grow overflow-y-auto min-h-0\r\n-            max-h-[45vh] sm:max-h-full\r\n-          `}\r\n-        >\r\n+        <div className=\"flex-grow overflow-y-auto min-h-0 max-h-[45vh] sm:max-h-full\">\r\n           {roomId ? (\r\n             <ChatBox\r\n               socket={socket}\r\n               roomId={roomId}\r\n@@ -171,18 +128,21 @@\n             <IdleMessage lastAction={lastAction} />\r\n           )}\r\n         </div>\r\n \r\n-        {/* Bottom Controls */}\r\n         <ControlBar\r\n           userInfo={userInfo}\r\n           soundOn={soundOn}\r\n           setSoundOn={setSoundOn}\r\n           genderFilter={genderFilter}\r\n           setGenderFilter={setGenderFilter}\r\n           countryFilter={countryFilter}\r\n           setCountryFilter={setCountryFilter}\r\n-          renderControlButton={renderControlButton}\r\n+          sessionStarted={sessionStarted}\r\n+          loading={loading}\r\n+          handleStart={handleStart}\r\n+          handleStop={handleStop}\r\n+          handleSkip={handleSkip}\r\n         />\r\n       </div>\r\n     </div>\r\n   );\r\n"
                },
                {
                    "date": 1752668918384,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -90,9 +90,9 @@\n     <div className=\"flex flex-col md:flex-row h-[calc(100vh-56px)] bg-neutral-100 dark:bg-neutral-900 overflow-hidden\">\r\n       <audio ref={matchSoundRef} src=\"/sounds/match.mp3\" preload=\"auto\" />\r\n       <audio ref={leaveSoundRef} src=\"/sounds/leave.mp3\" preload=\"auto\" />\r\n \r\n-      {/* Video Section */}\r\n+      {/* === Video Section === */}\r\n       <div className=\"flex-1 relative flex items-center justify-center p-3 sm:p-4 bg-black min-h-0 overflow-hidden\">\r\n         {!sessionStarted ? (\r\n           <div className=\"text-white text-lg sm:text-xl font-semibold text-center px-4\">\r\n             Click Start to begin searching\r\n@@ -101,9 +101,9 @@\n           <FindingPartner />\r\n         ) : (\r\n           <>\r\n             <RemoteVideo stream={remoteStream} />\r\n-            <div className=\"absolute top-4 right-4 w-32 h-32 sm:w-40 sm:h-40 rounded overflow-hidden border-2 border-white shadow-lg z-20\">\r\n+            <div className=\"absolute top-4 right-4 w-28 h-28 sm:w-36 sm:h-36 md:w-40 md:h-40 rounded overflow-hidden border-2 border-white shadow-lg z-20\">\r\n               {localStream ? (\r\n                 <LocalVideo stream={localStream} />\r\n               ) : (\r\n                 <div className=\"text-white text-sm p-2\">Loading camera...</div>\r\n@@ -112,11 +112,13 @@\n           </>\r\n         )}\r\n       </div>\r\n \r\n-      {/* Chat + Controls */}\r\n-      <div className=\"w-full md:w-[420px] flex flex-col min-h-0 border-t md:border-t-0 md:border-l border-neutral-300 dark:border-neutral-700\">\r\n-        <div className=\"flex-grow overflow-y-auto min-h-0 max-h-[45vh] sm:max-h-full\">\r\n+      {/* === Chat + Controls Panel === */}\r\n+      <div className=\"w-full md:w-[420px] flex flex-col min-h-0 border-t md:border-t-0 md:border-l border-neutral-300 dark:border-neutral-700 bg-white dark:bg-neutral-900\">\r\n+\r\n+        {/* === Chat Area === */}\r\n+        <div className=\"flex-1 min-h-0 overflow-hidden relative\">\r\n           {roomId ? (\r\n             <ChatBox\r\n               socket={socket}\r\n               roomId={roomId}\r\n@@ -128,8 +130,9 @@\n             <IdleMessage lastAction={lastAction} />\r\n           )}\r\n         </div>\r\n \r\n+        {/* === Control Bar === */}\r\n         <ControlBar\r\n           userInfo={userInfo}\r\n           soundOn={soundOn}\r\n           setSoundOn={setSoundOn}\r\n"
                },
                {
                    "date": 1752683775198,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -91,9 +91,10 @@\n       <audio ref={matchSoundRef} src=\"/sounds/match.mp3\" preload=\"auto\" />\r\n       <audio ref={leaveSoundRef} src=\"/sounds/leave.mp3\" preload=\"auto\" />\r\n \r\n       {/* === Video Section === */}\r\n-      <div className=\"flex-1 relative flex items-center justify-center p-3 sm:p-4 bg-black min-h-0 overflow-hidden\">\r\n+      <div className=\"md:flex-1 relative flex items-center justify-center p-3 sm:p-4 bg-black min-h-0 overflow-hidden\r\n+        h-[66vh] md:h-auto\">\r\n         {!sessionStarted ? (\r\n           <div className=\"text-white text-lg sm:text-xl font-semibold text-center px-4\">\r\n             Click Start to begin searching\r\n           </div>\r\n@@ -113,10 +114,11 @@\n         )}\r\n       </div>\r\n \r\n       {/* === Chat + Controls Panel === */}\r\n-      <div className=\"w-full md:w-[420px] flex flex-col min-h-0 border-t md:border-t-0 md:border-l border-neutral-300 dark:border-neutral-700 bg-white dark:bg-neutral-900\">\r\n-\r\n+      <div className=\"w-full md:w-[420px] flex flex-col min-h-0 border-t md:border-t-0 md:border-l border-neutral-300 dark:border-neutral-700 bg-white dark:bg-neutral-900\r\n+        h-[34vh] md:h-auto\">\r\n+        \r\n         {/* === Chat Area === */}\r\n         <div className=\"flex-1 min-h-0 overflow-hidden relative\">\r\n           {roomId ? (\r\n             <ChatBox\r\n"
                },
                {
                    "date": 1752684536462,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,15 +86,15 @@\n     setLastAction(\"skipped\");\r\n   };\r\n \r\n   return (\r\n-    <div className=\"flex flex-col md:flex-row h-[calc(100vh-56px)] bg-neutral-100 dark:bg-neutral-900 overflow-hidden\">\r\n+    <div className=\"flex flex-col md:flex-row h-[100dvh] bg-neutral-100 dark:bg-neutral-900 overflow-hidden\">\r\n       <audio ref={matchSoundRef} src=\"/sounds/match.mp3\" preload=\"auto\" />\r\n       <audio ref={leaveSoundRef} src=\"/sounds/leave.mp3\" preload=\"auto\" />\r\n \r\n       {/* === Video Section === */}\r\n       <div className=\"md:flex-1 relative flex items-center justify-center p-3 sm:p-4 bg-black min-h-0 overflow-hidden\r\n-        h-[66vh] md:h-auto\">\r\n+        h-[66dvh] md:h-auto\">\r\n         {!sessionStarted ? (\r\n           <div className=\"text-white text-lg sm:text-xl font-semibold text-center px-4\">\r\n             Click Start to begin searching\r\n           </div>\r\n@@ -115,9 +115,9 @@\n       </div>\r\n \r\n       {/* === Chat + Controls Panel === */}\r\n       <div className=\"w-full md:w-[420px] flex flex-col min-h-0 border-t md:border-t-0 md:border-l border-neutral-300 dark:border-neutral-700 bg-white dark:bg-neutral-900\r\n-        h-[34vh] md:h-auto\">\r\n+        h-[34dvh] md:h-auto\">\r\n         \r\n         {/* === Chat Area === */}\r\n         <div className=\"flex-1 min-h-0 overflow-hidden relative\">\r\n           {roomId ? (\r\n"
                },
                {
                    "date": 1752684643710,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,15 +86,15 @@\n     setLastAction(\"skipped\");\r\n   };\r\n \r\n   return (\r\n-    <div className=\"flex flex-col md:flex-row h-[100dvh] bg-neutral-100 dark:bg-neutral-900 overflow-hidden\">\r\n+    <div className=\"flex flex-col md:flex-row h-[calc(100vh-56px)] bg-neutral-100 dark:bg-neutral-900 overflow-hidden\">\r\n       <audio ref={matchSoundRef} src=\"/sounds/match.mp3\" preload=\"auto\" />\r\n       <audio ref={leaveSoundRef} src=\"/sounds/leave.mp3\" preload=\"auto\" />\r\n \r\n       {/* === Video Section === */}\r\n       <div className=\"md:flex-1 relative flex items-center justify-center p-3 sm:p-4 bg-black min-h-0 overflow-hidden\r\n-        h-[66dvh] md:h-auto\">\r\n+        h-[66vh] md:h-auto\">\r\n         {!sessionStarted ? (\r\n           <div className=\"text-white text-lg sm:text-xl font-semibold text-center px-4\">\r\n             Click Start to begin searching\r\n           </div>\r\n@@ -115,9 +115,9 @@\n       </div>\r\n \r\n       {/* === Chat + Controls Panel === */}\r\n       <div className=\"w-full md:w-[420px] flex flex-col min-h-0 border-t md:border-t-0 md:border-l border-neutral-300 dark:border-neutral-700 bg-white dark:bg-neutral-900\r\n-        h-[34dvh] md:h-auto\">\r\n+        h-[34vh] md:h-auto\">\r\n         \r\n         {/* === Chat Area === */}\r\n         <div className=\"flex-1 min-h-0 overflow-hidden relative\">\r\n           {roomId ? (\r\n"
                },
                {
                    "date": 1752685529156,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,9 +86,9 @@\n     setLastAction(\"skipped\");\r\n   };\r\n \r\n   return (\r\n-    <div className=\"flex flex-col md:flex-row h-[calc(100vh-56px)] bg-neutral-100 dark:bg-neutral-900 overflow-hidden\">\r\n+    <div className=\"flex flex-col md:flex-row h-[calc(100dvh-56px)] bg-neutral-100 dark:bg-neutral-900 overflow-hidden\">\r\n       <audio ref={matchSoundRef} src=\"/sounds/match.mp3\" preload=\"auto\" />\r\n       <audio ref={leaveSoundRef} src=\"/sounds/leave.mp3\" preload=\"auto\" />\r\n \r\n       {/* === Video Section === */}\r\n"
                },
                {
                    "date": 1752685748639,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,9 +86,9 @@\n     setLastAction(\"skipped\");\r\n   };\r\n \r\n   return (\r\n-    <div className=\"flex flex-col md:flex-row h-[calc(100dvh-56px)] bg-neutral-100 dark:bg-neutral-900 overflow-hidden\">\r\n+   <div className=\"flex flex-col md:flex-row min-h-screen bg-neutral-100 dark:bg-neutral-900 overflow-hidden\">\r\n       <audio ref={matchSoundRef} src=\"/sounds/match.mp3\" preload=\"auto\" />\r\n       <audio ref={leaveSoundRef} src=\"/sounds/leave.mp3\" preload=\"auto\" />\r\n \r\n       {/* === Video Section === */}\r\n"
                },
                {
                    "date": 1752686041349,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,9 +86,9 @@\n     setLastAction(\"skipped\");\r\n   };\r\n \r\n   return (\r\n-   <div className=\"flex flex-col md:flex-row min-h-screen bg-neutral-100 dark:bg-neutral-900 overflow-hidden\">\r\n+    <div className=\"flex flex-col md:flex-row min-h-screen bg-neutral-100 dark:bg-neutral-900 overflow-hidden\">\r\n       <audio ref={matchSoundRef} src=\"/sounds/match.mp3\" preload=\"auto\" />\r\n       <audio ref={leaveSoundRef} src=\"/sounds/leave.mp3\" preload=\"auto\" />\r\n \r\n       {/* === Video Section === */}\r\n@@ -116,11 +116,11 @@\n \r\n       {/* === Chat + Controls Panel === */}\r\n       <div className=\"w-full md:w-[420px] flex flex-col min-h-0 border-t md:border-t-0 md:border-l border-neutral-300 dark:border-neutral-700 bg-white dark:bg-neutral-900\r\n         h-[34vh] md:h-auto\">\r\n-        \r\n+\r\n         {/* === Chat Area === */}\r\n-        <div className=\"flex-1 min-h-0 overflow-hidden relative\">\r\n+        <div className=\"flex-1 max-h-[180px] overflow-y-auto border-b border-neutral-300 dark:border-neutral-700\">\r\n           {roomId ? (\r\n             <ChatBox\r\n               socket={socket}\r\n               roomId={roomId}\r\n@@ -133,22 +133,24 @@\n           )}\r\n         </div>\r\n \r\n         {/* === Control Bar === */}\r\n-        <ControlBar\r\n-          userInfo={userInfo}\r\n-          soundOn={soundOn}\r\n-          setSoundOn={setSoundOn}\r\n-          genderFilter={genderFilter}\r\n-          setGenderFilter={setGenderFilter}\r\n-          countryFilter={countryFilter}\r\n-          setCountryFilter={setCountryFilter}\r\n-          sessionStarted={sessionStarted}\r\n-          loading={loading}\r\n-          handleStart={handleStart}\r\n-          handleStop={handleStop}\r\n-          handleSkip={handleSkip}\r\n-        />\r\n+        <div className=\"shrink-0\">\r\n+          <ControlBar\r\n+            userInfo={userInfo}\r\n+            soundOn={soundOn}\r\n+            setSoundOn={setSoundOn}\r\n+            genderFilter={genderFilter}\r\n+            setGenderFilter={setGenderFilter}\r\n+            countryFilter={countryFilter}\r\n+            setCountryFilter={setCountryFilter}\r\n+            sessionStarted={sessionStarted}\r\n+            loading={loading}\r\n+            handleStart={handleStart}\r\n+            handleStop={handleStop}\r\n+            handleSkip={handleSkip}\r\n+          />\r\n+        </div>\r\n       </div>\r\n     </div>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1752686202515,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -118,9 +118,9 @@\n       <div className=\"w-full md:w-[420px] flex flex-col min-h-0 border-t md:border-t-0 md:border-l border-neutral-300 dark:border-neutral-700 bg-white dark:bg-neutral-900\r\n         h-[34vh] md:h-auto\">\r\n \r\n         {/* === Chat Area === */}\r\n-        <div className=\"flex-1 max-h-[180px] overflow-y-auto border-b border-neutral-300 dark:border-neutral-700\">\r\n+        <div className=\"flex-1 min-h-0 overflow-hidden relative\">\r\n           {roomId ? (\r\n             <ChatBox\r\n               socket={socket}\r\n               roomId={roomId}\r\n@@ -133,24 +133,22 @@\n           )}\r\n         </div>\r\n \r\n         {/* === Control Bar === */}\r\n-        <div className=\"shrink-0\">\r\n-          <ControlBar\r\n-            userInfo={userInfo}\r\n-            soundOn={soundOn}\r\n-            setSoundOn={setSoundOn}\r\n-            genderFilter={genderFilter}\r\n-            setGenderFilter={setGenderFilter}\r\n-            countryFilter={countryFilter}\r\n-            setCountryFilter={setCountryFilter}\r\n-            sessionStarted={sessionStarted}\r\n-            loading={loading}\r\n-            handleStart={handleStart}\r\n-            handleStop={handleStop}\r\n-            handleSkip={handleSkip}\r\n-          />\r\n-        </div>\r\n+        <ControlBar\r\n+          userInfo={userInfo}\r\n+          soundOn={soundOn}\r\n+          setSoundOn={setSoundOn}\r\n+          genderFilter={genderFilter}\r\n+          setGenderFilter={setGenderFilter}\r\n+          countryFilter={countryFilter}\r\n+          setCountryFilter={setCountryFilter}\r\n+          sessionStarted={sessionStarted}\r\n+          loading={loading}\r\n+          handleStart={handleStart}\r\n+          handleStop={handleStop}\r\n+          handleSkip={handleSkip}\r\n+        />\r\n       </div>\r\n     </div>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1752686219692,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,9 +86,9 @@\n     setLastAction(\"skipped\");\r\n   };\r\n \r\n   return (\r\n-    <div className=\"flex flex-col md:flex-row min-h-screen bg-neutral-100 dark:bg-neutral-900 overflow-hidden\">\r\n+    <div className=\"flex flex-col md:flex-row h-[calc(100dvh-56px)] bg-neutral-100 dark:bg-neutral-900 overflow-hidden\">\r\n       <audio ref={matchSoundRef} src=\"/sounds/match.mp3\" preload=\"auto\" />\r\n       <audio ref={leaveSoundRef} src=\"/sounds/leave.mp3\" preload=\"auto\" />\r\n \r\n       {/* === Video Section === */}\r\n@@ -116,9 +116,9 @@\n \r\n       {/* === Chat + Controls Panel === */}\r\n       <div className=\"w-full md:w-[420px] flex flex-col min-h-0 border-t md:border-t-0 md:border-l border-neutral-300 dark:border-neutral-700 bg-white dark:bg-neutral-900\r\n         h-[34vh] md:h-auto\">\r\n-\r\n+        \r\n         {/* === Chat Area === */}\r\n         <div className=\"flex-1 min-h-0 overflow-hidden relative\">\r\n           {roomId ? (\r\n             <ChatBox\r\n"
                },
                {
                    "date": 1752686227660,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,9 +86,9 @@\n     setLastAction(\"skipped\");\r\n   };\r\n \r\n   return (\r\n-    <div className=\"flex flex-col md:flex-row h-[calc(100dvh-56px)] bg-neutral-100 dark:bg-neutral-900 overflow-hidden\">\r\n+    <div className=\"flex flex-col md:flex-row h-[calc(100vh-56px)] bg-neutral-100 dark:bg-neutral-900 overflow-hidden\">\r\n       <audio ref={matchSoundRef} src=\"/sounds/match.mp3\" preload=\"auto\" />\r\n       <audio ref={leaveSoundRef} src=\"/sounds/leave.mp3\" preload=\"auto\" />\r\n \r\n       {/* === Video Section === */}\r\n"
                },
                {
                    "date": 1752686658365,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,13 @@\n   const [genderFilter, setGenderFilter] = useState(\"\");\r\n   const [countryFilter, setCountryFilter] = useState(\"\");\r\n \r\n   const socket = useSocket();\r\n-  const { localStream, remoteStream } = useWebRTC(roomId, isOfferer, sessionStarted);\r\n+  const { localStream, remoteStream } = useWebRTC(\r\n+    roomId,\r\n+    isOfferer,\r\n+    sessionStarted\r\n+  );\r\n   const { matchSoundRef, leaveSoundRef, playSound } = useSoundPlayer(soundOn);\r\n \r\n   useChatHandlers({\r\n     socket,\r\n@@ -86,15 +90,14 @@\n     setLastAction(\"skipped\");\r\n   };\r\n \r\n   return (\r\n-    <div className=\"flex flex-col md:flex-row h-[calc(100vh-56px)] bg-neutral-100 dark:bg-neutral-900 overflow-hidden\">\r\n+    <div className=\"flex flex-col md:flex-row min-h-[calc(100dvh-56px)] bg-neutral-100 dark:bg-neutral-900\">\r\n       <audio ref={matchSoundRef} src=\"/sounds/match.mp3\" preload=\"auto\" />\r\n       <audio ref={leaveSoundRef} src=\"/sounds/leave.mp3\" preload=\"auto\" />\r\n \r\n       {/* === Video Section === */}\r\n-      <div className=\"md:flex-1 relative flex items-center justify-center p-3 sm:p-4 bg-black min-h-0 overflow-hidden\r\n-        h-[66vh] md:h-auto\">\r\n+      <div className=\"md:flex-1 flex-grow relative flex items-center justify-center p-3 sm:p-4 bg-black overflow-hidden\">\r\n         {!sessionStarted ? (\r\n           <div className=\"text-white text-lg sm:text-xl font-semibold text-center px-4\">\r\n             Click Start to begin searching\r\n           </div>\r\n@@ -114,13 +117,11 @@\n         )}\r\n       </div>\r\n \r\n       {/* === Chat + Controls Panel === */}\r\n-      <div className=\"w-full md:w-[420px] flex flex-col min-h-0 border-t md:border-t-0 md:border-l border-neutral-300 dark:border-neutral-700 bg-white dark:bg-neutral-900\r\n-        h-[34vh] md:h-auto\">\r\n-        \r\n+      <div className=\"w-full md:w-[420px] flex flex-col max-h-full border-t md:border-t-0 md:border-l border-neutral-300 dark:border-neutral-700 bg-white dark:bg-neutral-900\">\r\n         {/* === Chat Area === */}\r\n-        <div className=\"flex-1 min-h-0 overflow-hidden relative\">\r\n+        <div className=\"flex-1 min-h-0 overflow-y-auto\">\r\n           {roomId ? (\r\n             <ChatBox\r\n               socket={socket}\r\n               roomId={roomId}\r\n@@ -133,22 +134,24 @@\n           )}\r\n         </div>\r\n \r\n         {/* === Control Bar === */}\r\n-        <ControlBar\r\n-          userInfo={userInfo}\r\n-          soundOn={soundOn}\r\n-          setSoundOn={setSoundOn}\r\n-          genderFilter={genderFilter}\r\n-          setGenderFilter={setGenderFilter}\r\n-          countryFilter={countryFilter}\r\n-          setCountryFilter={setCountryFilter}\r\n-          sessionStarted={sessionStarted}\r\n-          loading={loading}\r\n-          handleStart={handleStart}\r\n-          handleStop={handleStop}\r\n-          handleSkip={handleSkip}\r\n-        />\r\n+        <div className=\"border-t border-neutral-200 dark:border-neutral-700\">\r\n+          <ControlBar\r\n+            userInfo={userInfo}\r\n+            soundOn={soundOn}\r\n+            setSoundOn={setSoundOn}\r\n+            genderFilter={genderFilter}\r\n+            setGenderFilter={setGenderFilter}\r\n+            countryFilter={countryFilter}\r\n+            setCountryFilter={setCountryFilter}\r\n+            sessionStarted={sessionStarted}\r\n+            loading={loading}\r\n+            handleStart={handleStart}\r\n+            handleStop={handleStop}\r\n+            handleSkip={handleSkip}\r\n+          />\r\n+        </div>\r\n       </div>\r\n     </div>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1752686755150,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,13 +25,9 @@\n   const [genderFilter, setGenderFilter] = useState(\"\");\r\n   const [countryFilter, setCountryFilter] = useState(\"\");\r\n \r\n   const socket = useSocket();\r\n-  const { localStream, remoteStream } = useWebRTC(\r\n-    roomId,\r\n-    isOfferer,\r\n-    sessionStarted\r\n-  );\r\n+  const { localStream, remoteStream } = useWebRTC(roomId, isOfferer, sessionStarted);\r\n   const { matchSoundRef, leaveSoundRef, playSound } = useSoundPlayer(soundOn);\r\n \r\n   useChatHandlers({\r\n     socket,\r\n@@ -90,14 +86,15 @@\n     setLastAction(\"skipped\");\r\n   };\r\n \r\n   return (\r\n-    <div className=\"flex flex-col md:flex-row min-h-[calc(100dvh-56px)] bg-neutral-100 dark:bg-neutral-900\">\r\n+    <div className=\"flex flex-col md:flex-row h-[calc(100vh-56px)] bg-neutral-100 dark:bg-neutral-900 overflow-hidden\">\r\n       <audio ref={matchSoundRef} src=\"/sounds/match.mp3\" preload=\"auto\" />\r\n       <audio ref={leaveSoundRef} src=\"/sounds/leave.mp3\" preload=\"auto\" />\r\n \r\n       {/* === Video Section === */}\r\n-      <div className=\"md:flex-1 flex-grow relative flex items-center justify-center p-3 sm:p-4 bg-black overflow-hidden\">\r\n+      <div className=\"md:flex-1 relative flex items-center justify-center p-3 sm:p-4 bg-black min-h-0 overflow-hidden\r\n+        h-[66vh] md:h-auto\">\r\n         {!sessionStarted ? (\r\n           <div className=\"text-white text-lg sm:text-xl font-semibold text-center px-4\">\r\n             Click Start to begin searching\r\n           </div>\r\n@@ -117,11 +114,13 @@\n         )}\r\n       </div>\r\n \r\n       {/* === Chat + Controls Panel === */}\r\n-      <div className=\"w-full md:w-[420px] flex flex-col max-h-full border-t md:border-t-0 md:border-l border-neutral-300 dark:border-neutral-700 bg-white dark:bg-neutral-900\">\r\n+      <div className=\"w-full md:w-[420px] flex flex-col min-h-0 border-t md:border-t-0 md:border-l border-neutral-300 dark:border-neutral-700 bg-white dark:bg-neutral-900\r\n+        h-[34vh] md:h-auto\">\r\n+        \r\n         {/* === Chat Area === */}\r\n-        <div className=\"flex-1 min-h-0 overflow-y-auto\">\r\n+        <div className=\"flex-1 min-h-0 overflow-hidden relative\">\r\n           {roomId ? (\r\n             <ChatBox\r\n               socket={socket}\r\n               roomId={roomId}\r\n@@ -134,24 +133,22 @@\n           )}\r\n         </div>\r\n \r\n         {/* === Control Bar === */}\r\n-        <div className=\"border-t border-neutral-200 dark:border-neutral-700\">\r\n-          <ControlBar\r\n-            userInfo={userInfo}\r\n-            soundOn={soundOn}\r\n-            setSoundOn={setSoundOn}\r\n-            genderFilter={genderFilter}\r\n-            setGenderFilter={setGenderFilter}\r\n-            countryFilter={countryFilter}\r\n-            setCountryFilter={setCountryFilter}\r\n-            sessionStarted={sessionStarted}\r\n-            loading={loading}\r\n-            handleStart={handleStart}\r\n-            handleStop={handleStop}\r\n-            handleSkip={handleSkip}\r\n-          />\r\n-        </div>\r\n+        <ControlBar\r\n+          userInfo={userInfo}\r\n+          soundOn={soundOn}\r\n+          setSoundOn={setSoundOn}\r\n+          genderFilter={genderFilter}\r\n+          setGenderFilter={setGenderFilter}\r\n+          countryFilter={countryFilter}\r\n+          setCountryFilter={setCountryFilter}\r\n+          sessionStarted={sessionStarted}\r\n+          loading={loading}\r\n+          handleStart={handleStart}\r\n+          handleStop={handleStop}\r\n+          handleSkip={handleSkip}\r\n+        />\r\n       </div>\r\n     </div>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1752687116974,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,69 +86,70 @@\n     setLastAction(\"skipped\");\r\n   };\r\n \r\n   return (\r\n-    <div className=\"flex flex-col md:flex-row h-[calc(100vh-56px)] bg-neutral-100 dark:bg-neutral-900 overflow-hidden\">\r\n+    <div className=\"flex flex-col h-screen\">\r\n+      {/* Audio Feedback */}\r\n       <audio ref={matchSoundRef} src=\"/sounds/match.mp3\" preload=\"auto\" />\r\n       <audio ref={leaveSoundRef} src=\"/sounds/leave.mp3\" preload=\"auto\" />\r\n \r\n-      {/* === Video Section === */}\r\n-      <div className=\"md:flex-1 relative flex items-center justify-center p-3 sm:p-4 bg-black min-h-0 overflow-hidden\r\n-        h-[66vh] md:h-auto\">\r\n-        {!sessionStarted ? (\r\n-          <div className=\"text-white text-lg sm:text-xl font-semibold text-center px-4\">\r\n-            Click Start to begin searching\r\n-          </div>\r\n-        ) : loading ? (\r\n-          <FindingPartner />\r\n-        ) : (\r\n-          <>\r\n-            <RemoteVideo stream={remoteStream} />\r\n-            <div className=\"absolute top-4 right-4 w-28 h-28 sm:w-36 sm:h-36 md:w-40 md:h-40 rounded overflow-hidden border-2 border-white shadow-lg z-20\">\r\n-              {localStream ? (\r\n-                <LocalVideo stream={localStream} />\r\n-              ) : (\r\n-                <div className=\"text-white text-sm p-2\">Loading camera...</div>\r\n-              )}\r\n+      {/* Main Chat Container below Navbar */}\r\n+      <div className=\"flex-1 flex flex-col md:flex-row bg-neutral-100 dark:bg-neutral-900 overflow-hidden\">\r\n+        {/* === Video Section === */}\r\n+        <div className=\"md:flex-1 relative flex items-center justify-center p-3 sm:p-4 bg-black min-h-0 overflow-hidden h-[66vh] md:h-auto\">\r\n+          {!sessionStarted ? (\r\n+            <div className=\"text-white text-lg sm:text-xl font-semibold text-center px-4\">\r\n+              Click Start to begin searching\r\n             </div>\r\n-          </>\r\n-        )}\r\n-      </div>\r\n-\r\n-      {/* === Chat + Controls Panel === */}\r\n-      <div className=\"w-full md:w-[420px] flex flex-col min-h-0 border-t md:border-t-0 md:border-l border-neutral-300 dark:border-neutral-700 bg-white dark:bg-neutral-900\r\n-        h-[34vh] md:h-auto\">\r\n-        \r\n-        {/* === Chat Area === */}\r\n-        <div className=\"flex-1 min-h-0 overflow-hidden relative\">\r\n-          {roomId ? (\r\n-            <ChatBox\r\n-              socket={socket}\r\n-              roomId={roomId}\r\n-              soundOn={soundOn}\r\n-              partnerName={partnerInfo?.name}\r\n-              partnerAge={partnerInfo?.age}\r\n-            />\r\n+          ) : loading ? (\r\n+            <FindingPartner />\r\n           ) : (\r\n-            <IdleMessage lastAction={lastAction} />\r\n+            <>\r\n+              <RemoteVideo stream={remoteStream} />\r\n+              <div className=\"absolute top-4 right-4 w-28 h-28 sm:w-36 sm:h-36 md:w-40 md:h-40 rounded overflow-hidden border-2 border-white shadow-lg z-20\">\r\n+                {localStream ? (\r\n+                  <LocalVideo stream={localStream} />\r\n+                ) : (\r\n+                  <div className=\"text-white text-sm p-2\">Loading camera...</div>\r\n+                )}\r\n+              </div>\r\n+            </>\r\n           )}\r\n         </div>\r\n \r\n-        {/* === Control Bar === */}\r\n-        <ControlBar\r\n-          userInfo={userInfo}\r\n-          soundOn={soundOn}\r\n-          setSoundOn={setSoundOn}\r\n-          genderFilter={genderFilter}\r\n-          setGenderFilter={setGenderFilter}\r\n-          countryFilter={countryFilter}\r\n-          setCountryFilter={setCountryFilter}\r\n-          sessionStarted={sessionStarted}\r\n-          loading={loading}\r\n-          handleStart={handleStart}\r\n-          handleStop={handleStop}\r\n-          handleSkip={handleSkip}\r\n-        />\r\n+        {/* === Chat + Controls Panel === */}\r\n+        <div className=\"w-full md:w-[420px] flex flex-col min-h-0 border-t md:border-t-0 md:border-l border-neutral-300 dark:border-neutral-700 bg-white dark:bg-neutral-900 h-[34vh] md:h-auto\">\r\n+          {/* Chat Area */}\r\n+          <div className=\"flex-1 min-h-0 overflow-hidden relative\">\r\n+            {roomId ? (\r\n+              <ChatBox\r\n+                socket={socket}\r\n+                roomId={roomId}\r\n+                soundOn={soundOn}\r\n+                partnerName={partnerInfo?.name}\r\n+                partnerAge={partnerInfo?.age}\r\n+              />\r\n+            ) : (\r\n+              <IdleMessage lastAction={lastAction} />\r\n+            )}\r\n+          </div>\r\n+\r\n+          {/* Control Bar */}\r\n+          <ControlBar\r\n+            userInfo={userInfo}\r\n+            soundOn={soundOn}\r\n+            setSoundOn={setSoundOn}\r\n+            genderFilter={genderFilter}\r\n+            setGenderFilter={setGenderFilter}\r\n+            countryFilter={countryFilter}\r\n+            setCountryFilter={setCountryFilter}\r\n+            sessionStarted={sessionStarted}\r\n+            loading={loading}\r\n+            handleStart={handleStart}\r\n+            handleStop={handleStop}\r\n+            handleSkip={handleSkip}\r\n+          />\r\n+        </div>\r\n       </div>\r\n     </div>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1752687252482,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,70 +86,69 @@\n     setLastAction(\"skipped\");\r\n   };\r\n \r\n   return (\r\n-    <div className=\"flex flex-col h-screen\">\r\n-      {/* Audio Feedback */}\r\n+    <div className=\"flex flex-col md:flex-row h-[calc(100vh-56px)] bg-neutral-100 dark:bg-neutral-900 overflow-hidden\">\r\n       <audio ref={matchSoundRef} src=\"/sounds/match.mp3\" preload=\"auto\" />\r\n       <audio ref={leaveSoundRef} src=\"/sounds/leave.mp3\" preload=\"auto\" />\r\n \r\n-      {/* Main Chat Container below Navbar */}\r\n-      <div className=\"flex-1 flex flex-col md:flex-row bg-neutral-100 dark:bg-neutral-900 overflow-hidden\">\r\n-        {/* === Video Section === */}\r\n-        <div className=\"md:flex-1 relative flex items-center justify-center p-3 sm:p-4 bg-black min-h-0 overflow-hidden h-[66vh] md:h-auto\">\r\n-          {!sessionStarted ? (\r\n-            <div className=\"text-white text-lg sm:text-xl font-semibold text-center px-4\">\r\n-              Click Start to begin searching\r\n+      {/* === Video Section === */}\r\n+      <div className=\"md:flex-1 relative flex items-center justify-center p-3 sm:p-4 bg-black min-h-0 overflow-hidden\r\n+        h-[66vh] md:h-auto\">\r\n+        {!sessionStarted ? (\r\n+          <div className=\"text-white text-lg sm:text-xl font-semibold text-center px-4\">\r\n+            Click Start to begin searching\r\n+          </div>\r\n+        ) : loading ? (\r\n+          <FindingPartner />\r\n+        ) : (\r\n+          <>\r\n+            <RemoteVideo stream={remoteStream} />\r\n+            <div className=\"absolute top-4 right-4 w-28 h-28 sm:w-36 sm:h-36 md:w-40 md:h-40 rounded overflow-hidden border-2 border-white shadow-lg z-20\">\r\n+              {localStream ? (\r\n+                <LocalVideo stream={localStream} />\r\n+              ) : (\r\n+                <div className=\"text-white text-sm p-2\">Loading camera...</div>\r\n+              )}\r\n             </div>\r\n-          ) : loading ? (\r\n-            <FindingPartner />\r\n+          </>\r\n+        )}\r\n+      </div>\r\n+\r\n+      {/* === Chat + Controls Panel === */}\r\n+      <div className=\"w-full md:w-[420px] flex flex-col min-h-0 border-t md:border-t-0 md:border-l border-neutral-300 dark:border-neutral-700 bg-white dark:bg-neutral-900\r\n+        h-[34vh] md:h-auto\">\r\n+        \r\n+        {/* === Chat Area === */}\r\n+        <div className=\"flex-1 min-h-0 overflow-hidden relative\">\r\n+          {roomId ? (\r\n+            <ChatBox\r\n+              socket={socket}\r\n+              roomId={roomId}\r\n+              soundOn={soundOn}\r\n+              partnerName={partnerInfo?.name}\r\n+              partnerAge={partnerInfo?.age}\r\n+            />\r\n           ) : (\r\n-            <>\r\n-              <RemoteVideo stream={remoteStream} />\r\n-              <div className=\"absolute top-4 right-4 w-28 h-28 sm:w-36 sm:h-36 md:w-40 md:h-40 rounded overflow-hidden border-2 border-white shadow-lg z-20\">\r\n-                {localStream ? (\r\n-                  <LocalVideo stream={localStream} />\r\n-                ) : (\r\n-                  <div className=\"text-white text-sm p-2\">Loading camera...</div>\r\n-                )}\r\n-              </div>\r\n-            </>\r\n+            <IdleMessage lastAction={lastAction} />\r\n           )}\r\n         </div>\r\n \r\n-        {/* === Chat + Controls Panel === */}\r\n-        <div className=\"w-full md:w-[420px] flex flex-col min-h-0 border-t md:border-t-0 md:border-l border-neutral-300 dark:border-neutral-700 bg-white dark:bg-neutral-900 h-[34vh] md:h-auto\">\r\n-          {/* Chat Area */}\r\n-          <div className=\"flex-1 min-h-0 overflow-hidden relative\">\r\n-            {roomId ? (\r\n-              <ChatBox\r\n-                socket={socket}\r\n-                roomId={roomId}\r\n-                soundOn={soundOn}\r\n-                partnerName={partnerInfo?.name}\r\n-                partnerAge={partnerInfo?.age}\r\n-              />\r\n-            ) : (\r\n-              <IdleMessage lastAction={lastAction} />\r\n-            )}\r\n-          </div>\r\n-\r\n-          {/* Control Bar */}\r\n-          <ControlBar\r\n-            userInfo={userInfo}\r\n-            soundOn={soundOn}\r\n-            setSoundOn={setSoundOn}\r\n-            genderFilter={genderFilter}\r\n-            setGenderFilter={setGenderFilter}\r\n-            countryFilter={countryFilter}\r\n-            setCountryFilter={setCountryFilter}\r\n-            sessionStarted={sessionStarted}\r\n-            loading={loading}\r\n-            handleStart={handleStart}\r\n-            handleStop={handleStop}\r\n-            handleSkip={handleSkip}\r\n-          />\r\n-        </div>\r\n+        {/* === Control Bar === */}\r\n+        <ControlBar\r\n+          userInfo={userInfo}\r\n+          soundOn={soundOn}\r\n+          setSoundOn={setSoundOn}\r\n+          genderFilter={genderFilter}\r\n+          setGenderFilter={setGenderFilter}\r\n+          countryFilter={countryFilter}\r\n+          setCountryFilter={setCountryFilter}\r\n+          sessionStarted={sessionStarted}\r\n+          loading={loading}\r\n+          handleStart={handleStart}\r\n+          handleStop={handleStop}\r\n+          handleSkip={handleSkip}\r\n+        />\r\n       </div>\r\n     </div>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1752687686529,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,69 +86,69 @@\n     setLastAction(\"skipped\");\r\n   };\r\n \r\n   return (\r\n-    <div className=\"flex flex-col md:flex-row h-[calc(100vh-56px)] bg-neutral-100 dark:bg-neutral-900 overflow-hidden\">\r\n+    <div className=\"flex flex-col h-[calc(100vh-56px)]\"> {/* height after sticky navbar */}\r\n       <audio ref={matchSoundRef} src=\"/sounds/match.mp3\" preload=\"auto\" />\r\n       <audio ref={leaveSoundRef} src=\"/sounds/leave.mp3\" preload=\"auto\" />\r\n \r\n-      {/* === Video Section === */}\r\n-      <div className=\"md:flex-1 relative flex items-center justify-center p-3 sm:p-4 bg-black min-h-0 overflow-hidden\r\n-        h-[66vh] md:h-auto\">\r\n-        {!sessionStarted ? (\r\n-          <div className=\"text-white text-lg sm:text-xl font-semibold text-center px-4\">\r\n-            Click Start to begin searching\r\n-          </div>\r\n-        ) : loading ? (\r\n-          <FindingPartner />\r\n-        ) : (\r\n-          <>\r\n-            <RemoteVideo stream={remoteStream} />\r\n-            <div className=\"absolute top-4 right-4 w-28 h-28 sm:w-36 sm:h-36 md:w-40 md:h-40 rounded overflow-hidden border-2 border-white shadow-lg z-20\">\r\n-              {localStream ? (\r\n-                <LocalVideo stream={localStream} />\r\n-              ) : (\r\n-                <div className=\"text-white text-sm p-2\">Loading camera...</div>\r\n-              )}\r\n+      {/* 🌟 Main Container for Video + Chat + Control */}\r\n+      <div className=\"flex flex-col md:flex-row flex-1 overflow-hidden bg-neutral-100 dark:bg-neutral-900\">\r\n+        {/* === Video Section === */}\r\n+        <div className=\"md:flex-1 relative flex items-center justify-center p-3 sm:p-4 bg-black min-h-0 overflow-hidden h-[66vh] md:h-auto\">\r\n+          {!sessionStarted ? (\r\n+            <div className=\"text-white text-lg sm:text-xl font-semibold text-center px-4\">\r\n+              Click Start to begin searching\r\n             </div>\r\n-          </>\r\n-        )}\r\n-      </div>\r\n-\r\n-      {/* === Chat + Controls Panel === */}\r\n-      <div className=\"w-full md:w-[420px] flex flex-col min-h-0 border-t md:border-t-0 md:border-l border-neutral-300 dark:border-neutral-700 bg-white dark:bg-neutral-900\r\n-        h-[34vh] md:h-auto\">\r\n-        \r\n-        {/* === Chat Area === */}\r\n-        <div className=\"flex-1 min-h-0 overflow-hidden relative\">\r\n-          {roomId ? (\r\n-            <ChatBox\r\n-              socket={socket}\r\n-              roomId={roomId}\r\n-              soundOn={soundOn}\r\n-              partnerName={partnerInfo?.name}\r\n-              partnerAge={partnerInfo?.age}\r\n-            />\r\n+          ) : loading ? (\r\n+            <FindingPartner />\r\n           ) : (\r\n-            <IdleMessage lastAction={lastAction} />\r\n+            <>\r\n+              <RemoteVideo stream={remoteStream} />\r\n+              <div className=\"absolute top-4 right-4 w-28 h-28 sm:w-36 sm:h-36 md:w-40 md:h-40 rounded overflow-hidden border-2 border-white shadow-lg z-20\">\r\n+                {localStream ? (\r\n+                  <LocalVideo stream={localStream} />\r\n+                ) : (\r\n+                  <div className=\"text-white text-sm p-2\">Loading camera...</div>\r\n+                )}\r\n+              </div>\r\n+            </>\r\n           )}\r\n         </div>\r\n \r\n-        {/* === Control Bar === */}\r\n-        <ControlBar\r\n-          userInfo={userInfo}\r\n-          soundOn={soundOn}\r\n-          setSoundOn={setSoundOn}\r\n-          genderFilter={genderFilter}\r\n-          setGenderFilter={setGenderFilter}\r\n-          countryFilter={countryFilter}\r\n-          setCountryFilter={setCountryFilter}\r\n-          sessionStarted={sessionStarted}\r\n-          loading={loading}\r\n-          handleStart={handleStart}\r\n-          handleStop={handleStop}\r\n-          handleSkip={handleSkip}\r\n-        />\r\n+        {/* === Chat + Controls Panel === */}\r\n+        <div className=\"w-full md:w-[420px] flex flex-col min-h-0 border-t md:border-t-0 md:border-l border-neutral-300 dark:border-neutral-700 bg-white dark:bg-neutral-900 h-[34vh] md:h-auto\">\r\n+          {/* Chat Area */}\r\n+          <div className=\"flex-1 min-h-0 overflow-hidden relative\">\r\n+            {roomId ? (\r\n+              <ChatBox\r\n+                socket={socket}\r\n+                roomId={roomId}\r\n+                soundOn={soundOn}\r\n+                partnerName={partnerInfo?.name}\r\n+                partnerAge={partnerInfo?.age}\r\n+              />\r\n+            ) : (\r\n+              <IdleMessage lastAction={lastAction} />\r\n+            )}\r\n+          </div>\r\n+\r\n+          {/* Control Bar */}\r\n+          <ControlBar\r\n+            userInfo={userInfo}\r\n+            soundOn={soundOn}\r\n+            setSoundOn={setSoundOn}\r\n+            genderFilter={genderFilter}\r\n+            setGenderFilter={setGenderFilter}\r\n+            countryFilter={countryFilter}\r\n+            setCountryFilter={setCountryFilter}\r\n+            sessionStarted={sessionStarted}\r\n+            loading={loading}\r\n+            handleStart={handleStart}\r\n+            handleStop={handleStop}\r\n+            handleSkip={handleSkip}\r\n+          />\r\n+        </div>\r\n       </div>\r\n     </div>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1752687878574,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,69 +86,69 @@\n     setLastAction(\"skipped\");\r\n   };\r\n \r\n   return (\r\n-    <div className=\"flex flex-col h-[calc(100vh-56px)]\"> {/* height after sticky navbar */}\r\n+    <div className=\"flex flex-col md:flex-row h-[calc(100vh-56px)] bg-neutral-100 dark:bg-neutral-900 overflow-hidden\">\r\n       <audio ref={matchSoundRef} src=\"/sounds/match.mp3\" preload=\"auto\" />\r\n       <audio ref={leaveSoundRef} src=\"/sounds/leave.mp3\" preload=\"auto\" />\r\n \r\n-      {/* 🌟 Main Container for Video + Chat + Control */}\r\n-      <div className=\"flex flex-col md:flex-row flex-1 overflow-hidden bg-neutral-100 dark:bg-neutral-900\">\r\n-        {/* === Video Section === */}\r\n-        <div className=\"md:flex-1 relative flex items-center justify-center p-3 sm:p-4 bg-black min-h-0 overflow-hidden h-[66vh] md:h-auto\">\r\n-          {!sessionStarted ? (\r\n-            <div className=\"text-white text-lg sm:text-xl font-semibold text-center px-4\">\r\n-              Click Start to begin searching\r\n+      {/* === Video Section === */}\r\n+      <div className=\"md:flex-1 relative flex items-center justify-center p-3 sm:p-4 bg-black min-h-0 overflow-hidden\r\n+        h-[66vh] md:h-auto\">\r\n+        {!sessionStarted ? (\r\n+          <div className=\"text-white text-lg sm:text-xl font-semibold text-center px-4\">\r\n+            Click Start to begin searching\r\n+          </div>\r\n+        ) : loading ? (\r\n+          <FindingPartner />\r\n+        ) : (\r\n+          <>\r\n+            <RemoteVideo stream={remoteStream} />\r\n+            <div className=\"absolute top-4 right-4 w-28 h-28 sm:w-36 sm:h-36 md:w-40 md:h-40 rounded overflow-hidden border-2 border-white shadow-lg z-20\">\r\n+              {localStream ? (\r\n+                <LocalVideo stream={localStream} />\r\n+              ) : (\r\n+                <div className=\"text-white text-sm p-2\">Loading camera...</div>\r\n+              )}\r\n             </div>\r\n-          ) : loading ? (\r\n-            <FindingPartner />\r\n+          </>\r\n+        )}\r\n+      </div>\r\n+\r\n+      {/* === Chat + Controls Panel === */}\r\n+      <div className=\"w-full md:w-[420px] flex flex-col min-h-0 border-t md:border-t-0 md:border-l border-neutral-300 dark:border-neutral-700 bg-white dark:bg-neutral-900\r\n+        h-[34vh] md:h-auto\">\r\n+        \r\n+        {/* === Chat Area === */}\r\n+        <div className=\"flex-1 min-h-0 overflow-hidden relative\">\r\n+          {roomId ? (\r\n+            <ChatBox\r\n+              socket={socket}\r\n+              roomId={roomId}\r\n+              soundOn={soundOn}\r\n+              partnerName={partnerInfo?.name}\r\n+              partnerAge={partnerInfo?.age}\r\n+            />\r\n           ) : (\r\n-            <>\r\n-              <RemoteVideo stream={remoteStream} />\r\n-              <div className=\"absolute top-4 right-4 w-28 h-28 sm:w-36 sm:h-36 md:w-40 md:h-40 rounded overflow-hidden border-2 border-white shadow-lg z-20\">\r\n-                {localStream ? (\r\n-                  <LocalVideo stream={localStream} />\r\n-                ) : (\r\n-                  <div className=\"text-white text-sm p-2\">Loading camera...</div>\r\n-                )}\r\n-              </div>\r\n-            </>\r\n+            <IdleMessage lastAction={lastAction} />\r\n           )}\r\n         </div>\r\n \r\n-        {/* === Chat + Controls Panel === */}\r\n-        <div className=\"w-full md:w-[420px] flex flex-col min-h-0 border-t md:border-t-0 md:border-l border-neutral-300 dark:border-neutral-700 bg-white dark:bg-neutral-900 h-[34vh] md:h-auto\">\r\n-          {/* Chat Area */}\r\n-          <div className=\"flex-1 min-h-0 overflow-hidden relative\">\r\n-            {roomId ? (\r\n-              <ChatBox\r\n-                socket={socket}\r\n-                roomId={roomId}\r\n-                soundOn={soundOn}\r\n-                partnerName={partnerInfo?.name}\r\n-                partnerAge={partnerInfo?.age}\r\n-              />\r\n-            ) : (\r\n-              <IdleMessage lastAction={lastAction} />\r\n-            )}\r\n-          </div>\r\n-\r\n-          {/* Control Bar */}\r\n-          <ControlBar\r\n-            userInfo={userInfo}\r\n-            soundOn={soundOn}\r\n-            setSoundOn={setSoundOn}\r\n-            genderFilter={genderFilter}\r\n-            setGenderFilter={setGenderFilter}\r\n-            countryFilter={countryFilter}\r\n-            setCountryFilter={setCountryFilter}\r\n-            sessionStarted={sessionStarted}\r\n-            loading={loading}\r\n-            handleStart={handleStart}\r\n-            handleStop={handleStop}\r\n-            handleSkip={handleSkip}\r\n-          />\r\n-        </div>\r\n+        {/* === Control Bar === */}\r\n+        <ControlBar\r\n+          userInfo={userInfo}\r\n+          soundOn={soundOn}\r\n+          setSoundOn={setSoundOn}\r\n+          genderFilter={genderFilter}\r\n+          setGenderFilter={setGenderFilter}\r\n+          countryFilter={countryFilter}\r\n+          setCountryFilter={setCountryFilter}\r\n+          sessionStarted={sessionStarted}\r\n+          loading={loading}\r\n+          handleStart={handleStart}\r\n+          handleStop={handleStop}\r\n+          handleSkip={handleSkip}\r\n+        />\r\n       </div>\r\n     </div>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1752688043044,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,69 +86,71 @@\n     setLastAction(\"skipped\");\r\n   };\r\n \r\n   return (\r\n-    <div className=\"flex flex-col md:flex-row h-[calc(100vh-56px)] bg-neutral-100 dark:bg-neutral-900 overflow-hidden\">\r\n+    <div className=\"h-[calc(100vh-56px)]\"> {/* Covers full screen below navbar */}\r\n       <audio ref={matchSoundRef} src=\"/sounds/match.mp3\" preload=\"auto\" />\r\n       <audio ref={leaveSoundRef} src=\"/sounds/leave.mp3\" preload=\"auto\" />\r\n \r\n-      {/* === Video Section === */}\r\n-      <div className=\"md:flex-1 relative flex items-center justify-center p-3 sm:p-4 bg-black min-h-0 overflow-hidden\r\n-        h-[66vh] md:h-auto\">\r\n-        {!sessionStarted ? (\r\n-          <div className=\"text-white text-lg sm:text-xl font-semibold text-center px-4\">\r\n-            Click Start to begin searching\r\n-          </div>\r\n-        ) : loading ? (\r\n-          <FindingPartner />\r\n-        ) : (\r\n-          <>\r\n-            <RemoteVideo stream={remoteStream} />\r\n-            <div className=\"absolute top-4 right-4 w-28 h-28 sm:w-36 sm:h-36 md:w-40 md:h-40 rounded overflow-hidden border-2 border-white shadow-lg z-20\">\r\n-              {localStream ? (\r\n-                <LocalVideo stream={localStream} />\r\n-              ) : (\r\n-                <div className=\"text-white text-sm p-2\">Loading camera...</div>\r\n-              )}\r\n+      {/* === Main Container: Wraps both video container and chat+control container === */}\r\n+      <div className=\"flex flex-col md:flex-row w-full h-full overflow-hidden bg-neutral-100 dark:bg-neutral-900\">\r\n+        \r\n+        {/* 🎥 Video Container */}\r\n+        <div className=\"flex-1 flex items-center justify-center p-3 sm:p-4 bg-black relative overflow-hidden h-[66vh] md:h-full\">\r\n+          {!sessionStarted ? (\r\n+            <div className=\"text-white text-lg sm:text-xl font-semibold text-center px-4\">\r\n+              Click Start to begin searching\r\n             </div>\r\n-          </>\r\n-        )}\r\n-      </div>\r\n-\r\n-      {/* === Chat + Controls Panel === */}\r\n-      <div className=\"w-full md:w-[420px] flex flex-col min-h-0 border-t md:border-t-0 md:border-l border-neutral-300 dark:border-neutral-700 bg-white dark:bg-neutral-900\r\n-        h-[34vh] md:h-auto\">\r\n-        \r\n-        {/* === Chat Area === */}\r\n-        <div className=\"flex-1 min-h-0 overflow-hidden relative\">\r\n-          {roomId ? (\r\n-            <ChatBox\r\n-              socket={socket}\r\n-              roomId={roomId}\r\n-              soundOn={soundOn}\r\n-              partnerName={partnerInfo?.name}\r\n-              partnerAge={partnerInfo?.age}\r\n-            />\r\n+          ) : loading ? (\r\n+            <FindingPartner />\r\n           ) : (\r\n-            <IdleMessage lastAction={lastAction} />\r\n+            <>\r\n+              <RemoteVideo stream={remoteStream} />\r\n+              <div className=\"absolute top-4 right-4 w-28 h-28 sm:w-36 sm:h-36 md:w-40 md:h-40 rounded overflow-hidden border-2 border-white shadow-lg z-20\">\r\n+                {localStream ? (\r\n+                  <LocalVideo stream={localStream} />\r\n+                ) : (\r\n+                  <div className=\"text-white text-sm p-2\">Loading camera...</div>\r\n+                )}\r\n+              </div>\r\n+            </>\r\n           )}\r\n         </div>\r\n \r\n-        {/* === Control Bar === */}\r\n-        <ControlBar\r\n-          userInfo={userInfo}\r\n-          soundOn={soundOn}\r\n-          setSoundOn={setSoundOn}\r\n-          genderFilter={genderFilter}\r\n-          setGenderFilter={setGenderFilter}\r\n-          countryFilter={countryFilter}\r\n-          setCountryFilter={setCountryFilter}\r\n-          sessionStarted={sessionStarted}\r\n-          loading={loading}\r\n-          handleStart={handleStart}\r\n-          handleStop={handleStop}\r\n-          handleSkip={handleSkip}\r\n-        />\r\n+        {/* 💬 Chat + Controls Container */}\r\n+        <div className=\"w-full md:w-[420px] flex flex-col border-t md:border-t-0 md:border-l border-neutral-300 dark:border-neutral-700 bg-white dark:bg-neutral-900 h-[34vh] md:h-full\">\r\n+          \r\n+          {/* Chat Box */}\r\n+          <div className=\"flex-1 min-h-0 overflow-hidden relative\">\r\n+            {roomId ? (\r\n+              <ChatBox\r\n+                socket={socket}\r\n+                roomId={roomId}\r\n+                soundOn={soundOn}\r\n+                partnerName={partnerInfo?.name}\r\n+                partnerAge={partnerInfo?.age}\r\n+              />\r\n+            ) : (\r\n+              <IdleMessage lastAction={lastAction} />\r\n+            )}\r\n+          </div>\r\n+\r\n+          {/* Control Bar */}\r\n+          <ControlBar\r\n+            userInfo={userInfo}\r\n+            soundOn={soundOn}\r\n+            setSoundOn={setSoundOn}\r\n+            genderFilter={genderFilter}\r\n+            setGenderFilter={setGenderFilter}\r\n+            countryFilter={countryFilter}\r\n+            setCountryFilter={setCountryFilter}\r\n+            sessionStarted={sessionStarted}\r\n+            loading={loading}\r\n+            handleStart={handleStart}\r\n+            handleStop={handleStop}\r\n+            handleSkip={handleSkip}\r\n+          />\r\n+        </div>\r\n       </div>\r\n     </div>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1752688319550,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,9 +86,9 @@\n     setLastAction(\"skipped\");\r\n   };\r\n \r\n   return (\r\n-    <div className=\"h-[calc(100vh-56px)]\"> {/* Covers full screen below navbar */}\r\n+    <div className=\"h-screen mt-[56px]\">  {/* Covers full screen below navbar */}\r\n       <audio ref={matchSoundRef} src=\"/sounds/match.mp3\" preload=\"auto\" />\r\n       <audio ref={leaveSoundRef} src=\"/sounds/leave.mp3\" preload=\"auto\" />\r\n \r\n       {/* === Main Container: Wraps both video container and chat+control container === */}\r\n"
                },
                {
                    "date": 1752688473689,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,9 +86,9 @@\n     setLastAction(\"skipped\");\r\n   };\r\n \r\n   return (\r\n-    <div className=\"h-screen mt-[56px]\">  {/* Covers full screen below navbar */}\r\n+    <div className=\"h-screen mt-[1px]\">  {/* Covers full screen below navbar */}\r\n       <audio ref={matchSoundRef} src=\"/sounds/match.mp3\" preload=\"auto\" />\r\n       <audio ref={leaveSoundRef} src=\"/sounds/leave.mp3\" preload=\"auto\" />\r\n \r\n       {/* === Main Container: Wraps both video container and chat+control container === */}\r\n"
                },
                {
                    "date": 1752688595693,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,9 +86,9 @@\n     setLastAction(\"skipped\");\r\n   };\r\n \r\n   return (\r\n-    <div className=\"h-screen mt-[1px]\">  {/* Covers full screen below navbar */}\r\n+    <div className=\"h-[calc(100vh-56px)]\"> {/* Covers full screen below navbar */}\r\n       <audio ref={matchSoundRef} src=\"/sounds/match.mp3\" preload=\"auto\" />\r\n       <audio ref={leaveSoundRef} src=\"/sounds/leave.mp3\" preload=\"auto\" />\r\n \r\n       {/* === Main Container: Wraps both video container and chat+control container === */}\r\n"
                },
                {
                    "date": 1758894007341,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n   const [genderFilter, setGenderFilter] = useState(\"\");\r\n   const [countryFilter, setCountryFilter] = useState(\"\");\r\n \r\n   const socket = useSocket();\r\n-  const { localStream, remoteStream } = useWebRTC(roomId, isOfferer, sessionStarted);\r\n+  const { localStream, remoteStreams } = useWebRTC(roomId, isOfferer, sessionStarted);\r\n   const { matchSoundRef, leaveSoundRef, playSound } = useSoundPlayer(soundOn);\r\n \r\n   useChatHandlers({\r\n     socket,\r\n"
                },
                {
                    "date": 1758894024467,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n   const [genderFilter, setGenderFilter] = useState(\"\");\r\n   const [countryFilter, setCountryFilter] = useState(\"\");\r\n \r\n   const socket = useSocket();\r\n-  const { localStream, remoteStreams } = useWebRTC(roomId, isOfferer, sessionStarted);\r\n+  const { localStream, remoteStream } = useWebRTC(roomId, isOfferer, sessionStarted);\r\n   const { matchSoundRef, leaveSoundRef, playSound } = useSoundPlayer(soundOn);\r\n \r\n   useChatHandlers({\r\n     socket,\r\n"
                },
                {
                    "date": 1758894045688,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n   const [genderFilter, setGenderFilter] = useState(\"\");\r\n   const [countryFilter, setCountryFilter] = useState(\"\");\r\n \r\n   const socket = useSocket();\r\n-  const { localStream, remoteStream } = useWebRTC(roomId, isOfferer, sessionStarted);\r\n+  const { localStream, remoteStreams } = useWebRTC(roomId, isOfferer, sessionStarted);\r\n   const { matchSoundRef, leaveSoundRef, playSound } = useSoundPlayer(soundOn);\r\n \r\n   useChatHandlers({\r\n     socket,\r\n@@ -103,9 +103,12 @@\n           ) : loading ? (\r\n             <FindingPartner />\r\n           ) : (\r\n             <>\r\n-              <RemoteVideo stream={remoteStream} />\r\n+              {Object.entries(remoteStreams).map(([peerId, stream]) => (\r\n+  <RemoteVideo key={peerId} stream={stream} />\r\n+))}\r\n+\r\n               <div className=\"absolute top-4 right-4 w-28 h-28 sm:w-36 sm:h-36 md:w-40 md:h-40 rounded overflow-hidden border-2 border-white shadow-lg z-20\">\r\n                 {localStream ? (\r\n                   <LocalVideo stream={localStream} />\r\n                 ) : (\r\n"
                },
                {
                    "date": 1758894061306,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -104,10 +104,10 @@\n             <FindingPartner />\r\n           ) : (\r\n             <>\r\n               {Object.entries(remoteStreams).map(([peerId, stream]) => (\r\n-  <RemoteVideo key={peerId} stream={stream} />\r\n-))}\r\n+                 <RemoteVideo key={peerId} stream={stream} />\r\n+              ))}\r\n \r\n               <div className=\"absolute top-4 right-4 w-28 h-28 sm:w-36 sm:h-36 md:w-40 md:h-40 rounded overflow-hidden border-2 border-white shadow-lg z-20\">\r\n                 {localStream ? (\r\n                   <LocalVideo stream={localStream} />\r\n"
                },
                {
                    "date": 1758897472083,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n   const [genderFilter, setGenderFilter] = useState(\"\");\r\n   const [countryFilter, setCountryFilter] = useState(\"\");\r\n \r\n   const socket = useSocket();\r\n-  const { localStream, remoteStreams } = useWebRTC(roomId, isOfferer, sessionStarted);\r\n+  const { localStream, remoteStream } = useWebRTC(roomId, isOfferer, sessionStarted);\r\n   const { matchSoundRef, leaveSoundRef, playSound } = useSoundPlayer(soundOn);\r\n \r\n   useChatHandlers({\r\n     socket,\r\n@@ -103,12 +103,9 @@\n           ) : loading ? (\r\n             <FindingPartner />\r\n           ) : (\r\n             <>\r\n-              {Object.entries(remoteStreams).map(([peerId, stream]) => (\r\n-                 <RemoteVideo key={peerId} stream={stream} />\r\n-              ))}\r\n-\r\n+              <RemoteVideo stream={remoteStream} />\r\n               <div className=\"absolute top-4 right-4 w-28 h-28 sm:w-36 sm:h-36 md:w-40 md:h-40 rounded overflow-hidden border-2 border-white shadow-lg z-20\">\r\n                 {localStream ? (\r\n                   <LocalVideo stream={localStream} />\r\n                 ) : (\r\n"
                },
                {
                    "date": 1758995963850,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,28 +1,31 @@\n \"use client\";\r\n \r\n import React, { useEffect, useState } from \"react\";\r\n+import { useRouter } from \"next/navigation\";\r\n+import { getDatabase, ref, get } from \"firebase/database\";\r\n+import { database } from \"@/lib/firebaseConfig\"; // your Firebase config\r\n import useWebRTC from \"../hooks/useWebRTC\";\r\n import useSocket from \"../hooks/useSocket\";\r\n import LocalVideo from \"../../../components/video/LocalVideo\";\r\n import RemoteVideo from \"../../../components/video/RemoteVideo\";\r\n import ChatBox from \"../../../components/chat/ChatBox\";\r\n import FindingPartner from \"./FindingPartner\";\r\n+import IdleMessage from \"./IdleMessage\";\r\n+import ControlBar from \"./ControlBar\";\r\n import { useSoundPlayer } from \"../hooks/useSoundPlayer\";\r\n import { useChatHandlers } from \"../hooks/useChatHandlers\";\r\n-import IdleMessage from \"./IdleMessage\";\r\n-import ControlBar from \"./ControlBar\";\r\n \r\n export default function AnonymousChatRoom() {\r\n+  const router = useRouter();\r\n+  const [userInfo, setUserInfo] = useState<any>(null);\r\n+  const [partnerInfo, setPartnerInfo] = useState<any>(null);\r\n   const [roomId, setRoomId] = useState<string | null>(null);\r\n   const [isOfferer, setIsOfferer] = useState<boolean | null>(null);\r\n   const [loading, setLoading] = useState(false);\r\n   const [sessionStarted, setSessionStarted] = useState(false);\r\n   const [lastAction, setLastAction] = useState<\"skipped\" | \"left\" | null>(null);\r\n   const [soundOn, setSoundOn] = useState(true);\r\n-\r\n-  const [userInfo, setUserInfo] = useState<any>({});\r\n-  const [partnerInfo, setPartnerInfo] = useState<any>(null);\r\n   const [genderFilter, setGenderFilter] = useState(\"\");\r\n   const [countryFilter, setCountryFilter] = useState(\"\");\r\n \r\n   const socket = useSocket();\r\n@@ -39,15 +42,37 @@\n     setSessionStarted,\r\n     setLastAction,\r\n   });\r\n \r\n+  // Load user info from Firebase on mount\r\n   useEffect(() => {\r\n-    const stored = localStorage.getItem(\"user-info\");\r\n-    if (stored) {\r\n-      setUserInfo(JSON.parse(stored));\r\n-    }\r\n-  }, []);\r\n+    const fetchUserInfo = async () => {\r\n+      const storedUid = localStorage.getItem(\"userId\");\r\n+      if (!storedUid) {\r\n+        router.replace(\"/auth\");\r\n+        return;\r\n+      }\r\n \r\n+      try {\r\n+        const userRef = ref(database, `users/${storedUid}`);\r\n+        const snapshot = await get(userRef);\r\n+        if (!snapshot.exists()) {\r\n+          router.replace(\"/auth\");\r\n+          return;\r\n+        }\r\n+        const data = snapshot.val();\r\n+        setUserInfo(data);\r\n+        localStorage.setItem(\"user-info\", JSON.stringify(data));\r\n+      } catch (err) {\r\n+        console.error(\"Error fetching user info:\", err);\r\n+        router.replace(\"/auth\");\r\n+      }\r\n+    };\r\n+\r\n+    fetchUserInfo();\r\n+  }, [router]);\r\n+\r\n+  // Cleanup on unmount\r\n   useEffect(() => {\r\n     return () => {\r\n       if (socket && roomId) {\r\n         socket.emit(\"leave-room\", roomId);\r\n@@ -55,9 +80,9 @@\n     };\r\n   }, [socket, roomId]);\r\n \r\n   const handleStart = () => {\r\n-    if (!sessionStarted) {\r\n+    if (!sessionStarted && userInfo) {\r\n       setLoading(true);\r\n       setSessionStarted(true);\r\n       socket?.emit(\"start-looking\", {\r\n         name: userInfo.name,\r\n@@ -70,11 +95,9 @@\n     }\r\n   };\r\n \r\n   const handleStop = () => {\r\n-    if (roomId) {\r\n-      socket?.emit(\"leave-room\", roomId);\r\n-    }\r\n+    if (roomId) socket?.emit(\"leave-room\", roomId);\r\n     setRoomId(null);\r\n     setIsOfferer(null);\r\n     setSessionStarted(false);\r\n     setLoading(false);\r\n@@ -85,17 +108,23 @@\n     handleStart();\r\n     setLastAction(\"skipped\");\r\n   };\r\n \r\n+  if (!userInfo) {\r\n+    return (\r\n+      <div className=\"min-h-screen flex items-center justify-center\">\r\n+        Loading user info...\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n   return (\r\n-    <div className=\"h-[calc(100vh-56px)]\"> {/* Covers full screen below navbar */}\r\n+    <div className=\"h-[calc(100vh-56px)]\">\r\n       <audio ref={matchSoundRef} src=\"/sounds/match.mp3\" preload=\"auto\" />\r\n       <audio ref={leaveSoundRef} src=\"/sounds/leave.mp3\" preload=\"auto\" />\r\n \r\n-      {/* === Main Container: Wraps both video container and chat+control container === */}\r\n       <div className=\"flex flex-col md:flex-row w-full h-full overflow-hidden bg-neutral-100 dark:bg-neutral-900\">\r\n-        \r\n-        {/* 🎥 Video Container */}\r\n+        {/* Video Section */}\r\n         <div className=\"flex-1 flex items-center justify-center p-3 sm:p-4 bg-black relative overflow-hidden h-[66vh] md:h-full\">\r\n           {!sessionStarted ? (\r\n             <div className=\"text-white text-lg sm:text-xl font-semibold text-center px-4\">\r\n               Click Start to begin searching\r\n@@ -105,22 +134,16 @@\n           ) : (\r\n             <>\r\n               <RemoteVideo stream={remoteStream} />\r\n               <div className=\"absolute top-4 right-4 w-28 h-28 sm:w-36 sm:h-36 md:w-40 md:h-40 rounded overflow-hidden border-2 border-white shadow-lg z-20\">\r\n-                {localStream ? (\r\n-                  <LocalVideo stream={localStream} />\r\n-                ) : (\r\n-                  <div className=\"text-white text-sm p-2\">Loading camera...</div>\r\n-                )}\r\n+                {localStream ? <LocalVideo stream={localStream} /> : <div className=\"text-white text-sm p-2\">Loading camera...</div>}\r\n               </div>\r\n             </>\r\n           )}\r\n         </div>\r\n \r\n-        {/* 💬 Chat + Controls Container */}\r\n+        {/* Chat Section */}\r\n         <div className=\"w-full md:w-[420px] flex flex-col border-t md:border-t-0 md:border-l border-neutral-300 dark:border-neutral-700 bg-white dark:bg-neutral-900 h-[34vh] md:h-full\">\r\n-          \r\n-          {/* Chat Box */}\r\n           <div className=\"flex-1 min-h-0 overflow-hidden relative\">\r\n             {roomId ? (\r\n               <ChatBox\r\n                 socket={socket}\r\n@@ -133,9 +156,8 @@\n               <IdleMessage lastAction={lastAction} />\r\n             )}\r\n           </div>\r\n \r\n-          {/* Control Bar */}\r\n           <ControlBar\r\n             userInfo={userInfo}\r\n             soundOn={soundOn}\r\n             setSoundOn={setSoundOn}\r\n"
                },
                {
                    "date": 1758996230731,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,15 @@\n   const [genderFilter, setGenderFilter] = useState(\"\");\r\n   const [countryFilter, setCountryFilter] = useState(\"\");\r\n \r\n   const socket = useSocket();\r\n-  const { localStream, remoteStream } = useWebRTC(roomId, isOfferer, sessionStarted);\r\n+  const { localStream, remoteStream } = useWebRTC({\r\n+  roomId,\r\n+  isOfferer,\r\n+  isStarted: sessionStarted,\r\n+  socket,\r\n+});\r\n+\r\n   const { matchSoundRef, leaveSoundRef, playSound } = useSoundPlayer(soundOn);\r\n \r\n   useChatHandlers({\r\n     socket,\r\n"
                },
                {
                    "date": 1758996768121,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,10 @@\n \"use client\";\r\n \r\n import React, { useEffect, useState } from \"react\";\r\n import { useRouter } from \"next/navigation\";\r\n-import { getDatabase, ref, get } from \"firebase/database\";\r\n-import { database } from \"@/lib/firebaseConfig\"; // your Firebase config\r\n+import { ref, get } from \"firebase/database\";\r\n+import { database } from \"@/lib/firebaseConfig\";\r\n import useWebRTC from \"../hooks/useWebRTC\";\r\n import useSocket from \"../hooks/useSocket\";\r\n import LocalVideo from \"../../../components/video/LocalVideo\";\r\n import RemoteVideo from \"../../../components/video/RemoteVideo\";\r\n@@ -14,12 +14,21 @@\n import ControlBar from \"./ControlBar\";\r\n import { useSoundPlayer } from \"../hooks/useSoundPlayer\";\r\n import { useChatHandlers } from \"../hooks/useChatHandlers\";\r\n \r\n+interface UserInfo {\r\n+  uid: string;\r\n+  name: string;\r\n+  age: string;\r\n+  gender: string;\r\n+  country: string;\r\n+  email?: string;\r\n+}\r\n+\r\n export default function AnonymousChatRoom() {\r\n   const router = useRouter();\r\n-  const [userInfo, setUserInfo] = useState<any>(null);\r\n-  const [partnerInfo, setPartnerInfo] = useState<any>(null);\r\n+  const [userInfo, setUserInfo] = useState<UserInfo | null>(null);\r\n+  const [partnerInfo, setPartnerInfo] = useState<UserInfo | null>(null);\r\n   const [roomId, setRoomId] = useState<string | null>(null);\r\n   const [isOfferer, setIsOfferer] = useState<boolean | null>(null);\r\n   const [loading, setLoading] = useState(false);\r\n   const [sessionStarted, setSessionStarted] = useState(false);\r\n@@ -29,13 +38,13 @@\n   const [countryFilter, setCountryFilter] = useState(\"\");\r\n \r\n   const socket = useSocket();\r\n   const { localStream, remoteStream } = useWebRTC({\r\n-  roomId,\r\n-  isOfferer,\r\n-  isStarted: sessionStarted,\r\n-  socket,\r\n-});\r\n+    roomId,\r\n+    isOfferer,\r\n+    isStarted: sessionStarted,\r\n+    socket,\r\n+  });\r\n \r\n   const { matchSoundRef, leaveSoundRef, playSound } = useSoundPlayer(soundOn);\r\n \r\n   useChatHandlers({\r\n@@ -65,9 +74,16 @@\n           router.replace(\"/auth\");\r\n           return;\r\n         }\r\n         const data = snapshot.val();\r\n-        setUserInfo(data);\r\n+        setUserInfo({\r\n+          uid: storedUid,\r\n+          name: data.name || \"Anonymous\",\r\n+          age: data.age || \"\",\r\n+          gender: data.gender || \"\",\r\n+          country: data.country || \"\",\r\n+          email: data.email || \"\",\r\n+        });\r\n         localStorage.setItem(\"user-info\", JSON.stringify(data));\r\n       } catch (err) {\r\n         console.error(\"Error fetching user info:\", err);\r\n         router.replace(\"/auth\");\r\n@@ -116,10 +132,12 @@\n   };\r\n \r\n   if (!userInfo) {\r\n     return (\r\n-      <div className=\"min-h-screen flex items-center justify-center\">\r\n-        Loading user info...\r\n+      <div className=\"min-h-screen flex items-center justify-center bg-neutral-100 dark:bg-neutral-900\">\r\n+        <p className=\"text-lg text-neutral-700 dark:text-neutral-300\">\r\n+          Loading user info...\r\n+        </p>\r\n       </div>\r\n     );\r\n   }\r\n \r\n@@ -140,9 +158,13 @@\n           ) : (\r\n             <>\r\n               <RemoteVideo stream={remoteStream} />\r\n               <div className=\"absolute top-4 right-4 w-28 h-28 sm:w-36 sm:h-36 md:w-40 md:h-40 rounded overflow-hidden border-2 border-white shadow-lg z-20\">\r\n-                {localStream ? <LocalVideo stream={localStream} /> : <div className=\"text-white text-sm p-2\">Loading camera...</div>}\r\n+                {localStream ? (\r\n+                  <LocalVideo stream={localStream} />\r\n+                ) : (\r\n+                  <div className=\"text-white text-sm p-2\">Loading camera...</div>\r\n+                )}\r\n               </div>\r\n             </>\r\n           )}\r\n         </div>\r\n"
                },
                {
                    "date": 1758996928601,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,9 +57,9 @@\n     setSessionStarted,\r\n     setLastAction,\r\n   });\r\n \r\n-  // Load user info from Firebase on mount\r\n+  // Load user info from Firebase\r\n   useEffect(() => {\r\n     const fetchUserInfo = async () => {\r\n       const storedUid = localStorage.getItem(\"userId\");\r\n       if (!storedUid) {\r\n@@ -92,9 +92,9 @@\n \r\n     fetchUserInfo();\r\n   }, [router]);\r\n \r\n-  // Cleanup on unmount\r\n+  // Cleanup socket on unmount\r\n   useEffect(() => {\r\n     return () => {\r\n       if (socket && roomId) {\r\n         socket.emit(\"leave-room\", roomId);\r\n"
                },
                {
                    "date": 1758997111211,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,10 @@\n import ControlBar from \"./ControlBar\";\r\n import { useSoundPlayer } from \"../hooks/useSoundPlayer\";\r\n import { useChatHandlers } from \"../hooks/useChatHandlers\";\r\n \r\n-interface UserInfo {\r\n+// Shared type for both user and partner\r\n+export interface UserInfo {\r\n   uid: string;\r\n   name: string;\r\n   age: string;\r\n   gender: string;\r\n@@ -25,8 +26,9 @@\n }\r\n \r\n export default function AnonymousChatRoom() {\r\n   const router = useRouter();\r\n+\r\n   const [userInfo, setUserInfo] = useState<UserInfo | null>(null);\r\n   const [partnerInfo, setPartnerInfo] = useState<UserInfo | null>(null);\r\n   const [roomId, setRoomId] = useState<string | null>(null);\r\n   const [isOfferer, setIsOfferer] = useState<boolean | null>(null);\r\n@@ -46,8 +48,9 @@\n   });\r\n \r\n   const { matchSoundRef, leaveSoundRef, playSound } = useSoundPlayer(soundOn);\r\n \r\n+  // Attach chat handlers\r\n   useChatHandlers({\r\n     socket,\r\n     playSound,\r\n     setRoomId,\r\n@@ -74,17 +77,18 @@\n           router.replace(\"/auth\");\r\n           return;\r\n         }\r\n         const data = snapshot.val();\r\n-        setUserInfo({\r\n+        const user: UserInfo = {\r\n           uid: storedUid,\r\n           name: data.name || \"Anonymous\",\r\n           age: data.age || \"\",\r\n           gender: data.gender || \"\",\r\n           country: data.country || \"\",\r\n           email: data.email || \"\",\r\n-        });\r\n-        localStorage.setItem(\"user-info\", JSON.stringify(data));\r\n+        };\r\n+        setUserInfo(user);\r\n+        localStorage.setItem(\"user-info\", JSON.stringify(user));\r\n       } catch (err) {\r\n         console.error(\"Error fetching user info:\", err);\r\n         router.replace(\"/auth\");\r\n       }\r\n@@ -95,14 +99,13 @@\n \r\n   // Cleanup socket on unmount\r\n   useEffect(() => {\r\n     return () => {\r\n-      if (socket && roomId) {\r\n-        socket.emit(\"leave-room\", roomId);\r\n-      }\r\n+      if (socket && roomId) socket.emit(\"leave-room\", roomId);\r\n     };\r\n   }, [socket, roomId]);\r\n \r\n+  // Chat controls\r\n   const handleStart = () => {\r\n     if (!sessionStarted && userInfo) {\r\n       setLoading(true);\r\n       setSessionStarted(true);\r\n"
                },
                {
                    "date": 1759331561535,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,201 @@\n+\"use client\";\r\n+\r\n+import React, { useEffect, useState } from \"react\";\r\n+import { useRouter } from \"next/navigation\";\r\n+import { ref, get } from \"firebase/database\";\r\n+import { database } from \"@/lib/firebaseConfig\";\r\n+import useWebRTC from \"../hooks/useWebRTC\";\r\n+import useSocket from \"../hooks/useSocket\";\r\n+import LocalVideo from \"../../../components/video/LocalVideo\";\r\n+import RemoteVideo from \"../../../components/video/RemoteVideo\";\r\n+import ChatBox from \"../../../components/chat/ChatBox\";\r\n+import FindingPartner from \"./FindingPartner\";\r\n+import IdleMessage from \"./IdleMessage\";\r\n+import ControlBar from \"./ControlBar\";\r\n+import { useSoundPlayer } from \"../hooks/useSoundPlayer\";\r\n+import { useChatHandlers } from \"../hooks/useChatHandlers\";\r\n+\r\n+// Shared type for both user and partner\r\n+import { UserInfo } from \"@/types/user\";\r\n+export default function AnonymousChatRoom() {\r\n+  const router = useRouter();\r\n+\r\n+  const [userInfo, setUserInfo] = useState<UserInfo | null>(null);\r\n+  const [partnerInfo, setPartnerInfo] = useState<UserInfo | null>(null);\r\n+  const [roomId, setRoomId] = useState<string | null>(null);\r\n+  const [isOfferer, setIsOfferer] = useState<boolean | null>(null);\r\n+  const [loading, setLoading] = useState(false);\r\n+  const [sessionStarted, setSessionStarted] = useState(false);\r\n+  const [lastAction, setLastAction] = useState<\"skipped\" | \"left\" | null>(null);\r\n+  const [soundOn, setSoundOn] = useState(true);\r\n+  const [genderFilter, setGenderFilter] = useState(\"\");\r\n+  const [countryFilter, setCountryFilter] = useState(\"\");\r\n+\r\n+  const socket = useSocket();\r\n+  const { localStream, remoteStream } = useWebRTC({\r\n+    roomId,\r\n+    isOfferer,\r\n+    isStarted: sessionStarted,\r\n+    socket,\r\n+  });\r\n+\r\n+  const { matchSoundRef, leaveSoundRef, playSound } = useSoundPlayer(soundOn);\r\n+\r\n+  // Attach chat handlers\r\n+  useChatHandlers({\r\n+    socket,\r\n+    playSound,\r\n+    setRoomId,\r\n+    setIsOfferer,\r\n+    setPartnerInfo,\r\n+    setLoading,\r\n+    setSessionStarted,\r\n+    setLastAction,\r\n+  });\r\n+\r\n+  // Load user info from Firebase\r\n+  useEffect(() => {\r\n+    const fetchUserInfo = async () => {\r\n+      const storedUid = localStorage.getItem(\"userId\");\r\n+      if (!storedUid) {\r\n+        router.replace(\"/auth\");\r\n+        return;\r\n+      }\r\n+\r\n+      try {\r\n+        const userRef = ref(database, `users/${storedUid}`);\r\n+        const snapshot = await get(userRef);\r\n+        if (!snapshot.exists()) {\r\n+          router.replace(\"/auth\");\r\n+          return;\r\n+        }\r\n+        const data = snapshot.val();\r\n+        const user: UserInfo = {\r\n+          uid: storedUid,\r\n+          name: data.name || \"Anonymous\",\r\n+          age: data.age || \"\",\r\n+          gender: data.gender || \"\",\r\n+          country: data.country || \"\",\r\n+          email: data.email || \"\",\r\n+        };\r\n+        setUserInfo(user);\r\n+        localStorage.setItem(\"user-info\", JSON.stringify(user));\r\n+      } catch (err) {\r\n+        console.error(\"Error fetching user info:\", err);\r\n+        router.replace(\"/auth\");\r\n+      }\r\n+    };\r\n+\r\n+    fetchUserInfo();\r\n+  }, [router]);\r\n+\r\n+  // Cleanup socket on unmount\r\n+  useEffect(() => {\r\n+    return () => {\r\n+      if (socket && roomId) socket.emit(\"leave-room\", roomId);\r\n+    };\r\n+  }, [socket, roomId]);\r\n+\r\n+  // Chat controls\r\n+  const handleStart = () => {\r\n+    if (!sessionStarted && userInfo) {\r\n+      setLoading(true);\r\n+      setSessionStarted(true);\r\n+      socket?.emit(\"start-looking\", {\r\n+        name: userInfo.name,\r\n+        age: userInfo.age,\r\n+        gender: userInfo.gender,\r\n+        country: userInfo.country,\r\n+        filterGender: genderFilter,\r\n+        filterCountry: countryFilter,\r\n+      });\r\n+    }\r\n+  };\r\n+\r\n+  const handleStop = () => {\r\n+    if (roomId) socket?.emit(\"leave-room\", roomId);\r\n+    setRoomId(null);\r\n+    setIsOfferer(null);\r\n+    setSessionStarted(false);\r\n+    setLoading(false);\r\n+  };\r\n+\r\n+  const handleSkip = () => {\r\n+    handleStop();\r\n+    handleStart();\r\n+    setLastAction(\"skipped\");\r\n+  };\r\n+\r\n+  if (!userInfo) {\r\n+    return (\r\n+      <div className=\"min-h-screen flex items-center justify-center bg-neutral-100 dark:bg-neutral-900\">\r\n+        <p className=\"text-lg text-neutral-700 dark:text-neutral-300\">\r\n+          Loading user info...\r\n+        </p>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"h-[calc(100vh-56px)]\">\r\n+      <audio ref={matchSoundRef} src=\"/sounds/match.mp3\" preload=\"auto\" />\r\n+      <audio ref={leaveSoundRef} src=\"/sounds/leave.mp3\" preload=\"auto\" />\r\n+\r\n+      <div className=\"flex flex-col md:flex-row w-full h-full overflow-hidden bg-neutral-100 dark:bg-neutral-900\">\r\n+        {/* Video Section */}\r\n+        <div className=\"flex-1 flex items-center justify-center p-3 sm:p-4 bg-black relative overflow-hidden h-[66vh] md:h-full\">\r\n+          {!sessionStarted ? (\r\n+            <div className=\"text-white text-lg sm:text-xl font-semibold text-center px-4\">\r\n+              Click Start to begin searching\r\n+            </div>\r\n+          ) : loading ? (\r\n+            <FindingPartner />\r\n+          ) : (\r\n+            <>\r\n+              <RemoteVideo stream={remoteStream} />\r\n+              <div className=\"absolute top-4 right-4 w-28 h-28 sm:w-36 sm:h-36 md:w-40 md:h-40 rounded overflow-hidden border-2 border-white shadow-lg z-20\">\r\n+                {localStream ? (\r\n+                  <LocalVideo stream={localStream} />\r\n+                ) : (\r\n+                  <div className=\"text-white text-sm p-2\">Loading camera...</div>\r\n+                )}\r\n+              </div>\r\n+            </>\r\n+          )}\r\n+        </div>\r\n+\r\n+        {/* Chat Section */}\r\n+        <div className=\"w-full md:w-[420px] flex flex-col border-t md:border-t-0 md:border-l border-neutral-300 dark:border-neutral-700 bg-white dark:bg-neutral-900 h-[34vh] md:h-full\">\r\n+          <div className=\"flex-1 min-h-0 overflow-hidden relative\">\r\n+            {roomId ? (\r\n+              <ChatBox\r\n+                socket={socket}\r\n+                roomId={roomId}\r\n+                soundOn={soundOn}\r\n+                partnerName={partnerInfo?.name}\r\n+                partnerAge={partnerInfo?.age}\r\n+              />\r\n+            ) : (\r\n+              <IdleMessage lastAction={lastAction} />\r\n+            )}\r\n+          </div>\r\n+\r\n+          <ControlBar\r\n+            userInfo={userInfo}\r\n+            soundOn={soundOn}\r\n+            setSoundOn={setSoundOn}\r\n+            genderFilter={genderFilter}\r\n+            setGenderFilter={setGenderFilter}\r\n+            countryFilter={countryFilter}\r\n+            setCountryFilter={setCountryFilter}\r\n+            sessionStarted={sessionStarted}\r\n+            loading={loading}\r\n+            handleStart={handleStart}\r\n+            handleStop={handleStop}\r\n+            handleSkip={handleSkip}\r\n+          />\r\n+        </div>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1759339988663,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,13 +13,14 @@\n import IdleMessage from \"./IdleMessage\";\r\n import ControlBar from \"./ControlBar\";\r\n import { useSoundPlayer } from \"../hooks/useSoundPlayer\";\r\n import { useChatHandlers } from \"../hooks/useChatHandlers\";\r\n+import { UserInfo } from \"@/types/user\";\r\n+import { useAuth } from \"../../../src/app/auth/authContext\";\r\n \r\n-// Shared type for both user and partner\r\n-import { UserInfo } from \"@/types/user\";\r\n export default function AnonymousChatRoom() {\r\n   const router = useRouter();\r\n+  const { userId, loading: authLoading } = useAuth();\r\n \r\n   const [userInfo, setUserInfo] = useState<UserInfo | null>(null);\r\n   const [partnerInfo, setPartnerInfo] = useState<UserInfo | null>(null);\r\n   const [roomId, setRoomId] = useState<string | null>(null);\r\n@@ -52,43 +53,46 @@\n     setSessionStarted,\r\n     setLastAction,\r\n   });\r\n \r\n-  // Load user info from Firebase\r\n+  // Redirect to login if not authenticated\r\n   useEffect(() => {\r\n+    if (!authLoading && !userId) {\r\n+      router.replace(\"/auth\");\r\n+    }\r\n+  }, [authLoading, userId, router]);\r\n+\r\n+  // Fetch user info from Firebase\r\n+  useEffect(() => {\r\n+    if (!userId) return;\r\n+\r\n     const fetchUserInfo = async () => {\r\n-      const storedUid = localStorage.getItem(\"userId\");\r\n-      if (!storedUid) {\r\n-        router.replace(\"/auth\");\r\n-        return;\r\n-      }\r\n-\r\n       try {\r\n-        const userRef = ref(database, `users/${storedUid}`);\r\n+        const userRef = ref(database, `users/${userId}`);\r\n         const snapshot = await get(userRef);\r\n         if (!snapshot.exists()) {\r\n           router.replace(\"/auth\");\r\n           return;\r\n         }\r\n+\r\n         const data = snapshot.val();\r\n         const user: UserInfo = {\r\n-          uid: storedUid,\r\n+          uid: userId,\r\n           name: data.name || \"Anonymous\",\r\n           age: data.age || \"\",\r\n           gender: data.gender || \"\",\r\n           country: data.country || \"\",\r\n           email: data.email || \"\",\r\n         };\r\n         setUserInfo(user);\r\n-        localStorage.setItem(\"user-info\", JSON.stringify(user));\r\n       } catch (err) {\r\n         console.error(\"Error fetching user info:\", err);\r\n         router.replace(\"/auth\");\r\n       }\r\n     };\r\n \r\n     fetchUserInfo();\r\n-  }, [router]);\r\n+  }, [userId, router]);\r\n \r\n   // Cleanup socket on unmount\r\n   useEffect(() => {\r\n     return () => {\r\n@@ -125,9 +129,9 @@\n     handleStart();\r\n     setLastAction(\"skipped\");\r\n   };\r\n \r\n-  if (!userInfo) {\r\n+  if (authLoading || !userInfo) {\r\n     return (\r\n       <div className=\"min-h-screen flex items-center justify-center bg-neutral-100 dark:bg-neutral-900\">\r\n         <p className=\"text-lg text-neutral-700 dark:text-neutral-300\">\r\n           Loading user info...\r\n"
                },
                {
                    "date": 1759344987573,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -170,21 +170,24 @@\n \r\n         {/* Chat Section */}\r\n         <div className=\"w-full md:w-[420px] flex flex-col border-t md:border-t-0 md:border-l border-neutral-300 dark:border-neutral-700 bg-white dark:bg-neutral-900 h-[34vh] md:h-full\">\r\n           <div className=\"flex-1 min-h-0 overflow-hidden relative\">\r\n-            {roomId ? (\r\n-              <ChatBox\r\n-                socket={socket}\r\n-                roomId={roomId}\r\n-                soundOn={soundOn}\r\n-                partnerName={partnerInfo?.name}\r\n-                partnerAge={partnerInfo?.age}\r\n-              />\r\n-            ) : (\r\n-              <IdleMessage lastAction={lastAction} />\r\n-            )}\r\n-          </div>\r\n+  {roomId ? (\r\n+    <ChatBox\r\n+      socket={socket}\r\n+      roomId={roomId}\r\n+      userId={userId} // make sure userId is passed from AnonymousChatRoom state\r\n+      soundOn={soundOn}\r\n+      partnerName={partnerInfo?.name || \"Stranger\"}\r\n+      partnerAge={partnerInfo?.age}\r\n+      partnerCountry={partnerInfo?.country}\r\n+    />\r\n+  ) : (\r\n+    <IdleMessage lastAction={lastAction} />\r\n+  )}\r\n+</div>\r\n \r\n+\r\n           <ControlBar\r\n             userInfo={userInfo}\r\n             soundOn={soundOn}\r\n             setSoundOn={setSoundOn}\r\n"
                },
                {
                    "date": 1759345084794,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,10 +18,11 @@\n import { useAuth } from \"../../../src/app/auth/authContext\";\r\n \r\n export default function AnonymousChatRoom() {\r\n   const router = useRouter();\r\n-  const { userId, loading: authLoading } = useAuth();\r\n+  const { userId: authUserId, loading: authLoading } = useAuth();\r\n \r\n+  const [userId, setUserId] = useState<string | null>(null);\r\n   const [userInfo, setUserInfo] = useState<UserInfo | null>(null);\r\n   const [partnerInfo, setPartnerInfo] = useState<UserInfo | null>(null);\r\n   const [roomId, setRoomId] = useState<string | null>(null);\r\n   const [isOfferer, setIsOfferer] = useState<boolean | null>(null);\r\n@@ -41,9 +42,16 @@\n   });\r\n \r\n   const { matchSoundRef, leaveSoundRef, playSound } = useSoundPlayer(soundOn);\r\n \r\n-  // Attach chat handlers\r\n+  // Ensure userId exists (localStorage fallback)\r\n+  useEffect(() => {\r\n+    const id = authUserId || localStorage.getItem(\"userId\") || crypto.randomUUID();\r\n+    localStorage.setItem(\"userId\", id);\r\n+    setUserId(id);\r\n+  }, [authUserId]);\r\n+\r\n+  // Attach chat handlers for socket\r\n   useChatHandlers({\r\n     socket,\r\n     playSound,\r\n     setRoomId,\r\n@@ -53,14 +61,12 @@\n     setSessionStarted,\r\n     setLastAction,\r\n   });\r\n \r\n-  // Redirect to login if not authenticated\r\n+  // Redirect if unauthenticated\r\n   useEffect(() => {\r\n-    if (!authLoading && !userId) {\r\n-      router.replace(\"/auth\");\r\n-    }\r\n-  }, [authLoading, userId, router]);\r\n+    if (!authLoading && !authUserId) router.replace(\"/auth\");\r\n+  }, [authLoading, authUserId, router]);\r\n \r\n   // Fetch user info from Firebase\r\n   useEffect(() => {\r\n     if (!userId) return;\r\n@@ -74,17 +80,16 @@\n           return;\r\n         }\r\n \r\n         const data = snapshot.val();\r\n-        const user: UserInfo = {\r\n+        setUserInfo({\r\n           uid: userId,\r\n           name: data.name || \"Anonymous\",\r\n           age: data.age || \"\",\r\n           gender: data.gender || \"\",\r\n           country: data.country || \"\",\r\n           email: data.email || \"\",\r\n-        };\r\n-        setUserInfo(user);\r\n+        });\r\n       } catch (err) {\r\n         console.error(\"Error fetching user info:\", err);\r\n         router.replace(\"/auth\");\r\n       }\r\n@@ -129,9 +134,9 @@\n     handleStart();\r\n     setLastAction(\"skipped\");\r\n   };\r\n \r\n-  if (authLoading || !userInfo) {\r\n+  if (authLoading || !userInfo || !userId) {\r\n     return (\r\n       <div className=\"min-h-screen flex items-center justify-center bg-neutral-100 dark:bg-neutral-900\">\r\n         <p className=\"text-lg text-neutral-700 dark:text-neutral-300\">\r\n           Loading user info...\r\n@@ -170,227 +175,17 @@\n \r\n         {/* Chat Section */}\r\n         <div className=\"w-full md:w-[420px] flex flex-col border-t md:border-t-0 md:border-l border-neutral-300 dark:border-neutral-700 bg-white dark:bg-neutral-900 h-[34vh] md:h-full\">\r\n           <div className=\"flex-1 min-h-0 overflow-hidden relative\">\r\n-  {roomId ? (\r\n-    <ChatBox\r\n-      socket={socket}\r\n-      roomId={roomId}\r\n-      userId={userId} // make sure userId is passed from AnonymousChatRoom state\r\n-      soundOn={soundOn}\r\n-      partnerName={partnerInfo?.name || \"Stranger\"}\r\n-      partnerAge={partnerInfo?.age}\r\n-      partnerCountry={partnerInfo?.country}\r\n-    />\r\n-  ) : (\r\n-    <IdleMessage lastAction={lastAction} />\r\n-  )}\r\n-</div>\r\n-\r\n-\r\n-          <ControlBar\r\n-            userInfo={userInfo}\r\n-            soundOn={soundOn}\r\n-            setSoundOn={setSoundOn}\r\n-            genderFilter={genderFilter}\r\n-            setGenderFilter={setGenderFilter}\r\n-            countryFilter={countryFilter}\r\n-            setCountryFilter={setCountryFilter}\r\n-            sessionStarted={sessionStarted}\r\n-            loading={loading}\r\n-            handleStart={handleStart}\r\n-            handleStop={handleStop}\r\n-            handleSkip={handleSkip}\r\n-          />\r\n-        </div>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n-\"use client\";\r\n-\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { useRouter } from \"next/navigation\";\r\n-import { ref, get } from \"firebase/database\";\r\n-import { database } from \"@/lib/firebaseConfig\";\r\n-import useWebRTC from \"../hooks/useWebRTC\";\r\n-import useSocket from \"../hooks/useSocket\";\r\n-import LocalVideo from \"../../../components/video/LocalVideo\";\r\n-import RemoteVideo from \"../../../components/video/RemoteVideo\";\r\n-import ChatBox from \"../../../components/chat/ChatBox\";\r\n-import FindingPartner from \"./FindingPartner\";\r\n-import IdleMessage from \"./IdleMessage\";\r\n-import ControlBar from \"./ControlBar\";\r\n-import { useSoundPlayer } from \"../hooks/useSoundPlayer\";\r\n-import { useChatHandlers } from \"../hooks/useChatHandlers\";\r\n-\r\n-// Shared type for both user and partner\r\n-export interface UserInfo {\r\n-  uid: string;\r\n-  name: string;\r\n-  age: string;\r\n-  gender: string;\r\n-  country: string;\r\n-  email?: string;\r\n-}\r\n-\r\n-export default function AnonymousChatRoom() {\r\n-  const router = useRouter();\r\n-\r\n-  const [userInfo, setUserInfo] = useState<UserInfo | null>(null);\r\n-  const [partnerInfo, setPartnerInfo] = useState<UserInfo | null>(null);\r\n-  const [roomId, setRoomId] = useState<string | null>(null);\r\n-  const [isOfferer, setIsOfferer] = useState<boolean | null>(null);\r\n-  const [loading, setLoading] = useState(false);\r\n-  const [sessionStarted, setSessionStarted] = useState(false);\r\n-  const [lastAction, setLastAction] = useState<\"skipped\" | \"left\" | null>(null);\r\n-  const [soundOn, setSoundOn] = useState(true);\r\n-  const [genderFilter, setGenderFilter] = useState(\"\");\r\n-  const [countryFilter, setCountryFilter] = useState(\"\");\r\n-\r\n-  const socket = useSocket();\r\n-  const { localStream, remoteStream } = useWebRTC({\r\n-    roomId,\r\n-    isOfferer,\r\n-    isStarted: sessionStarted,\r\n-    socket,\r\n-  });\r\n-\r\n-  const { matchSoundRef, leaveSoundRef, playSound } = useSoundPlayer(soundOn);\r\n-\r\n-  // Attach chat handlers\r\n-  useChatHandlers({\r\n-    socket,\r\n-    playSound,\r\n-    setRoomId,\r\n-    setIsOfferer,\r\n-    setPartnerInfo,\r\n-    setLoading,\r\n-    setSessionStarted,\r\n-    setLastAction,\r\n-  });\r\n-\r\n-  // Load user info from Firebase\r\n-  useEffect(() => {\r\n-    const fetchUserInfo = async () => {\r\n-      const storedUid = localStorage.getItem(\"userId\");\r\n-      if (!storedUid) {\r\n-        router.replace(\"/auth\");\r\n-        return;\r\n-      }\r\n-\r\n-      try {\r\n-        const userRef = ref(database, `users/${storedUid}`);\r\n-        const snapshot = await get(userRef);\r\n-        if (!snapshot.exists()) {\r\n-          router.replace(\"/auth\");\r\n-          return;\r\n-        }\r\n-        const data = snapshot.val();\r\n-        const user: UserInfo = {\r\n-          uid: storedUid,\r\n-          name: data.name || \"Anonymous\",\r\n-          age: data.age || \"\",\r\n-          gender: data.gender || \"\",\r\n-          country: data.country || \"\",\r\n-          email: data.email || \"\",\r\n-        };\r\n-        setUserInfo(user);\r\n-        localStorage.setItem(\"user-info\", JSON.stringify(user));\r\n-      } catch (err) {\r\n-        console.error(\"Error fetching user info:\", err);\r\n-        router.replace(\"/auth\");\r\n-      }\r\n-    };\r\n-\r\n-    fetchUserInfo();\r\n-  }, [router]);\r\n-\r\n-  // Cleanup socket on unmount\r\n-  useEffect(() => {\r\n-    return () => {\r\n-      if (socket && roomId) socket.emit(\"leave-room\", roomId);\r\n-    };\r\n-  }, [socket, roomId]);\r\n-\r\n-  // Chat controls\r\n-  const handleStart = () => {\r\n-    if (!sessionStarted && userInfo) {\r\n-      setLoading(true);\r\n-      setSessionStarted(true);\r\n-      socket?.emit(\"start-looking\", {\r\n-        name: userInfo.name,\r\n-        age: userInfo.age,\r\n-        gender: userInfo.gender,\r\n-        country: userInfo.country,\r\n-        filterGender: genderFilter,\r\n-        filterCountry: countryFilter,\r\n-      });\r\n-    }\r\n-  };\r\n-\r\n-  const handleStop = () => {\r\n-    if (roomId) socket?.emit(\"leave-room\", roomId);\r\n-    setRoomId(null);\r\n-    setIsOfferer(null);\r\n-    setSessionStarted(false);\r\n-    setLoading(false);\r\n-  };\r\n-\r\n-  const handleSkip = () => {\r\n-    handleStop();\r\n-    handleStart();\r\n-    setLastAction(\"skipped\");\r\n-  };\r\n-\r\n-  if (!userInfo) {\r\n-    return (\r\n-      <div className=\"min-h-screen flex items-center justify-center bg-neutral-100 dark:bg-neutral-900\">\r\n-        <p className=\"text-lg text-neutral-700 dark:text-neutral-300\">\r\n-          Loading user info...\r\n-        </p>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"h-[calc(100vh-56px)]\">\r\n-      <audio ref={matchSoundRef} src=\"/sounds/match.mp3\" preload=\"auto\" />\r\n-      <audio ref={leaveSoundRef} src=\"/sounds/leave.mp3\" preload=\"auto\" />\r\n-\r\n-      <div className=\"flex flex-col md:flex-row w-full h-full overflow-hidden bg-neutral-100 dark:bg-neutral-900\">\r\n-        {/* Video Section */}\r\n-        <div className=\"flex-1 flex items-center justify-center p-3 sm:p-4 bg-black relative overflow-hidden h-[66vh] md:h-full\">\r\n-          {!sessionStarted ? (\r\n-            <div className=\"text-white text-lg sm:text-xl font-semibold text-center px-4\">\r\n-              Click Start to begin searching\r\n-            </div>\r\n-          ) : loading ? (\r\n-            <FindingPartner />\r\n-          ) : (\r\n-            <>\r\n-              <RemoteVideo stream={remoteStream} />\r\n-              <div className=\"absolute top-4 right-4 w-28 h-28 sm:w-36 sm:h-36 md:w-40 md:h-40 rounded overflow-hidden border-2 border-white shadow-lg z-20\">\r\n-                {localStream ? (\r\n-                  <LocalVideo stream={localStream} />\r\n-                ) : (\r\n-                  <div className=\"text-white text-sm p-2\">Loading camera...</div>\r\n-                )}\r\n-              </div>\r\n-            </>\r\n-          )}\r\n-        </div>\r\n-\r\n-        {/* Chat Section */}\r\n-        <div className=\"w-full md:w-[420px] flex flex-col border-t md:border-t-0 md:border-l border-neutral-300 dark:border-neutral-700 bg-white dark:bg-neutral-900 h-[34vh] md:h-full\">\r\n-          <div className=\"flex-1 min-h-0 overflow-hidden relative\">\r\n             {roomId ? (\r\n               <ChatBox\r\n                 socket={socket}\r\n                 roomId={roomId}\r\n+                userId={userId} // Safe now\r\n                 soundOn={soundOn}\r\n-                partnerName={partnerInfo?.name}\r\n+                partnerName={partnerInfo?.name || \"Stranger\"}\r\n                 partnerAge={partnerInfo?.age}\r\n+                partnerCountry={partnerInfo?.country}\r\n               />\r\n             ) : (\r\n               <IdleMessage lastAction={lastAction} />\r\n             )}\r\n"
                },
                {
                    "date": 1759970529330,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n \"use client\";\r\n \r\n import React, { useEffect, useState } from \"react\";\r\n import { useRouter } from \"next/navigation\";\r\n-import { ref, get } from \"firebase/database\";\r\n+import { ref, get, update } from \"firebase/database\";\r\n import { database } from \"@/lib/firebaseConfig\";\r\n import useWebRTC from \"../hooks/useWebRTC\";\r\n import useSocket from \"../hooks/useSocket\";\r\n import LocalVideo from \"../../../components/video/LocalVideo\";\r\n@@ -42,16 +42,16 @@\n   });\r\n \r\n   const { matchSoundRef, leaveSoundRef, playSound } = useSoundPlayer(soundOn);\r\n \r\n-  // Ensure userId exists (localStorage fallback)\r\n+  // ✅ Ensure userId exists (auth or localStorage)\r\n   useEffect(() => {\r\n     const id = authUserId || localStorage.getItem(\"userId\") || crypto.randomUUID();\r\n     localStorage.setItem(\"userId\", id);\r\n     setUserId(id);\r\n   }, [authUserId]);\r\n \r\n-  // Attach chat handlers for socket\r\n+  // ✅ Attach chat/socket handlers\r\n   useChatHandlers({\r\n     socket,\r\n     playSound,\r\n     setRoomId,\r\n@@ -61,14 +61,14 @@\n     setSessionStarted,\r\n     setLastAction,\r\n   });\r\n \r\n-  // Redirect if unauthenticated\r\n+  // ✅ Redirect unauthenticated users\r\n   useEffect(() => {\r\n     if (!authLoading && !authUserId) router.replace(\"/auth\");\r\n   }, [authLoading, authUserId, router]);\r\n \r\n-  // Fetch user info from Firebase\r\n+  // ✅ Fetch current user's info\r\n   useEffect(() => {\r\n     if (!userId) return;\r\n \r\n     const fetchUserInfo = async () => {\r\n@@ -97,16 +97,29 @@\n \r\n     fetchUserInfo();\r\n   }, [userId, router]);\r\n \r\n-  // Cleanup socket on unmount\r\n+  // ✅ Seen message sync: update seen status when room active\r\n   useEffect(() => {\r\n+    if (!roomId || !userId) return;\r\n+    const markMessagesSeen = async () => {\r\n+      const messagesRef = ref(database, `rooms/${roomId}/messages`);\r\n+      await update(messagesRef, {\r\n+        lastSeenBy: { [userId]: new Date().toISOString() },\r\n+      });\r\n+      socket?.emit(\"messages-seen\", { roomId, userId });\r\n+    };\r\n+    markMessagesSeen();\r\n+  }, [roomId, userId, socket]);\r\n+\r\n+  // ✅ Cleanup on unmount\r\n+  useEffect(() => {\r\n     return () => {\r\n       if (socket && roomId) socket.emit(\"leave-room\", roomId);\r\n     };\r\n   }, [socket, roomId]);\r\n \r\n-  // Chat controls\r\n+  // ✅ Chat Controls\r\n   const handleStart = () => {\r\n     if (!sessionStarted && userInfo) {\r\n       setLoading(true);\r\n       setSessionStarted(true);\r\n@@ -150,9 +163,9 @@\n       <audio ref={matchSoundRef} src=\"/sounds/match.mp3\" preload=\"auto\" />\r\n       <audio ref={leaveSoundRef} src=\"/sounds/leave.mp3\" preload=\"auto\" />\r\n \r\n       <div className=\"flex flex-col md:flex-row w-full h-full overflow-hidden bg-neutral-100 dark:bg-neutral-900\">\r\n-        {/* Video Section */}\r\n+        {/* 🎥 Video Section */}\r\n         <div className=\"flex-1 flex items-center justify-center p-3 sm:p-4 bg-black relative overflow-hidden h-[66vh] md:h-full\">\r\n           {!sessionStarted ? (\r\n             <div className=\"text-white text-lg sm:text-xl font-semibold text-center px-4\">\r\n               Click Start to begin searching\r\n@@ -172,16 +185,16 @@\n             </>\r\n           )}\r\n         </div>\r\n \r\n-        {/* Chat Section */}\r\n+        {/* 💬 Chat Section */}\r\n         <div className=\"w-full md:w-[420px] flex flex-col border-t md:border-t-0 md:border-l border-neutral-300 dark:border-neutral-700 bg-white dark:bg-neutral-900 h-[34vh] md:h-full\">\r\n           <div className=\"flex-1 min-h-0 overflow-hidden relative\">\r\n             {roomId ? (\r\n               <ChatBox\r\n                 socket={socket}\r\n                 roomId={roomId}\r\n-                userId={userId} // Safe now\r\n+                userId={userId}\r\n                 soundOn={soundOn}\r\n                 partnerName={partnerInfo?.name || \"Stranger\"}\r\n                 partnerAge={partnerInfo?.age}\r\n                 partnerCountry={partnerInfo?.country}\r\n@@ -190,8 +203,9 @@\n               <IdleMessage lastAction={lastAction} />\r\n             )}\r\n           </div>\r\n \r\n+          {/* 🎮 Controls */}\r\n           <ControlBar\r\n             userInfo={userInfo}\r\n             soundOn={soundOn}\r\n             setSoundOn={setSoundOn}\r\n"
                },
                {
                    "date": 1759970899940,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,16 +42,16 @@\n   });\r\n \r\n   const { matchSoundRef, leaveSoundRef, playSound } = useSoundPlayer(soundOn);\r\n \r\n-  // ✅ Ensure userId exists (auth or localStorage)\r\n+  // ✅ Ensure stable userId\r\n   useEffect(() => {\r\n     const id = authUserId || localStorage.getItem(\"userId\") || crypto.randomUUID();\r\n     localStorage.setItem(\"userId\", id);\r\n     setUserId(id);\r\n   }, [authUserId]);\r\n \r\n-  // ✅ Attach chat/socket handlers\r\n+  // ✅ Attach all socket & chat handlers\r\n   useChatHandlers({\r\n     socket,\r\n     playSound,\r\n     setRoomId,\r\n@@ -66,9 +66,9 @@\n   useEffect(() => {\r\n     if (!authLoading && !authUserId) router.replace(\"/auth\");\r\n   }, [authLoading, authUserId, router]);\r\n \r\n-  // ✅ Fetch current user's info\r\n+  // ✅ Fetch current user info\r\n   useEffect(() => {\r\n     if (!userId) return;\r\n \r\n     const fetchUserInfo = async () => {\r\n@@ -97,42 +97,49 @@\n \r\n     fetchUserInfo();\r\n   }, [userId, router]);\r\n \r\n-  // ✅ Seen message sync: update seen status when room active\r\n+  // ✅ Mark messages as seen whenever active room updates\r\n   useEffect(() => {\r\n-    if (!roomId || !userId) return;\r\n+    if (!roomId || !userId || !socket) return;\r\n+\r\n     const markMessagesSeen = async () => {\r\n-      const messagesRef = ref(database, `rooms/${roomId}/messages`);\r\n-      await update(messagesRef, {\r\n-        lastSeenBy: { [userId]: new Date().toISOString() },\r\n-      });\r\n-      socket?.emit(\"messages-seen\", { roomId, userId });\r\n+      try {\r\n+        const messagesRef = ref(database, `rooms/${roomId}/messages`);\r\n+        await update(messagesRef, {\r\n+          lastSeenBy: { [userId]: new Date().toISOString() },\r\n+        });\r\n+\r\n+        socket.emit(\"message-seen-sync\", { roomId, userId });\r\n+      } catch (err) {\r\n+        console.error(\"Error marking messages seen:\", err);\r\n+      }\r\n     };\r\n+\r\n     markMessagesSeen();\r\n   }, [roomId, userId, socket]);\r\n \r\n-  // ✅ Cleanup on unmount\r\n+  // ✅ Clean up on unmount (leave room properly)\r\n   useEffect(() => {\r\n     return () => {\r\n       if (socket && roomId) socket.emit(\"leave-room\", roomId);\r\n     };\r\n   }, [socket, roomId]);\r\n \r\n-  // ✅ Chat Controls\r\n+  // ✅ Chat control handlers\r\n   const handleStart = () => {\r\n-    if (!sessionStarted && userInfo) {\r\n-      setLoading(true);\r\n-      setSessionStarted(true);\r\n-      socket?.emit(\"start-looking\", {\r\n-        name: userInfo.name,\r\n-        age: userInfo.age,\r\n-        gender: userInfo.gender,\r\n-        country: userInfo.country,\r\n-        filterGender: genderFilter,\r\n-        filterCountry: countryFilter,\r\n-      });\r\n-    }\r\n+    if (sessionStarted || !userInfo) return;\r\n+    setLoading(true);\r\n+    setSessionStarted(true);\r\n+\r\n+    socket?.emit(\"start-looking\", {\r\n+      name: userInfo.name,\r\n+      age: userInfo.age,\r\n+      gender: userInfo.gender,\r\n+      country: userInfo.country,\r\n+      filterGender: genderFilter,\r\n+      filterCountry: countryFilter,\r\n+    });\r\n   };\r\n \r\n   const handleStop = () => {\r\n     if (roomId) socket?.emit(\"leave-room\", roomId);\r\n@@ -159,8 +166,9 @@\n   }\r\n \r\n   return (\r\n     <div className=\"h-[calc(100vh-56px)]\">\r\n+      {/* 🔊 Audio Feedback */}\r\n       <audio ref={matchSoundRef} src=\"/sounds/match.mp3\" preload=\"auto\" />\r\n       <audio ref={leaveSoundRef} src=\"/sounds/leave.mp3\" preload=\"auto\" />\r\n \r\n       <div className=\"flex flex-col md:flex-row w-full h-full overflow-hidden bg-neutral-100 dark:bg-neutral-900\">\r\n@@ -194,18 +202,18 @@\n                 socket={socket}\r\n                 roomId={roomId}\r\n                 userId={userId}\r\n                 soundOn={soundOn}\r\n-                partnerName={partnerInfo?.name || \"Stranger\"}\r\n-                partnerAge={partnerInfo?.age}\r\n-                partnerCountry={partnerInfo?.country}\r\n+                partnerName={partnerInfo?.name || \"Connecting...\"}\r\n+                partnerAge={partnerInfo?.age || \"\"}\r\n+                partnerCountry={partnerInfo?.country || \"\"}\r\n               />\r\n             ) : (\r\n               <IdleMessage lastAction={lastAction} />\r\n             )}\r\n           </div>\r\n \r\n-          {/* 🎮 Controls */}\r\n+          {/* 🎮 Control Buttons */}\r\n           <ControlBar\r\n             userInfo={userInfo}\r\n             soundOn={soundOn}\r\n             setSoundOn={setSoundOn}\r\n"
                },
                {
                    "date": 1759973613157,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,283 @@\n+\"use client\";\r\n+\r\n+import React, { useEffect, useState } from \"react\";\r\n+import { useRouter } from \"next/navigation\";\r\n+import { ref, get, update, set } from \"firebase/database\";\r\n+import { database } from \"@/lib/firebaseConfig\";\r\n+import useWebRTC from \"../hooks/useWebRTC\";\r\n+import useSocket from \"../hooks/useSocket\";\r\n+import LocalVideo from \"../../../components/video/LocalVideo\";\r\n+import RemoteVideo from \"../../../components/video/RemoteVideo\";\r\n+import ChatBox from \"../../../components/chat/ChatBox\";\r\n+import FindingPartner from \"./FindingPartner\";\r\n+import IdleMessage from \"./IdleMessage\";\r\n+import ControlBar from \"./ControlBar\";\r\n+import { useSoundPlayer } from \"../hooks/useSoundPlayer\";\r\n+import { useChatHandlers } from \"../hooks/useChatHandlers\";\r\n+import { UserInfo } from \"@/types/user\";\r\n+import { useAuth } from \"../../../src/app/auth/authContext\";\r\n+\r\n+export default function AnonymousChatRoom() {\r\n+  const router = useRouter();\r\n+  const { userId: authUserId, loading: authLoading } = useAuth();\r\n+\r\n+  const [userId, setUserId] = useState<string | null>(null);\r\n+  const [userInfo, setUserInfo] = useState<UserInfo | null>(null);\r\n+  const [partnerInfo, setPartnerInfo] = useState<UserInfo | null>(null);\r\n+  const [roomId, setRoomId] = useState<string | null>(null);\r\n+  const [isOfferer, setIsOfferer] = useState<boolean | null>(null);\r\n+  const [loading, setLoading] = useState(false);\r\n+  const [sessionStarted, setSessionStarted] = useState(false);\r\n+  const [lastAction, setLastAction] = useState<\"skipped\" | \"left\" | null>(null);\r\n+  const [soundOn, setSoundOn] = useState(true);\r\n+  const [genderFilter, setGenderFilter] = useState(\"\");\r\n+  const [countryFilter, setCountryFilter] = useState(\"\");\r\n+\r\n+  const socket = useSocket();\r\n+  const { localStream, remoteStream } = useWebRTC({\r\n+    roomId,\r\n+    isOfferer,\r\n+    isStarted: sessionStarted,\r\n+    socket,\r\n+  });\r\n+\r\n+  const { matchSoundRef, leaveSoundRef, playSound } = useSoundPlayer(soundOn);\r\n+\r\n+  // -------------------------\r\n+  // Stable userId\r\n+  // -------------------------\r\n+  useEffect(() => {\r\n+    const id = authUserId || localStorage.getItem(\"userId\") || crypto.randomUUID();\r\n+    localStorage.setItem(\"userId\", id);\r\n+    setUserId(id);\r\n+  }, [authUserId]);\r\n+\r\n+  // -------------------------\r\n+  // Attach socket & chat handlers\r\n+  // -------------------------\r\n+  useChatHandlers({\r\n+    socket,\r\n+    playSound,\r\n+    setRoomId,\r\n+    setIsOfferer,\r\n+    setPartnerInfo,\r\n+    setLoading,\r\n+    setSessionStarted,\r\n+    setLastAction,\r\n+  });\r\n+\r\n+  // -------------------------\r\n+  // Redirect unauthenticated\r\n+  // -------------------------\r\n+  useEffect(() => {\r\n+    if (!authLoading && !authUserId) router.replace(\"/auth\");\r\n+  }, [authLoading, authUserId, router]);\r\n+\r\n+  // -------------------------\r\n+  // Fetch current user info\r\n+  // -------------------------\r\n+  useEffect(() => {\r\n+    if (!userId) return;\r\n+\r\n+    const fetchUserInfo = async () => {\r\n+      try {\r\n+        const userRef = ref(database, `users/${userId}`);\r\n+        const snapshot = await get(userRef);\r\n+        if (!snapshot.exists()) {\r\n+          router.replace(\"/auth\");\r\n+          return;\r\n+        }\r\n+\r\n+        const data = snapshot.val();\r\n+        setUserInfo({\r\n+          uid: userId,\r\n+          name: data.name || \"Anonymous\",\r\n+          age: data.age || \"\",\r\n+          gender: data.gender || \"\",\r\n+          country: data.country || \"\",\r\n+          email: data.email || \"\",\r\n+        });\r\n+      } catch (err) {\r\n+        console.error(\"Error fetching user info:\", err);\r\n+        router.replace(\"/auth\");\r\n+      }\r\n+    };\r\n+\r\n+    fetchUserInfo();\r\n+  }, [userId, router]);\r\n+\r\n+  // -------------------------\r\n+  // Mark messages as seen\r\n+  // -------------------------\r\n+  useEffect(() => {\r\n+    if (!roomId || !userId || !socket) return;\r\n+\r\n+    const markMessagesSeen = async () => {\r\n+      try {\r\n+        const messagesRef = ref(database, `rooms/${roomId}/messages`);\r\n+        await update(messagesRef, {\r\n+          lastSeenBy: { [userId]: new Date().toISOString() },\r\n+        });\r\n+\r\n+        socket.emit(\"message-seen-sync\", { roomId, userId });\r\n+      } catch (err) {\r\n+        console.error(\"Error marking messages seen:\", err);\r\n+      }\r\n+    };\r\n+\r\n+    markMessagesSeen();\r\n+  }, [roomId, userId, socket]);\r\n+\r\n+  // -------------------------\r\n+  // Clean up on unmount\r\n+  // -------------------------\r\n+  useEffect(() => {\r\n+    return () => {\r\n+      if (socket && roomId) socket.emit(\"leave-room\", roomId);\r\n+    };\r\n+  }, [socket, roomId]);\r\n+\r\n+  // -------------------------\r\n+  // Chat control handlers\r\n+  // -------------------------\r\n+  const handleStart = () => {\r\n+    if (sessionStarted || !userInfo) return;\r\n+    setLoading(true);\r\n+    setSessionStarted(true);\r\n+\r\n+    socket?.emit(\"start-looking\", {\r\n+      name: userInfo.name,\r\n+      age: userInfo.age,\r\n+      gender: userInfo.gender,\r\n+      country: userInfo.country,\r\n+      filterGender: genderFilter,\r\n+      filterCountry: countryFilter,\r\n+    });\r\n+  };\r\n+\r\n+  const handleStop = () => {\r\n+    if (roomId) socket?.emit(\"leave-room\", roomId);\r\n+    setRoomId(null);\r\n+    setIsOfferer(null);\r\n+    setSessionStarted(false);\r\n+    setLoading(false);\r\n+    setPartnerInfo(null);\r\n+  };\r\n+\r\n+  const handleSkip = () => {\r\n+    handleStop();\r\n+    handleStart();\r\n+    setLastAction(\"skipped\");\r\n+  };\r\n+\r\n+  // -------------------------\r\n+  // Listen for match & create Firebase room\r\n+  // -------------------------\r\n+  useEffect(() => {\r\n+    if (!socket) return;\r\n+\r\n+    const handleMatched = async (data: any) => {\r\n+      const { roomId, partnerId, isOfferer, partnerName, partnerAge, partnerCountry } = data;\r\n+\r\n+      setRoomId(roomId);\r\n+      setIsOfferer(isOfferer);\r\n+      setPartnerInfo({ uid: partnerId, name: partnerName, age: partnerAge, country: partnerCountry });\r\n+\r\n+      // ✅ Create room in Firebase if it doesn't exist\r\n+      const roomRef = ref(database, `rooms/${roomId}`);\r\n+      await set(roomRef, {\r\n+        createdAt: new Date().toISOString(),\r\n+        messages: {},\r\n+      });\r\n+\r\n+      setLoading(false);\r\n+      playSound(\"match\");\r\n+    };\r\n+\r\n+    socket.on(\"matched\", handleMatched);\r\n+\r\n+    return () => {\r\n+      socket.off(\"matched\", handleMatched);\r\n+    };\r\n+  }, [socket, playSound]);\r\n+\r\n+  // -------------------------\r\n+  // Render\r\n+  // -------------------------\r\n+  if (authLoading || !userInfo || !userId) {\r\n+    return (\r\n+      <div className=\"min-h-screen flex items-center justify-center bg-neutral-100 dark:bg-neutral-900\">\r\n+        <p className=\"text-lg text-neutral-700 dark:text-neutral-300\">\r\n+          Loading user info...\r\n+        </p>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"h-[calc(100vh-56px)]\">\r\n+      {/* 🔊 Audio Feedback */}\r\n+      <audio ref={matchSoundRef} src=\"/sounds/match.mp3\" preload=\"auto\" />\r\n+      <audio ref={leaveSoundRef} src=\"/sounds/leave.mp3\" preload=\"auto\" />\r\n+\r\n+      <div className=\"flex flex-col md:flex-row w-full h-full overflow-hidden bg-neutral-100 dark:bg-neutral-900\">\r\n+        {/* 🎥 Video Section */}\r\n+        <div className=\"flex-1 flex items-center justify-center p-3 sm:p-4 bg-black relative overflow-hidden h-[66vh] md:h-full\">\r\n+          {!sessionStarted ? (\r\n+            <div className=\"text-white text-lg sm:text-xl font-semibold text-center px-4\">\r\n+              Click Start to begin searching\r\n+            </div>\r\n+          ) : loading ? (\r\n+            <FindingPartner />\r\n+          ) : (\r\n+            <>\r\n+              <RemoteVideo stream={remoteStream} />\r\n+              <div className=\"absolute top-4 right-4 w-28 h-28 sm:w-36 sm:h-36 md:w-40 md:h-40 rounded overflow-hidden border-2 border-white shadow-lg z-20\">\r\n+                {localStream ? (\r\n+                  <LocalVideo stream={localStream} />\r\n+                ) : (\r\n+                  <div className=\"text-white text-sm p-2\">Loading camera...</div>\r\n+                )}\r\n+              </div>\r\n+            </>\r\n+          )}\r\n+        </div>\r\n+\r\n+        {/* 💬 Chat Section */}\r\n+        <div className=\"w-full md:w-[420px] flex flex-col border-t md:border-t-0 md:border-l border-neutral-300 dark:border-neutral-700 bg-white dark:bg-neutral-900 h-[34vh] md:h-full\">\r\n+          <div className=\"flex-1 min-h-0 overflow-hidden relative\">\r\n+            {roomId ? (\r\n+              <ChatBox\r\n+                socket={socket}\r\n+                roomId={roomId}\r\n+                userId={userId}\r\n+                soundOn={soundOn}\r\n+                partnerName={partnerInfo?.name || \"Connecting...\"}\r\n+                partnerAge={partnerInfo?.age || \"\"}\r\n+                partnerCountry={partnerInfo?.country || \"\"}\r\n+              />\r\n+            ) : (\r\n+              <IdleMessage lastAction={lastAction} />\r\n+            )}\r\n+          </div>\r\n+\r\n+          {/* 🎮 Control Buttons */}\r\n+          <ControlBar\r\n+            userInfo={userInfo}\r\n+            soundOn={soundOn}\r\n+            setSoundOn={setSoundOn}\r\n+            genderFilter={genderFilter}\r\n+            setGenderFilter={setGenderFilter}\r\n+            countryFilter={countryFilter}\r\n+            setCountryFilter={setCountryFilter}\r\n+            sessionStarted={sessionStarted}\r\n+            loading={loading}\r\n+            handleStart={handleStart}\r\n+            handleStop={handleStop}\r\n+            handleSkip={handleSkip}\r\n+          />\r\n+        </div>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1759973657598,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -180,9 +180,16 @@\n       const { roomId, partnerId, isOfferer, partnerName, partnerAge, partnerCountry } = data;\r\n \r\n       setRoomId(roomId);\r\n       setIsOfferer(isOfferer);\r\n-      setPartnerInfo({ uid: partnerId, name: partnerName, age: partnerAge, country: partnerCountry });\r\n+setPartnerInfo({\r\n+  uid: partnerId,\r\n+  name: partnerName || \"Stranger\",\r\n+  age: partnerAge || \"\",\r\n+  gender: \"\", // if unknown\r\n+  country: partnerCountry || \"\",\r\n+  email: \"\", // if unknown\r\n+});\r\n \r\n       // ✅ Create room in Firebase if it doesn't exist\r\n       const roomRef = ref(database, `rooms/${roomId}`);\r\n       await set(roomRef, {\r\n@@ -280,238 +287,4 @@\n       </div>\r\n     </div>\r\n   );\r\n }\r\n-\"use client\";\r\n-\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { useRouter } from \"next/navigation\";\r\n-import { ref, get, update } from \"firebase/database\";\r\n-import { database } from \"@/lib/firebaseConfig\";\r\n-import useWebRTC from \"../hooks/useWebRTC\";\r\n-import useSocket from \"../hooks/useSocket\";\r\n-import LocalVideo from \"../../../components/video/LocalVideo\";\r\n-import RemoteVideo from \"../../../components/video/RemoteVideo\";\r\n-import ChatBox from \"../../../components/chat/ChatBox\";\r\n-import FindingPartner from \"./FindingPartner\";\r\n-import IdleMessage from \"./IdleMessage\";\r\n-import ControlBar from \"./ControlBar\";\r\n-import { useSoundPlayer } from \"../hooks/useSoundPlayer\";\r\n-import { useChatHandlers } from \"../hooks/useChatHandlers\";\r\n-import { UserInfo } from \"@/types/user\";\r\n-import { useAuth } from \"../../../src/app/auth/authContext\";\r\n-\r\n-export default function AnonymousChatRoom() {\r\n-  const router = useRouter();\r\n-  const { userId: authUserId, loading: authLoading } = useAuth();\r\n-\r\n-  const [userId, setUserId] = useState<string | null>(null);\r\n-  const [userInfo, setUserInfo] = useState<UserInfo | null>(null);\r\n-  const [partnerInfo, setPartnerInfo] = useState<UserInfo | null>(null);\r\n-  const [roomId, setRoomId] = useState<string | null>(null);\r\n-  const [isOfferer, setIsOfferer] = useState<boolean | null>(null);\r\n-  const [loading, setLoading] = useState(false);\r\n-  const [sessionStarted, setSessionStarted] = useState(false);\r\n-  const [lastAction, setLastAction] = useState<\"skipped\" | \"left\" | null>(null);\r\n-  const [soundOn, setSoundOn] = useState(true);\r\n-  const [genderFilter, setGenderFilter] = useState(\"\");\r\n-  const [countryFilter, setCountryFilter] = useState(\"\");\r\n-\r\n-  const socket = useSocket();\r\n-  const { localStream, remoteStream } = useWebRTC({\r\n-    roomId,\r\n-    isOfferer,\r\n-    isStarted: sessionStarted,\r\n-    socket,\r\n-  });\r\n-\r\n-  const { matchSoundRef, leaveSoundRef, playSound } = useSoundPlayer(soundOn);\r\n-\r\n-  // ✅ Ensure stable userId\r\n-  useEffect(() => {\r\n-    const id = authUserId || localStorage.getItem(\"userId\") || crypto.randomUUID();\r\n-    localStorage.setItem(\"userId\", id);\r\n-    setUserId(id);\r\n-  }, [authUserId]);\r\n-\r\n-  // ✅ Attach all socket & chat handlers\r\n-  useChatHandlers({\r\n-    socket,\r\n-    playSound,\r\n-    setRoomId,\r\n-    setIsOfferer,\r\n-    setPartnerInfo,\r\n-    setLoading,\r\n-    setSessionStarted,\r\n-    setLastAction,\r\n-  });\r\n-\r\n-  // ✅ Redirect unauthenticated users\r\n-  useEffect(() => {\r\n-    if (!authLoading && !authUserId) router.replace(\"/auth\");\r\n-  }, [authLoading, authUserId, router]);\r\n-\r\n-  // ✅ Fetch current user info\r\n-  useEffect(() => {\r\n-    if (!userId) return;\r\n-\r\n-    const fetchUserInfo = async () => {\r\n-      try {\r\n-        const userRef = ref(database, `users/${userId}`);\r\n-        const snapshot = await get(userRef);\r\n-        if (!snapshot.exists()) {\r\n-          router.replace(\"/auth\");\r\n-          return;\r\n-        }\r\n-\r\n-        const data = snapshot.val();\r\n-        setUserInfo({\r\n-          uid: userId,\r\n-          name: data.name || \"Anonymous\",\r\n-          age: data.age || \"\",\r\n-          gender: data.gender || \"\",\r\n-          country: data.country || \"\",\r\n-          email: data.email || \"\",\r\n-        });\r\n-      } catch (err) {\r\n-        console.error(\"Error fetching user info:\", err);\r\n-        router.replace(\"/auth\");\r\n-      }\r\n-    };\r\n-\r\n-    fetchUserInfo();\r\n-  }, [userId, router]);\r\n-\r\n-  // ✅ Mark messages as seen whenever active room updates\r\n-  useEffect(() => {\r\n-    if (!roomId || !userId || !socket) return;\r\n-\r\n-    const markMessagesSeen = async () => {\r\n-      try {\r\n-        const messagesRef = ref(database, `rooms/${roomId}/messages`);\r\n-        await update(messagesRef, {\r\n-          lastSeenBy: { [userId]: new Date().toISOString() },\r\n-        });\r\n-\r\n-        socket.emit(\"message-seen-sync\", { roomId, userId });\r\n-      } catch (err) {\r\n-        console.error(\"Error marking messages seen:\", err);\r\n-      }\r\n-    };\r\n-\r\n-    markMessagesSeen();\r\n-  }, [roomId, userId, socket]);\r\n-\r\n-  // ✅ Clean up on unmount (leave room properly)\r\n-  useEffect(() => {\r\n-    return () => {\r\n-      if (socket && roomId) socket.emit(\"leave-room\", roomId);\r\n-    };\r\n-  }, [socket, roomId]);\r\n-\r\n-  // ✅ Chat control handlers\r\n-  const handleStart = () => {\r\n-    if (sessionStarted || !userInfo) return;\r\n-    setLoading(true);\r\n-    setSessionStarted(true);\r\n-\r\n-    socket?.emit(\"start-looking\", {\r\n-      name: userInfo.name,\r\n-      age: userInfo.age,\r\n-      gender: userInfo.gender,\r\n-      country: userInfo.country,\r\n-      filterGender: genderFilter,\r\n-      filterCountry: countryFilter,\r\n-    });\r\n-  };\r\n-\r\n-  const handleStop = () => {\r\n-    if (roomId) socket?.emit(\"leave-room\", roomId);\r\n-    setRoomId(null);\r\n-    setIsOfferer(null);\r\n-    setSessionStarted(false);\r\n-    setLoading(false);\r\n-  };\r\n-\r\n-  const handleSkip = () => {\r\n-    handleStop();\r\n-    handleStart();\r\n-    setLastAction(\"skipped\");\r\n-  };\r\n-\r\n-  if (authLoading || !userInfo || !userId) {\r\n-    return (\r\n-      <div className=\"min-h-screen flex items-center justify-center bg-neutral-100 dark:bg-neutral-900\">\r\n-        <p className=\"text-lg text-neutral-700 dark:text-neutral-300\">\r\n-          Loading user info...\r\n-        </p>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"h-[calc(100vh-56px)]\">\r\n-      {/* 🔊 Audio Feedback */}\r\n-      <audio ref={matchSoundRef} src=\"/sounds/match.mp3\" preload=\"auto\" />\r\n-      <audio ref={leaveSoundRef} src=\"/sounds/leave.mp3\" preload=\"auto\" />\r\n-\r\n-      <div className=\"flex flex-col md:flex-row w-full h-full overflow-hidden bg-neutral-100 dark:bg-neutral-900\">\r\n-        {/* 🎥 Video Section */}\r\n-        <div className=\"flex-1 flex items-center justify-center p-3 sm:p-4 bg-black relative overflow-hidden h-[66vh] md:h-full\">\r\n-          {!sessionStarted ? (\r\n-            <div className=\"text-white text-lg sm:text-xl font-semibold text-center px-4\">\r\n-              Click Start to begin searching\r\n-            </div>\r\n-          ) : loading ? (\r\n-            <FindingPartner />\r\n-          ) : (\r\n-            <>\r\n-              <RemoteVideo stream={remoteStream} />\r\n-              <div className=\"absolute top-4 right-4 w-28 h-28 sm:w-36 sm:h-36 md:w-40 md:h-40 rounded overflow-hidden border-2 border-white shadow-lg z-20\">\r\n-                {localStream ? (\r\n-                  <LocalVideo stream={localStream} />\r\n-                ) : (\r\n-                  <div className=\"text-white text-sm p-2\">Loading camera...</div>\r\n-                )}\r\n-              </div>\r\n-            </>\r\n-          )}\r\n-        </div>\r\n-\r\n-        {/* 💬 Chat Section */}\r\n-        <div className=\"w-full md:w-[420px] flex flex-col border-t md:border-t-0 md:border-l border-neutral-300 dark:border-neutral-700 bg-white dark:bg-neutral-900 h-[34vh] md:h-full\">\r\n-          <div className=\"flex-1 min-h-0 overflow-hidden relative\">\r\n-            {roomId ? (\r\n-              <ChatBox\r\n-                socket={socket}\r\n-                roomId={roomId}\r\n-                userId={userId}\r\n-                soundOn={soundOn}\r\n-                partnerName={partnerInfo?.name || \"Connecting...\"}\r\n-                partnerAge={partnerInfo?.age || \"\"}\r\n-                partnerCountry={partnerInfo?.country || \"\"}\r\n-              />\r\n-            ) : (\r\n-              <IdleMessage lastAction={lastAction} />\r\n-            )}\r\n-          </div>\r\n-\r\n-          {/* 🎮 Control Buttons */}\r\n-          <ControlBar\r\n-            userInfo={userInfo}\r\n-            soundOn={soundOn}\r\n-            setSoundOn={setSoundOn}\r\n-            genderFilter={genderFilter}\r\n-            setGenderFilter={setGenderFilter}\r\n-            countryFilter={countryFilter}\r\n-            setCountryFilter={setCountryFilter}\r\n-            sessionStarted={sessionStarted}\r\n-            loading={loading}\r\n-            handleStart={handleStart}\r\n-            handleStop={handleStop}\r\n-            handleSkip={handleSkip}\r\n-          />\r\n-        </div>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1759975209247,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,8 @@\n import FindingPartner from \"./FindingPartner\";\r\n import IdleMessage from \"./IdleMessage\";\r\n import ControlBar from \"./ControlBar\";\r\n import { useSoundPlayer } from \"../hooks/useSoundPlayer\";\r\n-import { useChatHandlers } from \"../hooks/useChatHandlers\";\r\n import { UserInfo } from \"@/types/user\";\r\n import { useAuth } from \"../../../src/app/auth/authContext\";\r\n \r\n export default function AnonymousChatRoom() {\r\n@@ -52,22 +51,8 @@\n     setUserId(id);\r\n   }, [authUserId]);\r\n \r\n   // -------------------------\r\n-  // Attach socket & chat handlers\r\n-  // -------------------------\r\n-  useChatHandlers({\r\n-    socket,\r\n-    playSound,\r\n-    setRoomId,\r\n-    setIsOfferer,\r\n-    setPartnerInfo,\r\n-    setLoading,\r\n-    setSessionStarted,\r\n-    setLastAction,\r\n-  });\r\n-\r\n-  // -------------------------\r\n   // Redirect unauthenticated\r\n   // -------------------------\r\n   useEffect(() => {\r\n     if (!authLoading && !authUserId) router.replace(\"/auth\");\r\n@@ -106,39 +91,8 @@\n     fetchUserInfo();\r\n   }, [userId, router]);\r\n \r\n   // -------------------------\r\n-  // Mark messages as seen\r\n-  // -------------------------\r\n-  useEffect(() => {\r\n-    if (!roomId || !userId || !socket) return;\r\n-\r\n-    const markMessagesSeen = async () => {\r\n-      try {\r\n-        const messagesRef = ref(database, `rooms/${roomId}/messages`);\r\n-        await update(messagesRef, {\r\n-          lastSeenBy: { [userId]: new Date().toISOString() },\r\n-        });\r\n-\r\n-        socket.emit(\"message-seen-sync\", { roomId, userId });\r\n-      } catch (err) {\r\n-        console.error(\"Error marking messages seen:\", err);\r\n-      }\r\n-    };\r\n-\r\n-    markMessagesSeen();\r\n-  }, [roomId, userId, socket]);\r\n-\r\n-  // -------------------------\r\n-  // Clean up on unmount\r\n-  // -------------------------\r\n-  useEffect(() => {\r\n-    return () => {\r\n-      if (socket && roomId) socket.emit(\"leave-room\", roomId);\r\n-    };\r\n-  }, [socket, roomId]);\r\n-\r\n-  // -------------------------\r\n   // Chat control handlers\r\n   // -------------------------\r\n   const handleStart = () => {\r\n     if (sessionStarted || !userInfo) return;\r\n@@ -170,9 +124,9 @@\n     setLastAction(\"skipped\");\r\n   };\r\n \r\n   // -------------------------\r\n-  // Listen for match & create Firebase room\r\n+  // Listen for match & setup room\r\n   // -------------------------\r\n   useEffect(() => {\r\n     if (!socket) return;\r\n \r\n@@ -180,18 +134,18 @@\n       const { roomId, partnerId, isOfferer, partnerName, partnerAge, partnerCountry } = data;\r\n \r\n       setRoomId(roomId);\r\n       setIsOfferer(isOfferer);\r\n-setPartnerInfo({\r\n-  uid: partnerId,\r\n-  name: partnerName || \"Stranger\",\r\n-  age: partnerAge || \"\",\r\n-  gender: \"\", // if unknown\r\n-  country: partnerCountry || \"\",\r\n-  email: \"\", // if unknown\r\n-});\r\n+      setPartnerInfo({\r\n+        uid: partnerId,\r\n+        name: partnerName || \"Stranger\",\r\n+        age: partnerAge || \"\",\r\n+        gender: \"\",\r\n+        country: partnerCountry || \"\",\r\n+        email: \"\",\r\n+      });\r\n \r\n-      // ✅ Create room in Firebase if it doesn't exist\r\n+      // ✅ Create room in Firebase if not exists\r\n       const roomRef = ref(database, `rooms/${roomId}`);\r\n       await set(roomRef, {\r\n         createdAt: new Date().toISOString(),\r\n         messages: {},\r\n@@ -202,10 +156,23 @@\n     };\r\n \r\n     socket.on(\"matched\", handleMatched);\r\n \r\n+    const handlePartnerLeft = () => {\r\n+      setRoomId(null);\r\n+      setIsOfferer(null);\r\n+      setPartnerInfo(null);\r\n+      setSessionStarted(false);\r\n+      setLoading(false);\r\n+      setLastAction(\"left\");\r\n+      playSound(\"leave\");\r\n+    };\r\n+\r\n+    socket.on(\"partner-left\", handlePartnerLeft);\r\n+\r\n     return () => {\r\n       socket.off(\"matched\", handleMatched);\r\n+      socket.off(\"partner-left\", handlePartnerLeft);\r\n     };\r\n   }, [socket, playSound]);\r\n \r\n   // -------------------------\r\n@@ -252,18 +219,20 @@\n \r\n         {/* 💬 Chat Section */}\r\n         <div className=\"w-full md:w-[420px] flex flex-col border-t md:border-t-0 md:border-l border-neutral-300 dark:border-neutral-700 bg-white dark:bg-neutral-900 h-[34vh] md:h-full\">\r\n           <div className=\"flex-1 min-h-0 overflow-hidden relative\">\r\n-            {roomId ? (\r\n+            {roomId && partnerInfo ? (\r\n               <ChatBox\r\n                 socket={socket}\r\n                 roomId={roomId}\r\n                 userId={userId}\r\n                 soundOn={soundOn}\r\n-                partnerName={partnerInfo?.name || \"Connecting...\"}\r\n-                partnerAge={partnerInfo?.age || \"\"}\r\n-                partnerCountry={partnerInfo?.country || \"\"}\r\n+                partnerName={partnerInfo.name}\r\n+                partnerAge={partnerInfo.age}\r\n+                partnerCountry={partnerInfo.country}\r\n               />\r\n+            ) : sessionStarted ? (\r\n+              <FindingPartner />\r\n             ) : (\r\n               <IdleMessage lastAction={lastAction} />\r\n             )}\r\n           </div>\r\n"
                },
                {
                    "date": 1760015377898,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n \"use client\";\r\n \r\n import React, { useEffect, useState } from \"react\";\r\n import { useRouter } from \"next/navigation\";\r\n-import { ref, get, update, set } from \"firebase/database\";\r\n+import { ref, get, set } from \"firebase/database\";\r\n import { database } from \"@/lib/firebaseConfig\";\r\n import useWebRTC from \"../hooks/useWebRTC\";\r\n import useSocket from \"../hooks/useSocket\";\r\n import LocalVideo from \"../../../components/video/LocalVideo\";\r\n@@ -130,22 +130,26 @@\n   useEffect(() => {\r\n     if (!socket) return;\r\n \r\n     const handleMatched = async (data: any) => {\r\n+      console.log(\"✅ Matched event:\", data);\r\n       const { roomId, partnerId, isOfferer, partnerName, partnerAge, partnerCountry } = data;\r\n \r\n       setRoomId(roomId);\r\n       setIsOfferer(isOfferer);\r\n-      setPartnerInfo({\r\n+\r\n+      // 🔥 Always ensure partnerInfo is set BEFORE rendering ChatBox\r\n+      const info = {\r\n         uid: partnerId,\r\n         name: partnerName || \"Stranger\",\r\n         age: partnerAge || \"\",\r\n         gender: \"\",\r\n         country: partnerCountry || \"\",\r\n         email: \"\",\r\n-      });\r\n+      };\r\n+      setPartnerInfo(info);\r\n \r\n-      // ✅ Create room in Firebase if not exists\r\n+      // ✅ Make sure room exists\r\n       const roomRef = ref(database, `rooms/${roomId}`);\r\n       await set(roomRef, {\r\n         createdAt: new Date().toISOString(),\r\n         messages: {},\r\n@@ -154,10 +158,8 @@\n       setLoading(false);\r\n       playSound(\"match\");\r\n     };\r\n \r\n-    socket.on(\"matched\", handleMatched);\r\n-\r\n     const handlePartnerLeft = () => {\r\n       setRoomId(null);\r\n       setIsOfferer(null);\r\n       setPartnerInfo(null);\r\n@@ -166,8 +168,9 @@\n       setLastAction(\"left\");\r\n       playSound(\"leave\");\r\n     };\r\n \r\n+    socket.on(\"matched\", handleMatched);\r\n     socket.on(\"partner-left\", handlePartnerLeft);\r\n \r\n     return () => {\r\n       socket.off(\"matched\", handleMatched);\r\n@@ -189,38 +192,35 @@\n   }\r\n \r\n   return (\r\n     <div className=\"h-[calc(100vh-56px)]\">\r\n-      {/* 🔊 Audio Feedback */}\r\n+      {/* 🔊 Sounds */}\r\n       <audio ref={matchSoundRef} src=\"/sounds/match.mp3\" preload=\"auto\" />\r\n       <audio ref={leaveSoundRef} src=\"/sounds/leave.mp3\" preload=\"auto\" />\r\n \r\n       <div className=\"flex flex-col md:flex-row w-full h-full overflow-hidden bg-neutral-100 dark:bg-neutral-900\">\r\n         {/* 🎥 Video Section */}\r\n-        <div className=\"flex-1 flex items-center justify-center p-3 sm:p-4 bg-black relative overflow-hidden h-[66vh] md:h-full\">\r\n+        <div className=\"flex-1 flex items-center justify-center p-3 bg-black relative overflow-hidden h-[66vh] md:h-full\">\r\n           {!sessionStarted ? (\r\n-            <div className=\"text-white text-lg sm:text-xl font-semibold text-center px-4\">\r\n+            <div className=\"text-white text-lg sm:text-xl font-semibold text-center\">\r\n               Click Start to begin searching\r\n             </div>\r\n           ) : loading ? (\r\n             <FindingPartner />\r\n           ) : (\r\n             <>\r\n               <RemoteVideo stream={remoteStream} />\r\n-              <div className=\"absolute top-4 right-4 w-28 h-28 sm:w-36 sm:h-36 md:w-40 md:h-40 rounded overflow-hidden border-2 border-white shadow-lg z-20\">\r\n-                {localStream ? (\r\n-                  <LocalVideo stream={localStream} />\r\n-                ) : (\r\n-                  <div className=\"text-white text-sm p-2\">Loading camera...</div>\r\n-                )}\r\n+              <div className=\"absolute top-4 right-4 w-32 h-32 rounded overflow-hidden border-2 border-white shadow-lg\">\r\n+                {localStream ? <LocalVideo stream={localStream} /> : <div className=\"text-white text-sm p-2\">Loading camera...</div>}\r\n               </div>\r\n             </>\r\n           )}\r\n         </div>\r\n \r\n         {/* 💬 Chat Section */}\r\n-        <div className=\"w-full md:w-[420px] flex flex-col border-t md:border-t-0 md:border-l border-neutral-300 dark:border-neutral-700 bg-white dark:bg-neutral-900 h-[34vh] md:h-full\">\r\n+        <div className=\"w-full md:w-[420px] flex flex-col border-t md:border-l border-neutral-300 dark:border-neutral-700 bg-white dark:bg-neutral-900 h-[34vh] md:h-full\">\r\n           <div className=\"flex-1 min-h-0 overflow-hidden relative\">\r\n+            {/* ✅ FIX: render ChatBox once partnerInfo && roomId exist */}\r\n             {roomId && partnerInfo ? (\r\n               <ChatBox\r\n                 socket={socket}\r\n                 roomId={roomId}\r\n@@ -229,16 +229,18 @@\n                 partnerName={partnerInfo.name}\r\n                 partnerAge={partnerInfo.age}\r\n                 partnerCountry={partnerInfo.country}\r\n               />\r\n+            ) : sessionStarted && loading ? (\r\n+              <FindingPartner />\r\n             ) : sessionStarted ? (\r\n-              <FindingPartner />\r\n+              <p className=\"text-center text-gray-400 mt-4\">Connecting...</p>\r\n             ) : (\r\n               <IdleMessage lastAction={lastAction} />\r\n             )}\r\n           </div>\r\n \r\n-          {/* 🎮 Control Buttons */}\r\n+          {/* 🎮 Controls */}\r\n           <ControlBar\r\n             userInfo={userInfo}\r\n             soundOn={soundOn}\r\n             setSoundOn={setSoundOn}\r\n"
                },
                {
                    "date": 1760016164280,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,9 +45,10 @@\n   // -------------------------\r\n   // Stable userId\r\n   // -------------------------\r\n   useEffect(() => {\r\n-    const id = authUserId || localStorage.getItem(\"userId\") || crypto.randomUUID();\r\n+    const id =\r\n+      authUserId || localStorage.getItem(\"userId\") || crypto.randomUUID();\r\n     localStorage.setItem(\"userId\", id);\r\n     setUserId(id);\r\n   }, [authUserId]);\r\n \r\n@@ -131,14 +132,21 @@\n     if (!socket) return;\r\n \r\n     const handleMatched = async (data: any) => {\r\n       console.log(\"✅ Matched event:\", data);\r\n-      const { roomId, partnerId, isOfferer, partnerName, partnerAge, partnerCountry } = data;\r\n+      const {\r\n+        roomId,\r\n+        partnerId,\r\n+        isOfferer,\r\n+        partnerName,\r\n+        partnerAge,\r\n+        partnerCountry,\r\n+      } = data;\r\n \r\n       setRoomId(roomId);\r\n       setIsOfferer(isOfferer);\r\n \r\n-      // 🔥 Always ensure partnerInfo is set BEFORE rendering ChatBox\r\n+      // 🔥 Set partner info before rendering ChatBox\r\n       const info = {\r\n         uid: partnerId,\r\n         name: partnerName || \"Stranger\",\r\n         age: partnerAge || \"\",\r\n@@ -147,15 +155,18 @@\n         email: \"\",\r\n       };\r\n       setPartnerInfo(info);\r\n \r\n-      // ✅ Make sure room exists\r\n+      // ✅ Make sure Firebase room exists\r\n       const roomRef = ref(database, `rooms/${roomId}`);\r\n       await set(roomRef, {\r\n         createdAt: new Date().toISOString(),\r\n         messages: {},\r\n       });\r\n \r\n+      // ✅ Notify chat component to connect immediately\r\n+      socket.emit(\"chat-connected\", { roomId });\r\n+\r\n       setLoading(false);\r\n       playSound(\"match\");\r\n     };\r\n \r\n@@ -209,18 +220,24 @@\n           ) : (\r\n             <>\r\n               <RemoteVideo stream={remoteStream} />\r\n               <div className=\"absolute top-4 right-4 w-32 h-32 rounded overflow-hidden border-2 border-white shadow-lg\">\r\n-                {localStream ? <LocalVideo stream={localStream} /> : <div className=\"text-white text-sm p-2\">Loading camera...</div>}\r\n+                {localStream ? (\r\n+                  <LocalVideo stream={localStream} />\r\n+                ) : (\r\n+                  <div className=\"text-white text-sm p-2\">\r\n+                    Loading camera...\r\n+                  </div>\r\n+                )}\r\n               </div>\r\n             </>\r\n           )}\r\n         </div>\r\n \r\n         {/* 💬 Chat Section */}\r\n         <div className=\"w-full md:w-[420px] flex flex-col border-t md:border-l border-neutral-300 dark:border-neutral-700 bg-white dark:bg-neutral-900 h-[34vh] md:h-full\">\r\n           <div className=\"flex-1 min-h-0 overflow-hidden relative\">\r\n-            {/* ✅ FIX: render ChatBox once partnerInfo && roomId exist */}\r\n+            {/* ✅ Render ChatBox only when matched */}\r\n             {roomId && partnerInfo ? (\r\n               <ChatBox\r\n                 socket={socket}\r\n                 roomId={roomId}\r\n"
                }
            ],
            "date": 1752230193627,
            "name": "Commit-0",
            "content": "\"use client\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport useWebRTC from \"../hooks/useWebRTC\";\r\nimport useSocket from \"../hooks/useSocket\";\r\nimport LocalVideo from \"../../../components/video/LocalVideo\";\r\nimport RemoteVideo from \"../../../components/video/RemoteVideo\";\r\nimport ChatBox from \"../../../components/chat/ChatBox\";\r\nimport FindingPartner from \"./FindingPartner\";\r\n\r\nexport default function AnonymousChatRoom() {\r\n  const { localStream, remoteStream, isConnected } = useWebRTC();\r\n  const { socket } = useSocket();\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (isConnected) {\r\n      setLoading(false);\r\n    }\r\n  }, [isConnected]);\r\n\r\n  return (\r\n    <div className=\"flex flex-col md:flex-row h-screen\">\r\n      <div className=\"flex-1 bg-black flex items-center justify-center\">\r\n        {loading ? (\r\n          <FindingPartner />\r\n        ) : (\r\n          <>\r\n            <LocalVideo stream={localStream} />\r\n            <RemoteVideo stream={remoteStream} />\r\n          </>\r\n        )}\r\n      </div>\r\n      <div className=\"md:w-1/3 bg-neutral-100 dark:bg-neutral-800 border-l border-neutral-300 dark:border-neutral-700 flex flex-col\">\r\n        <ChatBox socket={socket} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"
        }
    ]
}