{
    "sourceFile": "src/app/auth/page.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 5,
            "patches": [
                {
                    "date": 1758987800225,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1758991349534,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,47 +1,42 @@\n \"use client\";\r\n \r\n-import { useState } from \"react\";\r\n-import { registerUser, loginUser } from \"./firebaseAuth\";\r\n+import { useRouter } from \"next/navigation\";\r\n import { useAuth } from \"./authContext\";\r\n \r\n-export default function AuthPage() {\r\n-  const { setUserId } = useAuth();\r\n-  const [email, setEmail] = useState(\"\");\r\n-  const [password, setPassword] = useState(\"\");\r\n-  const [name, setName] = useState(\"\");\r\n-  const [isRegister, setIsRegister] = useState(false);\r\n+export default function AuthLandingPage() {\r\n+  const router = useRouter();\r\n+  const { userId } = useAuth();\r\n \r\n-  const handleSubmit = async () => {\r\n-    try {\r\n-      let uid;\r\n-      if (isRegister) {\r\n-        uid = await registerUser(email, password, { name });\r\n-      } else {\r\n-        uid = await loginUser(email, password);\r\n-      }\r\n-      setUserId(uid);\r\n-    } catch (err) {\r\n-      console.error(err);\r\n-      alert(\"Error: \" + err);\r\n-    }\r\n-  };\r\n+  // If user is already logged in, redirect to anonymous chat\r\n+  if (userId) {\r\n+    router.push(\"/anonymous\");\r\n+    return null;\r\n+  }\r\n \r\n   return (\r\n-    <div className=\"flex flex-col items-center justify-center min-h-screen\">\r\n-      {isRegister && (\r\n-        <input placeholder=\"Name\" value={name} onChange={e => setName(e.target.value)} />\r\n-      )}\r\n-      <input placeholder=\"Email\" value={email} onChange={e => setEmail(e.target.value)} />\r\n-      <input\r\n-        type=\"password\"\r\n-        placeholder=\"Password\"\r\n-        value={password}\r\n-        onChange={e => setPassword(e.target.value)}\r\n-      />\r\n-      <button onClick={handleSubmit}>{isRegister ? \"Register\" : \"Login\"}</button>\r\n-      <button onClick={() => setIsRegister(!isRegister)}>\r\n-        {isRegister ? \"Switch to Login\" : \"Switch to Register\"}\r\n-      </button>\r\n+    <div className=\"flex flex-col items-center justify-center min-h-screen px-4 space-y-6 bg-gradient-to-br from-blue-100 to-purple-200 dark:from-neutral-900 dark:to-neutral-800\">\r\n+      <h1 className=\"text-3xl sm:text-4xl font-bold text-neutral-900 dark:text-white\">\r\n+        Welcome to Connectify\r\n+      </h1>\r\n+      <p className=\"text-sm sm:text-base text-neutral-700 dark:text-neutral-300 text-center max-w-md\">\r\n+        Anonymous real-time video and text chat. Login if you already have an account or register to get started.\r\n+      </p>\r\n+\r\n+      <div className=\"flex flex-col sm:flex-row gap-4\">\r\n+        <button\r\n+          onClick={() => router.push(\"/auth/login\")}\r\n+          className=\"px-6 py-3 bg-blue-600 hover:bg-blue-700 text-white font-semibold rounded-md shadow-md transition\"\r\n+        >\r\n+          Login\r\n+        </button>\r\n+\r\n+        <button\r\n+          onClick={() => router.push(\"/auth/register\")}\r\n+          className=\"px-6 py-3 bg-purple-600 hover:bg-purple-700 text-white font-semibold rounded-md shadow-md transition\"\r\n+        >\r\n+          Register\r\n+        </button>\r\n+      </div>\r\n     </div>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1759339049604,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,44 @@\n+\"use client\";\r\n+\r\n+import { useRouter } from \"next/navigation\";\r\n+import { useAuth } from \"./authContext\";\r\n+import { useEffect } from \"react\";\r\n+\r\n+export default function AuthLandingPage() {\r\n+  const router = useRouter();\r\n+  const { userId } = useAuth();\r\n+\r\n+  // If user is already logged in, redirect to /home\r\n+  useEffect(() => {\r\n+    if (userId) {\r\n+      router.replace(\"/home\");\r\n+    }\r\n+  }, [userId, router]);\r\n+\r\n+  return (\r\n+    <div className=\"flex flex-col items-center justify-center min-h-screen px-4 space-y-6 bg-gradient-to-br from-blue-100 to-purple-200 dark:from-neutral-900 dark:to-neutral-800\">\r\n+      <h1 className=\"text-3xl sm:text-4xl font-bold text-neutral-900 dark:text-white\">\r\n+        Welcome to Connectify\r\n+      </h1>\r\n+      <p className=\"text-sm sm:text-base text-neutral-700 dark:text-neutral-300 text-center max-w-md\">\r\n+        Anonymous real-time video and text chat. Login if you already have an account or register to get started.\r\n+      </p>\r\n+\r\n+      <div className=\"flex flex-col sm:flex-row gap-4\">\r\n+        <button\r\n+          onClick={() => router.push(\"/auth/login\")}\r\n+          className=\"px-6 py-3 bg-blue-600 hover:bg-blue-700 text-white font-semibold rounded-md shadow-md transition\"\r\n+        >\r\n+          Login\r\n+        </button>\r\n+\r\n+        <button\r\n+          onClick={() => router.push(\"/auth/register\")}\r\n+          className=\"px-6 py-3 bg-purple-600 hover:bg-purple-700 text-white font-semibold rounded-md shadow-md transition\"\r\n+        >\r\n+          Register\r\n+        </button>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1759339181734,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,86 +1,32 @@\n \"use client\";\r\n \r\n+import { useEffect } from \"react\";\r\n import { useRouter } from \"next/navigation\";\r\n-import { useAuth } from \"./authContext\";\r\n-import { useEffect } from \"react\";\r\n+import { useAuth } from \"@/app/auth/authContext\";\r\n \r\n-export default function AuthLandingPage() {\r\n+export default function HomePage() {\r\n+  const { userId, loading } = useAuth();\r\n   const router = useRouter();\r\n-  const { userId } = useAuth();\r\n \r\n-  // If user is already logged in, redirect to /home\r\n   useEffect(() => {\r\n-    if (userId) {\r\n-      router.replace(\"/home\");\r\n+    if (!loading && !userId) {\r\n+      router.replace(\"/auth\"); // redirect if not logged in\r\n     }\r\n-  }, [userId, router]);\r\n+  }, [loading, userId, router]);\r\n \r\n-  return (\r\n-    <div className=\"flex flex-col items-center justify-center min-h-screen px-4 space-y-6 bg-gradient-to-br from-blue-100 to-purple-200 dark:from-neutral-900 dark:to-neutral-800\">\r\n-      <h1 className=\"text-3xl sm:text-4xl font-bold text-neutral-900 dark:text-white\">\r\n-        Welcome to Connectify\r\n-      </h1>\r\n-      <p className=\"text-sm sm:text-base text-neutral-700 dark:text-neutral-300 text-center max-w-md\">\r\n-        Anonymous real-time video and text chat. Login if you already have an account or register to get started.\r\n-      </p>\r\n-\r\n-      <div className=\"flex flex-col sm:flex-row gap-4\">\r\n-        <button\r\n-          onClick={() => router.push(\"/auth/login\")}\r\n-          className=\"px-6 py-3 bg-blue-600 hover:bg-blue-700 text-white font-semibold rounded-md shadow-md transition\"\r\n-        >\r\n-          Login\r\n-        </button>\r\n-\r\n-        <button\r\n-          onClick={() => router.push(\"/auth/register\")}\r\n-          className=\"px-6 py-3 bg-purple-600 hover:bg-purple-700 text-white font-semibold rounded-md shadow-md transition\"\r\n-        >\r\n-          Register\r\n-        </button>\r\n+  if (loading) {\r\n+    return (\r\n+      <div className=\"flex items-center justify-center min-h-screen\">\r\n+        <p className=\"text-lg\">Loading...</p>\r\n       </div>\r\n-    </div>\r\n-  );\r\n-}\r\n-\"use client\";\r\n+    );\r\n+  }\r\n \r\n-import { useRouter } from \"next/navigation\";\r\n-import { useAuth } from \"./authContext\";\r\n+  if (!userId) return null; // prevent flashing before redirect\r\n \r\n-export default function AuthLandingPage() {\r\n-  const router = useRouter();\r\n-  const { userId } = useAuth();\r\n-\r\n-  // If user is already logged in, redirect to anonymous chat\r\n-  if (userId) {\r\n-    router.push(\"/anonymous\");\r\n-    return null;\r\n-  }\r\n-\r\n   return (\r\n-    <div className=\"flex flex-col items-center justify-center min-h-screen px-4 space-y-6 bg-gradient-to-br from-blue-100 to-purple-200 dark:from-neutral-900 dark:to-neutral-800\">\r\n-      <h1 className=\"text-3xl sm:text-4xl font-bold text-neutral-900 dark:text-white\">\r\n-        Welcome to Connectify\r\n-      </h1>\r\n-      <p className=\"text-sm sm:text-base text-neutral-700 dark:text-neutral-300 text-center max-w-md\">\r\n-        Anonymous real-time video and text chat. Login if you already have an account or register to get started.\r\n-      </p>\r\n-\r\n-      <div className=\"flex flex-col sm:flex-row gap-4\">\r\n-        <button\r\n-          onClick={() => router.push(\"/auth/login\")}\r\n-          className=\"px-6 py-3 bg-blue-600 hover:bg-blue-700 text-white font-semibold rounded-md shadow-md transition\"\r\n-        >\r\n-          Login\r\n-        </button>\r\n-\r\n-        <button\r\n-          onClick={() => router.push(\"/auth/register\")}\r\n-          className=\"px-6 py-3 bg-purple-600 hover:bg-purple-700 text-white font-semibold rounded-md shadow-md transition\"\r\n-        >\r\n-          Register\r\n-        </button>\r\n-      </div>\r\n+    <div className=\"flex items-center justify-center min-h-screen\">\r\n+      <h1 className=\"text-2xl font-bold\">Welcome to Home!</h1>\r\n     </div>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1759339195163,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n \"use client\";\r\n \r\n import { useEffect } from \"react\";\r\n import { useRouter } from \"next/navigation\";\r\n-import { useAuth } from \"@/app/auth/authContext\";\r\n+import { useAuth } from \"../../app/auth/authContext\";\r\n \r\n export default function HomePage() {\r\n   const { userId, loading } = useAuth();\r\n   const router = useRouter();\r\n"
                },
                {
                    "date": 1759341820031,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,32 +1,54 @@\n \"use client\";\r\n \r\n import { useEffect } from \"react\";\r\n import { useRouter } from \"next/navigation\";\r\n-import { useAuth } from \"../../app/auth/authContext\";\r\n+import { useAuth } from \"./authContext\";\r\n \r\n-export default function HomePage() {\r\n+export default function AuthLandingPage() {\r\n+  const router = useRouter();\r\n   const { userId, loading } = useAuth();\r\n-  const router = useRouter();\r\n \r\n+  // Redirect logged-in users to /home\r\n   useEffect(() => {\r\n-    if (!loading && !userId) {\r\n-      router.replace(\"/auth\"); // redirect if not logged in\r\n+    if (!loading && userId) {\r\n+      router.replace(\"/home\");\r\n     }\r\n-  }, [loading, userId, router]);\r\n+  }, [userId, loading, router]);\r\n \r\n+  // Show loading while checking auth state\r\n   if (loading) {\r\n     return (\r\n       <div className=\"flex items-center justify-center min-h-screen\">\r\n-        <p className=\"text-lg\">Loading...</p>\r\n+        <p className=\"text-lg\">Checking authentication...</p>\r\n       </div>\r\n     );\r\n   }\r\n \r\n-  if (!userId) return null; // prevent flashing before redirect\r\n+  // Landing page for login/register\r\n+  return (\r\n+    <div className=\"flex flex-col items-center justify-center min-h-screen px-4 space-y-6 bg-gradient-to-br from-blue-100 to-purple-200 dark:from-neutral-900 dark:to-neutral-800\">\r\n+      <h1 className=\"text-3xl sm:text-4xl font-bold text-neutral-900 dark:text-white\">\r\n+        Welcome to Connectify\r\n+      </h1>\r\n+      <p className=\"text-sm sm:text-base text-neutral-700 dark:text-neutral-300 text-center max-w-md\">\r\n+        Anonymous real-time video and text chat. Login if you already have an account or register to get started.\r\n+      </p>\r\n \r\n-  return (\r\n-    <div className=\"flex items-center justify-center min-h-screen\">\r\n-      <h1 className=\"text-2xl font-bold\">Welcome to Home!</h1>\r\n+      <div className=\"flex flex-col sm:flex-row gap-4\">\r\n+        <button\r\n+          onClick={() => router.push(\"/auth/login\")}\r\n+          className=\"px-6 py-3 bg-blue-600 hover:bg-blue-700 text-white font-semibold rounded-md shadow-md transition\"\r\n+        >\r\n+          Login\r\n+        </button>\r\n+\r\n+        <button\r\n+          onClick={() => router.push(\"/auth/register\")}\r\n+          className=\"px-6 py-3 bg-purple-600 hover:bg-purple-700 text-white font-semibold rounded-md shadow-md transition\"\r\n+        >\r\n+          Register\r\n+        </button>\r\n+      </div>\r\n     </div>\r\n   );\r\n }\r\n"
                }
            ],
            "date": 1758987800225,
            "name": "Commit-0",
            "content": "\"use client\";\r\n\r\nimport { useState } from \"react\";\r\nimport { registerUser, loginUser } from \"./firebaseAuth\";\r\nimport { useAuth } from \"./authContext\";\r\n\r\nexport default function AuthPage() {\r\n  const { setUserId } = useAuth();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [isRegister, setIsRegister] = useState(false);\r\n\r\n  const handleSubmit = async () => {\r\n    try {\r\n      let uid;\r\n      if (isRegister) {\r\n        uid = await registerUser(email, password, { name });\r\n      } else {\r\n        uid = await loginUser(email, password);\r\n      }\r\n      setUserId(uid);\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert(\"Error: \" + err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center justify-center min-h-screen\">\r\n      {isRegister && (\r\n        <input placeholder=\"Name\" value={name} onChange={e => setName(e.target.value)} />\r\n      )}\r\n      <input placeholder=\"Email\" value={email} onChange={e => setEmail(e.target.value)} />\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"Password\"\r\n        value={password}\r\n        onChange={e => setPassword(e.target.value)}\r\n      />\r\n      <button onClick={handleSubmit}>{isRegister ? \"Register\" : \"Login\"}</button>\r\n      <button onClick={() => setIsRegister(!isRegister)}>\r\n        {isRegister ? \"Switch to Login\" : \"Switch to Register\"}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n"
        }
    ]
}