{
    "sourceFile": "src/app/auth/authContext.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1758987791364,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1758991441740,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,6 @@\n+\"use client\"; // ✅ Add this at the top\r\n+\r\n import { createContext, useContext, useState, ReactNode, useEffect } from \"react\";\r\n import { auth } from \"@/lib/firebaseConfig\";\r\n import { onAuthStateChanged } from \"firebase/auth\";\r\n \r\n@@ -6,9 +8,12 @@\n   userId: string | null;\r\n   setUserId: (id: string | null) => void;\r\n }\r\n \r\n-const AuthContext = createContext<AuthContextType>({ userId: null, setUserId: () => {} });\r\n+const AuthContext = createContext<AuthContextType>({\r\n+  userId: null,\r\n+  setUserId: () => {},\r\n+});\r\n \r\n export function AuthProvider({ children }: { children: ReactNode }) {\r\n   const [userId, setUserId] = useState<string | null>(null);\r\n \r\n@@ -16,8 +21,9 @@\n     const unsubscribe = onAuthStateChanged(auth, (user) => {\r\n       if (user) setUserId(user.uid);\r\n       else setUserId(null);\r\n     });\r\n+\r\n     return () => unsubscribe();\r\n   }, []);\r\n \r\n   return <AuthContext.Provider value={{ userId, setUserId }}>{children}</AuthContext.Provider>;\r\n"
                },
                {
                    "date": 1758993163556,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,32 @@\n+\"use client\";\r\n+\r\n+import { createContext, useContext, useState, useEffect, ReactNode } from \"react\";\r\n+import { auth } from \"@/lib/firebaseConfig\";\r\n+import { onAuthStateChanged } from \"firebase/auth\";\r\n+\r\n+interface AuthContextType {\r\n+  userId: string | null;\r\n+  setUserId: (id: string | null) => void;\r\n+}\r\n+\r\n+const AuthContext = createContext<AuthContextType>({\r\n+  userId: null,\r\n+  setUserId: () => {},\r\n+});\r\n+\r\n+export function AuthProvider({ children }: { children: ReactNode }) {\r\n+  const [userId, setUserId] = useState<string | null>(null);\r\n+\r\n+  useEffect(() => {\r\n+    const unsubscribe = onAuthStateChanged(auth, (user) => {\r\n+      setUserId(user ? user.uid : null);\r\n+    });\r\n+    return () => unsubscribe();\r\n+  }, []);\r\n+\r\n+  return <AuthContext.Provider value={{ userId, setUserId }}>{children}</AuthContext.Provider>;\r\n+}\r\n+\r\n+export function useAuth() {\r\n+  return useContext(AuthContext);\r\n+}\r\n"
                },
                {
                    "date": 1758993560816,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,65 +1,40 @@\n \"use client\";\r\n \r\n-import { createContext, useContext, useState, useEffect, ReactNode } from \"react\";\r\n-import { auth } from \"@/lib/firebaseConfig\";\r\n-import { onAuthStateChanged } from \"firebase/auth\";\r\n-\r\n-interface AuthContextType {\r\n-  userId: string | null;\r\n-  setUserId: (id: string | null) => void;\r\n-}\r\n-\r\n-const AuthContext = createContext<AuthContextType>({\r\n-  userId: null,\r\n-  setUserId: () => {},\r\n-});\r\n-\r\n-export function AuthProvider({ children }: { children: ReactNode }) {\r\n-  const [userId, setUserId] = useState<string | null>(null);\r\n-\r\n-  useEffect(() => {\r\n-    const unsubscribe = onAuthStateChanged(auth, (user) => {\r\n-      setUserId(user ? user.uid : null);\r\n-    });\r\n-    return () => unsubscribe();\r\n-  }, []);\r\n-\r\n-  return <AuthContext.Provider value={{ userId, setUserId }}>{children}</AuthContext.Provider>;\r\n-}\r\n-\r\n-export function useAuth() {\r\n-  return useContext(AuthContext);\r\n-}\r\n-\"use client\"; // ✅ Add this at the top\r\n-\r\n import { createContext, useContext, useState, ReactNode, useEffect } from \"react\";\r\n import { auth } from \"@/lib/firebaseConfig\";\r\n import { onAuthStateChanged } from \"firebase/auth\";\r\n \r\n interface AuthContextType {\r\n   userId: string | null;\r\n   setUserId: (id: string | null) => void;\r\n+  loading: boolean;\r\n }\r\n \r\n const AuthContext = createContext<AuthContextType>({\r\n   userId: null,\r\n   setUserId: () => {},\r\n+  loading: true,\r\n });\r\n \r\n export function AuthProvider({ children }: { children: ReactNode }) {\r\n   const [userId, setUserId] = useState<string | null>(null);\r\n+  const [loading, setLoading] = useState(true);\r\n \r\n   useEffect(() => {\r\n     const unsubscribe = onAuthStateChanged(auth, (user) => {\r\n       if (user) setUserId(user.uid);\r\n       else setUserId(null);\r\n+      setLoading(false);\r\n     });\r\n-\r\n     return () => unsubscribe();\r\n   }, []);\r\n \r\n-  return <AuthContext.Provider value={{ userId, setUserId }}>{children}</AuthContext.Provider>;\r\n+  return (\r\n+    <AuthContext.Provider value={{ userId, setUserId, loading }}>\r\n+      {children}\r\n+    </AuthContext.Provider>\r\n+  );\r\n }\r\n \r\n export function useAuth() {\r\n   return useContext(AuthContext);\r\n"
                },
                {
                    "date": 1758994703509,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n \"use client\";\r\n \r\n-import { createContext, useContext, useState, ReactNode, useEffect } from \"react\";\r\n+import { createContext, useContext, useState, useEffect, ReactNode } from \"react\";\r\n import { auth } from \"@/lib/firebaseConfig\";\r\n import { onAuthStateChanged } from \"firebase/auth\";\r\n \r\n interface AuthContextType {\r\n"
                }
            ],
            "date": 1758987791364,
            "name": "Commit-0",
            "content": "import { createContext, useContext, useState, ReactNode, useEffect } from \"react\";\r\nimport { auth } from \"@/lib/firebaseConfig\";\r\nimport { onAuthStateChanged } from \"firebase/auth\";\r\n\r\ninterface AuthContextType {\r\n  userId: string | null;\r\n  setUserId: (id: string | null) => void;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType>({ userId: null, setUserId: () => {} });\r\n\r\nexport function AuthProvider({ children }: { children: ReactNode }) {\r\n  const [userId, setUserId] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onAuthStateChanged(auth, (user) => {\r\n      if (user) setUserId(user.uid);\r\n      else setUserId(null);\r\n    });\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  return <AuthContext.Provider value={{ userId, setUserId }}>{children}</AuthContext.Provider>;\r\n}\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n}\r\n"
        }
    ]
}