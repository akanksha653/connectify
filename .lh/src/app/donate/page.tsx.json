{
    "sourceFile": "src/app/donate/page.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 8,
            "patches": [
                {
                    "date": 1752595211669,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1752595230220,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,8 +5,15 @@\n import { Heart } from \"lucide-react\";\r\n import { useRouter } from \"next/navigation\";\r\n import { loadRazorpayScript } from \"@/lib/razorpay\";\r\n \r\n+// Add Razorpay type declaration to window\r\n+declare global {\r\n+  interface Window {\r\n+    Razorpay: any;\r\n+  }\r\n+}\r\n+\r\n export default function DonatePage() {\r\n   const router = useRouter();\r\n \r\n   const handleDonation = async (amount: number) => {\r\n"
                },
                {
                    "date": 1752596789856,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -79,9 +79,9 @@\n \r\n       <p className=\"text-sm mt-6 text-neutral-500 dark:text-neutral-400\">\r\n         Payments are securely processed via Razorpay. For any issues, contact{\" \"}\r\n         <a href=\"mailto:donate@connectify.chat\" className=\"underline\">\r\n-          donate@connectify.chat\r\n+          connectify.hub.in@gmail.com\r\n         </a>\r\n       </p>\r\n     </main>\r\n   );\r\n"
                },
                {
                    "date": 1752598104577,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,33 +1,32 @@\n-// app/donate/page.tsx\r\n \"use client\";\r\n \r\n-import React from \"react\";\r\n-import { Heart } from \"lucide-react\";\r\n+import React, { useState } from \"react\";\r\n+import { Heart, IndianRupee } from \"lucide-react\";\r\n import { useRouter } from \"next/navigation\";\r\n import { loadRazorpayScript } from \"@/lib/razorpay\";\r\n \r\n-// Add Razorpay type declaration to window\r\n declare global {\r\n   interface Window {\r\n     Razorpay: any;\r\n   }\r\n }\r\n \r\n export default function DonatePage() {\r\n   const router = useRouter();\r\n+  const [customAmount, setCustomAmount] = useState(\"\");\r\n \r\n   const handleDonation = async (amount: number) => {\r\n     const loaded = await loadRazorpayScript();\r\n     if (!loaded) return alert(\"Failed to load Razorpay. Please try again.\");\r\n \r\n     const options = {\r\n-      key: \"YOUR_RAZORPAY_KEY\", // replace with your Razorpay key\r\n+      key: \"YOUR_RAZORPAY_KEY\", // üîÅ Replace this with your actual Razorpay key\r\n       amount: amount * 100, // amount in paise\r\n       currency: \"INR\",\r\n       name: \"Connectify\",\r\n       description: \"Support our mission ‚ù§Ô∏è\",\r\n-      image: \"/logo.png\", // optional logo\r\n+      image: \"/logo.png\", // optional\r\n       handler: function (response: any) {\r\n         console.log(\"Payment success:\", response);\r\n         router.push(\"/donate/success\");\r\n       },\r\n@@ -40,47 +39,66 @@\n     rzp.open();\r\n   };\r\n \r\n   return (\r\n-    <main className=\"max-w-2xl mx-auto px-4 py-10 text-neutral-800 dark:text-neutral-100\">\r\n+    <main className=\"max-w-xl mx-auto px-4 py-10 text-neutral-800 dark:text-neutral-100\">\r\n       <div className=\"flex items-center gap-2 mb-6\">\r\n         <Heart className=\"w-6 h-6 text-pink-600\" />\r\n-        <h1 className=\"text-2xl font-semibold\">Support Us with a Donation</h1>\r\n+        <h1 className=\"text-2xl font-semibold\">Support Connectify with a Donation</h1>\r\n       </div>\r\n \r\n-      <p className=\"mb-4\">\r\n-        If you love using Connectify and want to support the project, consider donating.\r\n-        Your contribution helps keep this platform alive and free for everyone.\r\n+      <p className=\"mb-4 text-sm sm:text-base\">\r\n+        Love using Connectify? Help keep it alive and ad-free by supporting us with a donation.\r\n       </p>\r\n \r\n       <div className=\"bg-pink-100 dark:bg-pink-900 text-pink-800 dark:text-pink-200 p-4 rounded-lg shadow mb-6\">\r\n-        ‚ù§Ô∏è Every donation ‚Äî big or small ‚Äî means a lot. Thank you for supporting us!\r\n+        ‚ù§Ô∏è Every donation ‚Äî big or small ‚Äî helps us improve and scale the platform.\r\n       </div>\r\n \r\n-      <div className=\"space-y-4\">\r\n-        <button\r\n-          onClick={() => handleDonation(100)}\r\n-          className=\"w-full sm:w-auto bg-pink-600 hover:bg-pink-700 text-white font-medium px-5 py-2 rounded-lg shadow transition\"\r\n-        >\r\n-          Donate ‚Çπ100\r\n-        </button>\r\n-        <button\r\n-          onClick={() => handleDonation(250)}\r\n-          className=\"w-full sm:w-auto bg-pink-600 hover:bg-pink-700 text-white font-medium px-5 py-2 rounded-lg shadow transition\"\r\n-        >\r\n-          Donate ‚Çπ250\r\n-        </button>\r\n-        <button\r\n-          onClick={() => handleDonation(0)}\r\n-          className=\"w-full sm:w-auto bg-pink-600 hover:bg-pink-700 text-white font-medium px-5 py-2 rounded-lg shadow transition\"\r\n-        >\r\n-          Custom Amount (Coming soon)\r\n-        </button>\r\n+      <div className=\"grid grid-cols-2 sm:grid-cols-4 gap-4 mb-6\">\r\n+        {[10, 25, 50, 100].map((amt) => (\r\n+          <button\r\n+            key={amt}\r\n+            onClick={() => handleDonation(amt)}\r\n+            className=\"bg-pink-600 hover:bg-pink-700 text-white font-medium px-5 py-2 rounded-lg shadow transition text-sm\"\r\n+          >\r\n+            ‚Çπ{amt}\r\n+          </button>\r\n+        ))}\r\n       </div>\r\n \r\n-      <p className=\"text-sm mt-6 text-neutral-500 dark:text-neutral-400\">\r\n-        Payments are securely processed via Razorpay. For any issues, contact{\" \"}\r\n-        <a href=\"mailto:donate@connectify.chat\" className=\"underline\">\r\n+      <div className=\"bg-white dark:bg-neutral-800 p-4 rounded-lg shadow-md mb-4\">\r\n+        <label className=\"block mb-2 text-sm font-medium text-neutral-700 dark:text-neutral-300\">\r\n+          üéÅ Or enter a custom amount:\r\n+        </label>\r\n+        <div className=\"flex items-center gap-2\">\r\n+          <div className=\"flex items-center bg-neutral-100 dark:bg-neutral-700 px-3 py-2 rounded-md\">\r\n+            <IndianRupee className=\"w-4 h-4 text-neutral-500 dark:text-neutral-300\" />\r\n+            <input\r\n+              type=\"number\"\r\n+              min={1}\r\n+              className=\"bg-transparent outline-none ml-1 text-sm w-24 text-neutral-900 dark:text-white\"\r\n+              placeholder=\"Amount\"\r\n+              value={customAmount}\r\n+              onChange={(e) => setCustomAmount(e.target.value)}\r\n+            />\r\n+          </div>\r\n+          <button\r\n+            onClick={() => {\r\n+              const amt = parseInt(customAmount);\r\n+              if (!amt || amt <= 0) return alert(\"Enter a valid amount.\");\r\n+              handleDonation(amt);\r\n+            }}\r\n+            className=\"bg-pink-600 hover:bg-pink-700 text-white text-sm px-4 py-2 rounded-lg shadow transition\"\r\n+          >\r\n+            Donate\r\n+          </button>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      <p className=\"text-xs text-neutral-500 dark:text-neutral-400 mt-6\">\r\n+        Payments are securely processed via Razorpay. For queries, contact{\" \"}\r\n+        <a href=\"mailto:connectify.hub.in@gmail.com\" className=\"underline\">\r\n           connectify.hub.in@gmail.com\r\n         </a>\r\n       </p>\r\n     </main>\r\n"
                },
                {
                    "date": 1752598520227,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,18 +19,22 @@\n     const loaded = await loadRazorpayScript();\r\n     if (!loaded) return alert(\"Failed to load Razorpay. Please try again.\");\r\n \r\n     const options = {\r\n-      key: \"YOUR_RAZORPAY_KEY\", // üîÅ Replace this with your actual Razorpay key\r\n-      amount: amount * 100, // amount in paise\r\n+      key: \"YOUR_RAZORPAY_KEY\", // üîÅ Replace this with your actual Razorpay public key\r\n+      amount: amount * 100, // in paise\r\n       currency: \"INR\",\r\n       name: \"Connectify\",\r\n       description: \"Support our mission ‚ù§Ô∏è\",\r\n       image: \"/logo.png\", // optional\r\n       handler: function (response: any) {\r\n-        console.log(\"Payment success:\", response);\r\n-        router.push(\"/donate/success\");\r\n+        const paymentId = response.razorpay_payment_id;\r\n+        router.push(`/donate/success?payment_id=${paymentId}&amount=${amount}`);\r\n       },\r\n+      prefill: {\r\n+        name: \"\",\r\n+        email: \"\",\r\n+      },\r\n       theme: {\r\n         color: \"#ec4899\",\r\n       },\r\n     };\r\n"
                },
                {
                    "date": 1752673670921,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n     const loaded = await loadRazorpayScript();\r\n     if (!loaded) return alert(\"Failed to load Razorpay. Please try again.\");\r\n \r\n     const options = {\r\n-      key: \"YOUR_RAZORPAY_KEY\", // üîÅ Replace this with your actual Razorpay public key\r\n+      key: \"RAZORPAY_KEY\", // üîÅ Replace this with your actual Razorpay public key\r\n       amount: amount * 100, // in paise\r\n       currency: \"INR\",\r\n       name: \"Connectify\",\r\n       description: \"Support our mission ‚ù§Ô∏è\",\r\n"
                },
                {
                    "date": 1752673784671,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,27 +19,26 @@\n     const loaded = await loadRazorpayScript();\r\n     if (!loaded) return alert(\"Failed to load Razorpay. Please try again.\");\r\n \r\n     const options = {\r\n-      key: \"RAZORPAY_KEY\", // üîÅ Replace this with your actual Razorpay public key\r\n-      amount: amount * 100, // in paise\r\n-      currency: \"INR\",\r\n-      name: \"Connectify\",\r\n-      description: \"Support our mission ‚ù§Ô∏è\",\r\n-      image: \"/logo.png\", // optional\r\n-      handler: function (response: any) {\r\n-        const paymentId = response.razorpay_payment_id;\r\n-        router.push(`/donate/success?payment_id=${paymentId}&amount=${amount}`);\r\n-      },\r\n-      prefill: {\r\n-        name: \"\",\r\n-        email: \"\",\r\n-      },\r\n-      theme: {\r\n-        color: \"#ec4899\",\r\n-      },\r\n-    };\r\n-\r\n+  key: process.env.NEXT_PUBLIC_RAZORPAY_KEY!, // ‚úÖ Load from .env\r\n+  amount: amount * 100, // in paise\r\n+  currency: \"INR\",\r\n+  name: \"Connectify\",\r\n+  description: \"Support our mission ‚ù§Ô∏è\",\r\n+  image: \"/logo.png\", // optional\r\n+  handler: function (response: any) {\r\n+    const paymentId = response.razorpay_payment_id;\r\n+    router.push(`/donate/success?payment_id=${paymentId}&amount=${amount}`);\r\n+  },\r\n+  prefill: {\r\n+    name: \"\",\r\n+    email: \"\",\r\n+  },\r\n+  theme: {\r\n+    color: \"#ec4899\",\r\n+  },\r\n+};\r\n     const rzp = new window.Razorpay(options);\r\n     rzp.open();\r\n   };\r\n \r\n"
                },
                {
                    "date": 1752673797119,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,105 +5,105 @@\n import { useRouter } from \"next/navigation\";\r\n import { loadRazorpayScript } from \"@/lib/razorpay\";\r\n \r\n declare global {\r\n-  interface Window {\r\n-    Razorpay: any;\r\n-  }\r\n+    interface Window {\r\n+        Razorpay: any;\r\n+    }\r\n }\r\n \r\n export default function DonatePage() {\r\n-  const router = useRouter();\r\n-  const [customAmount, setCustomAmount] = useState(\"\");\r\n+    const router = useRouter();\r\n+    const [customAmount, setCustomAmount] = useState(\"\");\r\n \r\n-  const handleDonation = async (amount: number) => {\r\n-    const loaded = await loadRazorpayScript();\r\n-    if (!loaded) return alert(\"Failed to load Razorpay. Please try again.\");\r\n+    const handleDonation = async (amount: number) => {\r\n+        const loaded = await loadRazorpayScript();\r\n+        if (!loaded) return alert(\"Failed to load Razorpay. Please try again.\");\r\n \r\n-    const options = {\r\n-  key: process.env.NEXT_PUBLIC_RAZORPAY_KEY!, // ‚úÖ Load from .env\r\n-  amount: amount * 100, // in paise\r\n-  currency: \"INR\",\r\n-  name: \"Connectify\",\r\n-  description: \"Support our mission ‚ù§Ô∏è\",\r\n-  image: \"/logo.png\", // optional\r\n-  handler: function (response: any) {\r\n-    const paymentId = response.razorpay_payment_id;\r\n-    router.push(`/donate/success?payment_id=${paymentId}&amount=${amount}`);\r\n-  },\r\n-  prefill: {\r\n-    name: \"\",\r\n-    email: \"\",\r\n-  },\r\n-  theme: {\r\n-    color: \"#ec4899\",\r\n-  },\r\n-};\r\n-    const rzp = new window.Razorpay(options);\r\n-    rzp.open();\r\n-  };\r\n+        const options = {\r\n+            key: process.env.NEXT_PUBLIC_RAZORPAY_KEY!, // ‚úÖ Load from .env\r\n+            amount: amount * 100, // in paise\r\n+            currency: \"INR\",\r\n+            name: \"Connectify\",\r\n+            description: \"Support our mission ‚ù§Ô∏è\",\r\n+            image: \"/logo.png\", // optional\r\n+            handler: function (response: any) {\r\n+                const paymentId = response.razorpay_payment_id;\r\n+                router.push(`/donate/success?payment_id=${paymentId}&amount=${amount}`);\r\n+            },\r\n+            prefill: {\r\n+                name: \"\",\r\n+                email: \"\",\r\n+            },\r\n+            theme: {\r\n+                color: \"#ec4899\",\r\n+            },\r\n+        };\r\n+        const rzp = new window.Razorpay(options);\r\n+        rzp.open();\r\n+    };\r\n \r\n-  return (\r\n-    <main className=\"max-w-xl mx-auto px-4 py-10 text-neutral-800 dark:text-neutral-100\">\r\n-      <div className=\"flex items-center gap-2 mb-6\">\r\n-        <Heart className=\"w-6 h-6 text-pink-600\" />\r\n-        <h1 className=\"text-2xl font-semibold\">Support Connectify with a Donation</h1>\r\n-      </div>\r\n+    return (\r\n+        <main className=\"max-w-xl mx-auto px-4 py-10 text-neutral-800 dark:text-neutral-100\">\r\n+            <div className=\"flex items-center gap-2 mb-6\">\r\n+                <Heart className=\"w-6 h-6 text-pink-600\" />\r\n+                <h1 className=\"text-2xl font-semibold\">Support Connectify with a Donation</h1>\r\n+            </div>\r\n \r\n-      <p className=\"mb-4 text-sm sm:text-base\">\r\n-        Love using Connectify? Help keep it alive and ad-free by supporting us with a donation.\r\n-      </p>\r\n+            <p className=\"mb-4 text-sm sm:text-base\">\r\n+                Love using Connectify? Help keep it alive and ad-free by supporting us with a donation.\r\n+            </p>\r\n \r\n-      <div className=\"bg-pink-100 dark:bg-pink-900 text-pink-800 dark:text-pink-200 p-4 rounded-lg shadow mb-6\">\r\n-        ‚ù§Ô∏è Every donation ‚Äî big or small ‚Äî helps us improve and scale the platform.\r\n-      </div>\r\n+            <div className=\"bg-pink-100 dark:bg-pink-900 text-pink-800 dark:text-pink-200 p-4 rounded-lg shadow mb-6\">\r\n+                ‚ù§Ô∏è Every donation ‚Äî big or small ‚Äî helps us improve and scale the platform.\r\n+            </div>\r\n \r\n-      <div className=\"grid grid-cols-2 sm:grid-cols-4 gap-4 mb-6\">\r\n-        {[10, 25, 50, 100].map((amt) => (\r\n-          <button\r\n-            key={amt}\r\n-            onClick={() => handleDonation(amt)}\r\n-            className=\"bg-pink-600 hover:bg-pink-700 text-white font-medium px-5 py-2 rounded-lg shadow transition text-sm\"\r\n-          >\r\n-            ‚Çπ{amt}\r\n-          </button>\r\n-        ))}\r\n-      </div>\r\n+            <div className=\"grid grid-cols-2 sm:grid-cols-4 gap-4 mb-6\">\r\n+                {[10, 25, 50, 100].map((amt) => (\r\n+                    <button\r\n+                        key={amt}\r\n+                        onClick={() => handleDonation(amt)}\r\n+                        className=\"bg-pink-600 hover:bg-pink-700 text-white font-medium px-5 py-2 rounded-lg shadow transition text-sm\"\r\n+                    >\r\n+                        ‚Çπ{amt}\r\n+                    </button>\r\n+                ))}\r\n+            </div>\r\n \r\n-      <div className=\"bg-white dark:bg-neutral-800 p-4 rounded-lg shadow-md mb-4\">\r\n-        <label className=\"block mb-2 text-sm font-medium text-neutral-700 dark:text-neutral-300\">\r\n-          üéÅ Or enter a custom amount:\r\n-        </label>\r\n-        <div className=\"flex items-center gap-2\">\r\n-          <div className=\"flex items-center bg-neutral-100 dark:bg-neutral-700 px-3 py-2 rounded-md\">\r\n-            <IndianRupee className=\"w-4 h-4 text-neutral-500 dark:text-neutral-300\" />\r\n-            <input\r\n-              type=\"number\"\r\n-              min={1}\r\n-              className=\"bg-transparent outline-none ml-1 text-sm w-24 text-neutral-900 dark:text-white\"\r\n-              placeholder=\"Amount\"\r\n-              value={customAmount}\r\n-              onChange={(e) => setCustomAmount(e.target.value)}\r\n-            />\r\n-          </div>\r\n-          <button\r\n-            onClick={() => {\r\n-              const amt = parseInt(customAmount);\r\n-              if (!amt || amt <= 0) return alert(\"Enter a valid amount.\");\r\n-              handleDonation(amt);\r\n-            }}\r\n-            className=\"bg-pink-600 hover:bg-pink-700 text-white text-sm px-4 py-2 rounded-lg shadow transition\"\r\n-          >\r\n-            Donate\r\n-          </button>\r\n-        </div>\r\n-      </div>\r\n+            <div className=\"bg-white dark:bg-neutral-800 p-4 rounded-lg shadow-md mb-4\">\r\n+                <label className=\"block mb-2 text-sm font-medium text-neutral-700 dark:text-neutral-300\">\r\n+                    üéÅ Or enter a custom amount:\r\n+                </label>\r\n+                <div className=\"flex items-center gap-2\">\r\n+                    <div className=\"flex items-center bg-neutral-100 dark:bg-neutral-700 px-3 py-2 rounded-md\">\r\n+                        <IndianRupee className=\"w-4 h-4 text-neutral-500 dark:text-neutral-300\" />\r\n+                        <input\r\n+                            type=\"number\"\r\n+                            min={1}\r\n+                            className=\"bg-transparent outline-none ml-1 text-sm w-24 text-neutral-900 dark:text-white\"\r\n+                            placeholder=\"Amount\"\r\n+                            value={customAmount}\r\n+                            onChange={(e) => setCustomAmount(e.target.value)}\r\n+                        />\r\n+                    </div>\r\n+                    <button\r\n+                        onClick={() => {\r\n+                            const amt = parseInt(customAmount);\r\n+                            if (!amt || amt <= 0) return alert(\"Enter a valid amount.\");\r\n+                            handleDonation(amt);\r\n+                        }}\r\n+                        className=\"bg-pink-600 hover:bg-pink-700 text-white text-sm px-4 py-2 rounded-lg shadow transition\"\r\n+                    >\r\n+                        Donate\r\n+                    </button>\r\n+                </div>\r\n+            </div>\r\n \r\n-      <p className=\"text-xs text-neutral-500 dark:text-neutral-400 mt-6\">\r\n-        Payments are securely processed via Razorpay. For queries, contact{\" \"}\r\n-        <a href=\"mailto:connectify.hub.in@gmail.com\" className=\"underline\">\r\n-          connectify.hub.in@gmail.com\r\n-        </a>\r\n-      </p>\r\n-    </main>\r\n-  );\r\n+            <p className=\"text-xs text-neutral-500 dark:text-neutral-400 mt-6\">\r\n+                Payments are securely processed via Razorpay. For queries, contact{\" \"}\r\n+                <a href=\"mailto:connectify.hub.in@gmail.com\" className=\"underline\">\r\n+                    connectify.hub.in@gmail.com\r\n+                </a>\r\n+            </p>\r\n+        </main>\r\n+    );\r\n }\r\n"
                },
                {
                    "date": 1752682068857,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,135 @@\n+\"use client\";\r\n+\r\n+import React, { useState } from \"react\";\r\n+import { Heart, IndianRupee } from \"lucide-react\";\r\n+import { useRouter } from \"next/navigation\";\r\n+import { loadRazorpayScript } from \"@/lib/razorpay\";\r\n+\r\n+declare global {\r\n+  interface Window {\r\n+    Razorpay: any;\r\n+  }\r\n+}\r\n+\r\n+export default function DonatePage() {\r\n+  const router = useRouter();\r\n+  const [customAmount, setCustomAmount] = useState(\"\");\r\n+\r\n+  const handleRazorpayModal = async (amount: number) => {\r\n+    const loaded = await loadRazorpayScript();\r\n+    if (!loaded) return alert(\"Failed to load Razorpay\");\r\n+\r\n+    const options = {\r\n+      key: process.env.NEXT_PUBLIC_RAZORPAY_KEY!,\r\n+      amount: amount * 100,\r\n+      currency: \"INR\",\r\n+      name: \"Connectify\",\r\n+      description: \"Support our mission ‚ù§Ô∏è\",\r\n+      image: \"/logo.png\",\r\n+      handler: function (response: any) {\r\n+        const paymentId = response.razorpay_payment_id;\r\n+        router.push(`/donate/success?payment_id=${paymentId}&amount=${amount}`);\r\n+      },\r\n+      prefill: {\r\n+        name: \"\",\r\n+        email: \"\",\r\n+      },\r\n+      theme: {\r\n+        color: \"#ec4899\",\r\n+      },\r\n+    };\r\n+\r\n+    const rzp = new window.Razorpay(options);\r\n+    rzp.open();\r\n+  };\r\n+\r\n+  const handleUPIPayment = async (amount: number) => {\r\n+    const res = await fetch(\"/api/create-upi-link\", {\r\n+      method: \"POST\",\r\n+      headers: { \"Content-Type\": \"application/json\" },\r\n+      body: JSON.stringify({ amount }),\r\n+    });\r\n+\r\n+    const data = await res.json();\r\n+    if (data.short_url) {\r\n+      window.open(data.short_url, \"_blank\");\r\n+    } else {\r\n+      alert(\"Failed to generate UPI link\");\r\n+    }\r\n+  };\r\n+\r\n+  return (\r\n+    <main className=\"max-w-xl mx-auto px-4 py-10 text-neutral-800 dark:text-neutral-100\">\r\n+      <div className=\"flex items-center gap-2 mb-6\">\r\n+        <Heart className=\"w-6 h-6 text-pink-600\" />\r\n+        <h1 className=\"text-2xl font-semibold\">Support Connectify with a Donation</h1>\r\n+      </div>\r\n+\r\n+      <p className=\"mb-4 text-sm sm:text-base\">\r\n+        Love using Connectify? Help keep it alive and ad-free by supporting us with a donation.\r\n+      </p>\r\n+\r\n+      <div className=\"bg-pink-100 dark:bg-pink-900 text-pink-800 dark:text-pink-200 p-4 rounded-lg shadow mb-6\">\r\n+        ‚ù§Ô∏è Every donation ‚Äî big or small ‚Äî helps us improve and scale the platform.\r\n+      </div>\r\n+\r\n+      <div className=\"grid grid-cols-2 sm:grid-cols-4 gap-4 mb-6\">\r\n+        {[10, 25, 50, 100].map((amt) => (\r\n+          <button\r\n+            key={amt}\r\n+            onClick={() => handleRazorpayModal(amt)}\r\n+            className=\"bg-pink-600 hover:bg-pink-700 text-white font-medium px-5 py-2 rounded-lg shadow transition text-sm\"\r\n+          >\r\n+            ‚Çπ{amt}\r\n+          </button>\r\n+        ))}\r\n+      </div>\r\n+\r\n+      <div className=\"bg-white dark:bg-neutral-800 p-4 rounded-lg shadow-md mb-4\">\r\n+        <label className=\"block mb-2 text-sm font-medium text-neutral-700 dark:text-neutral-300\">\r\n+          üéÅ Or enter a custom amount:\r\n+        </label>\r\n+        <div className=\"flex items-center gap-2\">\r\n+          <div className=\"flex items-center bg-neutral-100 dark:bg-neutral-700 px-3 py-2 rounded-md\">\r\n+            <IndianRupee className=\"w-4 h-4 text-neutral-500 dark:text-neutral-300\" />\r\n+            <input\r\n+              type=\"number\"\r\n+              min={1}\r\n+              className=\"bg-transparent outline-none ml-1 text-sm w-24 text-neutral-900 dark:text-white\"\r\n+              placeholder=\"Amount\"\r\n+              value={customAmount}\r\n+              onChange={(e) => setCustomAmount(e.target.value)}\r\n+            />\r\n+          </div>\r\n+          <button\r\n+            onClick={() => {\r\n+              const amt = parseInt(customAmount);\r\n+              if (!amt || amt <= 0) return alert(\"Enter a valid amount\");\r\n+              handleRazorpayModal(amt);\r\n+            }}\r\n+            className=\"bg-pink-600 hover:bg-pink-700 text-white text-sm px-4 py-2 rounded-lg shadow transition\"\r\n+          >\r\n+            Pay via Card/UPI/Netbanking\r\n+          </button>\r\n+          <button\r\n+            onClick={() => {\r\n+              const amt = parseInt(customAmount);\r\n+              if (!amt || amt <= 0) return alert(\"Enter a valid amount\");\r\n+              handleUPIPayment(amt);\r\n+            }}\r\n+            className=\"bg-green-600 hover:bg-green-700 text-white text-sm px-4 py-2 rounded-lg shadow transition\"\r\n+          >\r\n+            Pay via UPI QR\r\n+          </button>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      <p className=\"text-xs text-neutral-500 dark:text-neutral-400 mt-6\">\r\n+        Payments are securely processed via Razorpay. For queries, contact{\" \"}\r\n+        <a href=\"mailto:connectify.hub.in@gmail.com\" className=\"underline\">\r\n+          connectify.hub.in@gmail.com\r\n+        </a>\r\n+      </p>\r\n+    </main>\r\n+  );\r\n+}\r\n"
                }
            ],
            "date": 1752595211669,
            "name": "Commit-0",
            "content": "// app/donate/page.tsx\r\n\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { Heart } from \"lucide-react\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport { loadRazorpayScript } from \"@/lib/razorpay\";\r\n\r\nexport default function DonatePage() {\r\n  const router = useRouter();\r\n\r\n  const handleDonation = async (amount: number) => {\r\n    const loaded = await loadRazorpayScript();\r\n    if (!loaded) return alert(\"Failed to load Razorpay. Please try again.\");\r\n\r\n    const options = {\r\n      key: \"YOUR_RAZORPAY_KEY\", // replace with your Razorpay key\r\n      amount: amount * 100, // amount in paise\r\n      currency: \"INR\",\r\n      name: \"Connectify\",\r\n      description: \"Support our mission ‚ù§Ô∏è\",\r\n      image: \"/logo.png\", // optional logo\r\n      handler: function (response: any) {\r\n        console.log(\"Payment success:\", response);\r\n        router.push(\"/donate/success\");\r\n      },\r\n      theme: {\r\n        color: \"#ec4899\",\r\n      },\r\n    };\r\n\r\n    const rzp = new window.Razorpay(options);\r\n    rzp.open();\r\n  };\r\n\r\n  return (\r\n    <main className=\"max-w-2xl mx-auto px-4 py-10 text-neutral-800 dark:text-neutral-100\">\r\n      <div className=\"flex items-center gap-2 mb-6\">\r\n        <Heart className=\"w-6 h-6 text-pink-600\" />\r\n        <h1 className=\"text-2xl font-semibold\">Support Us with a Donation</h1>\r\n      </div>\r\n\r\n      <p className=\"mb-4\">\r\n        If you love using Connectify and want to support the project, consider donating.\r\n        Your contribution helps keep this platform alive and free for everyone.\r\n      </p>\r\n\r\n      <div className=\"bg-pink-100 dark:bg-pink-900 text-pink-800 dark:text-pink-200 p-4 rounded-lg shadow mb-6\">\r\n        ‚ù§Ô∏è Every donation ‚Äî big or small ‚Äî means a lot. Thank you for supporting us!\r\n      </div>\r\n\r\n      <div className=\"space-y-4\">\r\n        <button\r\n          onClick={() => handleDonation(100)}\r\n          className=\"w-full sm:w-auto bg-pink-600 hover:bg-pink-700 text-white font-medium px-5 py-2 rounded-lg shadow transition\"\r\n        >\r\n          Donate ‚Çπ100\r\n        </button>\r\n        <button\r\n          onClick={() => handleDonation(250)}\r\n          className=\"w-full sm:w-auto bg-pink-600 hover:bg-pink-700 text-white font-medium px-5 py-2 rounded-lg shadow transition\"\r\n        >\r\n          Donate ‚Çπ250\r\n        </button>\r\n        <button\r\n          onClick={() => handleDonation(0)}\r\n          className=\"w-full sm:w-auto bg-pink-600 hover:bg-pink-700 text-white font-medium px-5 py-2 rounded-lg shadow transition\"\r\n        >\r\n          Custom Amount (Coming soon)\r\n        </button>\r\n      </div>\r\n\r\n      <p className=\"text-sm mt-6 text-neutral-500 dark:text-neutral-400\">\r\n        Payments are securely processed via Razorpay. For any issues, contact{\" \"}\r\n        <a href=\"mailto:donate@connectify.chat\" className=\"underline\">\r\n          donate@connectify.chat\r\n        </a>\r\n      </p>\r\n    </main>\r\n  );\r\n}\r\n"
        }
    ]
}