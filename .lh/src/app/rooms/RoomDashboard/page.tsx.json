{
    "sourceFile": "src/app/rooms/RoomDashboard/page.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1760250096613,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1760250208381,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n \"use client\";\r\n \r\n import React, { useEffect, useState } from \"react\";\r\n import { useRouter } from \"next/navigation\";\r\n-import { connectRoomSocket, disconnectRoomSocket } from \"../../\";\r\n+import { connectRoomSocket, disconnectRoomSocket } from \"../../features/RoomChat/services/roomSocketService\";\r\n \r\n interface Room {\r\n   id: string;\r\n   name: string;\r\n"
                },
                {
                    "date": 1760250226720,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n   // -----------------------------\r\n   // Connect to /rooms socket\r\n   // -----------------------------\r\n   useEffect(() => {\r\n-    const s = connectRoomSocket(\"/rooms\");\r\n+    const s = connectRoomSocket();\r\n     setSocket(s);\r\n \r\n     s.on(\"connected\", () => console.log(\"✅ Connected to /rooms namespace\"));\r\n     s.on(\"rooms\", (list: Room[]) => setRooms(list));\r\n"
                },
                {
                    "date": 1760262454817,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n \"use client\";\r\n \r\n import React, { useEffect, useState } from \"react\";\r\n import { useRouter } from \"next/navigation\";\r\n-import { connectRoomSocket, disconnectRoomSocket } from \"../../features/RoomChat/services/roomSocketService\";\r\n+import { connectRoomSocket, disconnectRoomSocket } from \"../../../../features/RoomChat/services/roomSocketService\";\r\n \r\n interface Room {\r\n   id: string;\r\n   name: string;\r\n"
                },
                {
                    "date": 1760262468368,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n \"use client\";\r\n \r\n import React, { useEffect, useState } from \"react\";\r\n import { useRouter } from \"next/navigation\";\r\n-import { connectRoomSocket, disconnectRoomSocket } from \"../../../../features/RoomChat/services/roomSocketService\";\r\n+import { connectRoomSocket, disconnectRoomSocket } from \"../../features/RoomChat/services/roomSocketService\";\r\n \r\n interface Room {\r\n   id: string;\r\n   name: string;\r\n"
                }
            ],
            "date": 1760250096613,
            "name": "Commit-0",
            "content": "\"use client\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport { connectRoomSocket, disconnectRoomSocket } from \"../../\";\r\n\r\ninterface Room {\r\n  id: string;\r\n  name: string;\r\n  topic: string;\r\n  description?: string;\r\n  hasPassword?: boolean;\r\n  users?: { socketId: string }[];\r\n}\r\n\r\nexport default function RoomDashboard() {\r\n  const router = useRouter();\r\n  const [rooms, setRooms] = useState<Room[]>([]);\r\n  const [socket, setSocket] = useState<any>(null);\r\n\r\n  const [newRoom, setNewRoom] = useState({ name: \"\", topic: \"\", description: \"\", password: \"\" });\r\n\r\n  // -----------------------------\r\n  // Connect to /rooms socket\r\n  // -----------------------------\r\n  useEffect(() => {\r\n    const s = connectRoomSocket(\"/rooms\");\r\n    setSocket(s);\r\n\r\n    s.on(\"connected\", () => console.log(\"✅ Connected to /rooms namespace\"));\r\n    s.on(\"rooms\", (list: Room[]) => setRooms(list));\r\n\r\n    return () => {\r\n      disconnectRoomSocket();\r\n      setSocket(null);\r\n    };\r\n  }, []);\r\n\r\n  // -----------------------------\r\n  // Create Room\r\n  // -----------------------------\r\n  const handleCreateRoom = () => {\r\n    if (!newRoom.name || !newRoom.topic) return alert(\"Name & Topic are required\");\r\n    socket.emit(\"create-room\", newRoom);\r\n    setNewRoom({ name: \"\", topic: \"\", description: \"\", password: \"\" });\r\n  };\r\n\r\n  // Listen for room created feedback\r\n  useEffect(() => {\r\n    if (!socket) return;\r\n    socket.on(\"room-created\", (room: Room) => {\r\n      setRooms((prev) => [...prev, room]);\r\n      router.push(`/rooms/${room.id}`);\r\n    });\r\n    socket.on(\"create-room-error\", (err: { message: string }) => {\r\n      alert(\"Error creating room: \" + err.message);\r\n    });\r\n    return () => {\r\n      socket.off(\"room-created\");\r\n      socket.off(\"create-room-error\");\r\n    };\r\n  }, [socket, router]);\r\n\r\n  // -----------------------------\r\n  // Join Room\r\n  // -----------------------------\r\n  const joinRoom = (roomId: string) => {\r\n    router.push(`/rooms/${roomId}`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-6 max-w-4xl mx-auto\">\r\n      <h1 className=\"text-2xl font-bold mb-4\">Room Dashboard</h1>\r\n\r\n      {/* Create Room */}\r\n      <div className=\"bg-gray-100 dark:bg-neutral-800 p-4 rounded-lg mb-6\">\r\n        <h2 className=\"text-xl font-semibold mb-2\">Create a Room</h2>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Room Name\"\r\n          value={newRoom.name}\r\n          onChange={(e) => setNewRoom({ ...newRoom, name: e.target.value })}\r\n          className=\"w-full p-2 mb-2 rounded border\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Topic\"\r\n          value={newRoom.topic}\r\n          onChange={(e) => setNewRoom({ ...newRoom, topic: e.target.value })}\r\n          className=\"w-full p-2 mb-2 rounded border\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Description (optional)\"\r\n          value={newRoom.description}\r\n          onChange={(e) => setNewRoom({ ...newRoom, description: e.target.value })}\r\n          className=\"w-full p-2 mb-2 rounded border\"\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password (optional)\"\r\n          value={newRoom.password}\r\n          onChange={(e) => setNewRoom({ ...newRoom, password: e.target.value })}\r\n          className=\"w-full p-2 mb-2 rounded border\"\r\n        />\r\n        <button\r\n          onClick={handleCreateRoom}\r\n          className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700 disabled:opacity-50\"\r\n        >\r\n          Create Room\r\n        </button>\r\n      </div>\r\n\r\n      {/* Room List */}\r\n      <div className=\"bg-gray-50 dark:bg-neutral-900 p-4 rounded-lg\">\r\n        <h2 className=\"text-xl font-semibold mb-2\">Available Rooms</h2>\r\n        {rooms.length === 0 && <p>No rooms yet. Create one above!</p>}\r\n        <ul className=\"space-y-2\">\r\n          {rooms.map((room) => (\r\n            <li\r\n              key={room.id}\r\n              className=\"p-3 bg-white dark:bg-gray-800 rounded flex justify-between items-center shadow hover:shadow-md cursor-pointer\"\r\n            >\r\n              <div>\r\n                <h3 className=\"font-bold\">{room.name}</h3>\r\n                <p className=\"text-sm\">{room.topic}</p>\r\n                {room.description && <p className=\"text-xs text-gray-500 dark:text-gray-400\">{room.description}</p>}\r\n              </div>\r\n              <button\r\n                onClick={() => joinRoom(room.id)}\r\n                className=\"bg-green-500 text-white px-3 py-1 rounded hover:bg-green-600\"\r\n              >\r\n                Join\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"
        }
    ]
}