{
    "sourceFile": "src/app/rooms/page.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1758888366382,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1758889405116,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,14 +25,18 @@\n     password: \"\",\r\n   });\r\n \r\n   useEffect(() => {\r\n-    // Connect to your signaling server (adjust URL if needed)\r\n+    // Connect to signaling server\r\n     socket = io(process.env.NEXT_PUBLIC_SIGNALING_URL || \"http://localhost:3001\", {\r\n       transports: [\"websocket\"],\r\n     });\r\n \r\n-    socket.emit(\"list-rooms\");\r\n+    socket.on(\"connect\", () => {\r\n+      console.log(\"âœ… Connected to server:\", socket?.id);\r\n+      // Request room list once connected\r\n+      socket?.emit(\"list-rooms\");\r\n+    });\r\n \r\n     socket.on(\"rooms\", (data: Room[]) => setRooms(data));\r\n \r\n     socket.on(\"room-created\", (newRoom: Room) => {\r\n@@ -40,20 +44,23 @@\n     });\r\n \r\n     return () => {\r\n       socket?.disconnect();\r\n+      socket = null;\r\n     };\r\n   }, []);\r\n \r\n   const handleCreateRoom = () => {\r\n     if (!form.name || !form.topic) {\r\n       alert(\"Room name and topic are required\");\r\n       return;\r\n     }\r\n+\r\n     socket?.emit(\"create-room\", {\r\n       ...form,\r\n       password: form.password || null,\r\n     });\r\n+\r\n     setForm({ name: \"\", topic: \"\", description: \"\", password: \"\" });\r\n     setShowModal(false);\r\n   };\r\n \r\n@@ -64,9 +71,8 @@\n       socket?.emit(\"join-room\", { roomId: room.id, password: pass });\r\n     } else {\r\n       socket?.emit(\"join-room\", { roomId: room.id });\r\n     }\r\n-    // Redirect to dedicated room page\r\n     window.location.href = `/rooms/${room.id}`;\r\n   };\r\n \r\n   return (\r\n@@ -115,10 +121,9 @@\n                   <button\r\n                     onClick={() => handleJoinRoom(room)}\r\n                     className=\"px-3 py-1 bg-indigo-600 hover:bg-indigo-700 text-white rounded-md text-sm shadow-sm\"\r\n                   >\r\n-                    Join\r\n-                    {room.hasPassword ? \" ðŸ”’\" : \"\"}\r\n+                    Join{room.hasPassword ? \" ðŸ”’\" : \"\"}\r\n                   </button>\r\n                 </div>\r\n               </motion.div>\r\n             ))}\r\n@@ -159,9 +164,8 @@\n               className=\"w-full mb-4 px-4 py-2 rounded-md border border-neutral-300 dark:border-neutral-700 bg-neutral-100 dark:bg-neutral-800 text-neutral-900 dark:text-white\"\r\n               value={form.password}\r\n               onChange={(e) => setForm({ ...form, password: e.target.value })}\r\n             />\r\n-\r\n             <div className=\"flex justify-end gap-3\">\r\n               <button\r\n                 onClick={() => setShowModal(false)}\r\n                 className=\"px-4 py-2 bg-neutral-300 dark:bg-neutral-700 text-neutral-900 dark:text-white rounded-md\"\r\n"
                }
            ],
            "date": 1758888366382,
            "name": "Commit-0",
            "content": "\"use client\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport { io, Socket } from \"socket.io-client\";\r\nimport { motion } from \"framer-motion\";\r\n\r\ntype Room = {\r\n  id: string;\r\n  name: string;\r\n  topic: string;\r\n  description: string;\r\n  userCount: number;\r\n  hasPassword: boolean;\r\n};\r\n\r\nlet socket: Socket | null = null;\r\n\r\nexport default function RoomsPage() {\r\n  const [rooms, setRooms] = useState<Room[]>([]);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [form, setForm] = useState({\r\n    name: \"\",\r\n    topic: \"\",\r\n    description: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Connect to your signaling server (adjust URL if needed)\r\n    socket = io(process.env.NEXT_PUBLIC_SIGNALING_URL || \"http://localhost:3001\", {\r\n      transports: [\"websocket\"],\r\n    });\r\n\r\n    socket.emit(\"list-rooms\");\r\n\r\n    socket.on(\"rooms\", (data: Room[]) => setRooms(data));\r\n\r\n    socket.on(\"room-created\", (newRoom: Room) => {\r\n      setRooms((prev) => [...prev, newRoom]);\r\n    });\r\n\r\n    return () => {\r\n      socket?.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  const handleCreateRoom = () => {\r\n    if (!form.name || !form.topic) {\r\n      alert(\"Room name and topic are required\");\r\n      return;\r\n    }\r\n    socket?.emit(\"create-room\", {\r\n      ...form,\r\n      password: form.password || null,\r\n    });\r\n    setForm({ name: \"\", topic: \"\", description: \"\", password: \"\" });\r\n    setShowModal(false);\r\n  };\r\n\r\n  const handleJoinRoom = (room: Room) => {\r\n    if (room.hasPassword) {\r\n      const pass = prompt(\"Enter room password\");\r\n      if (!pass) return;\r\n      socket?.emit(\"join-room\", { roomId: room.id, password: pass });\r\n    } else {\r\n      socket?.emit(\"join-room\", { roomId: room.id });\r\n    }\r\n    // Redirect to dedicated room page\r\n    window.location.href = `/rooms/${room.id}`;\r\n  };\r\n\r\n  return (\r\n    <main className=\"min-h-screen bg-gradient-to-br from-purple-50 to-indigo-100 dark:from-neutral-900 dark:to-neutral-800 p-6\">\r\n      <div className=\"max-w-4xl mx-auto\">\r\n        <div className=\"flex items-center justify-between mb-6\">\r\n          <h1 className=\"text-3xl font-bold text-neutral-800 dark:text-white\">\r\n            ðŸ‘¥ Join a Room\r\n          </h1>\r\n          <button\r\n            onClick={() => setShowModal(true)}\r\n            className=\"px-4 py-2 bg-purple-600 hover:bg-purple-700 text-white rounded-lg shadow-md\"\r\n          >\r\n            âž• Create Room\r\n          </button>\r\n        </div>\r\n\r\n        {rooms.length === 0 ? (\r\n          <p className=\"text-center text-neutral-600 dark:text-neutral-300\">\r\n            No rooms available. Create one to get started!\r\n          </p>\r\n        ) : (\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n            {rooms.map((room) => (\r\n              <motion.div\r\n                key={room.id}\r\n                initial={{ opacity: 0, y: 10 }}\r\n                animate={{ opacity: 1, y: 0 }}\r\n                className=\"bg-white dark:bg-neutral-900 p-4 rounded-xl shadow-md flex flex-col justify-between\"\r\n              >\r\n                <div>\r\n                  <h2 className=\"text-xl font-semibold text-neutral-900 dark:text-white\">\r\n                    {room.name}\r\n                  </h2>\r\n                  <p className=\"text-sm text-neutral-600 dark:text-neutral-300\">\r\n                    Topic: {room.topic}\r\n                  </p>\r\n                  <p className=\"text-xs mt-1 text-neutral-500 dark:text-neutral-400 line-clamp-2\">\r\n                    {room.description || \"No description\"}\r\n                  </p>\r\n                </div>\r\n                <div className=\"flex items-center justify-between mt-4\">\r\n                  <span className=\"text-sm text-neutral-700 dark:text-neutral-300\">\r\n                    {room.userCount} {room.userCount === 1 ? \"user\" : \"users\"}\r\n                  </span>\r\n                  <button\r\n                    onClick={() => handleJoinRoom(room)}\r\n                    className=\"px-3 py-1 bg-indigo-600 hover:bg-indigo-700 text-white rounded-md text-sm shadow-sm\"\r\n                  >\r\n                    Join\r\n                    {room.hasPassword ? \" ðŸ”’\" : \"\"}\r\n                  </button>\r\n                </div>\r\n              </motion.div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Create Room Modal */}\r\n      {showModal && (\r\n        <div className=\"fixed inset-0 flex items-center justify-center bg-black/50 z-50\">\r\n          <div className=\"bg-white dark:bg-neutral-900 p-6 rounded-xl shadow-xl w-full max-w-md\">\r\n            <h2 className=\"text-xl font-bold mb-4 text-neutral-900 dark:text-white\">\r\n              Create a Room\r\n            </h2>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Room Name\"\r\n              className=\"w-full mb-3 px-4 py-2 rounded-md border border-neutral-300 dark:border-neutral-700 bg-neutral-100 dark:bg-neutral-800 text-neutral-900 dark:text-white\"\r\n              value={form.name}\r\n              onChange={(e) => setForm({ ...form, name: e.target.value })}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Topic\"\r\n              className=\"w-full mb-3 px-4 py-2 rounded-md border border-neutral-300 dark:border-neutral-700 bg-neutral-100 dark:bg-neutral-800 text-neutral-900 dark:text-white\"\r\n              value={form.topic}\r\n              onChange={(e) => setForm({ ...form, topic: e.target.value })}\r\n            />\r\n            <textarea\r\n              placeholder=\"Description (optional)\"\r\n              className=\"w-full mb-3 px-4 py-2 rounded-md border border-neutral-300 dark:border-neutral-700 bg-neutral-100 dark:bg-neutral-800 text-neutral-900 dark:text-white\"\r\n              value={form.description}\r\n              onChange={(e) => setForm({ ...form, description: e.target.value })}\r\n            />\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Password (optional)\"\r\n              className=\"w-full mb-4 px-4 py-2 rounded-md border border-neutral-300 dark:border-neutral-700 bg-neutral-100 dark:bg-neutral-800 text-neutral-900 dark:text-white\"\r\n              value={form.password}\r\n              onChange={(e) => setForm({ ...form, password: e.target.value })}\r\n            />\r\n\r\n            <div className=\"flex justify-end gap-3\">\r\n              <button\r\n                onClick={() => setShowModal(false)}\r\n                className=\"px-4 py-2 bg-neutral-300 dark:bg-neutral-700 text-neutral-900 dark:text-white rounded-md\"\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button\r\n                onClick={handleCreateRoom}\r\n                className=\"px-4 py-2 bg-purple-600 hover:bg-purple-700 text-white rounded-md shadow-md\"\r\n              >\r\n                Create\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </main>\r\n  );\r\n}\r\n"
        }
    ]
}