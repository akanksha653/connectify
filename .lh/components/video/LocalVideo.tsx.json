{
    "sourceFile": "components/video/LocalVideo.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 20,
            "patches": [
                {
                    "date": 1752230243251,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1752255093678,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,19 +9,37 @@\n export default function LocalVideo({ stream }: LocalVideoProps) {\r\n   const videoRef = useRef<HTMLVideoElement>(null);\r\n \r\n   useEffect(() => {\r\n-    if (videoRef.current && stream) {\r\n-      videoRef.current.srcObject = stream;\r\n+    const videoElement = videoRef.current;\r\n+    if (!videoElement) return;\r\n+\r\n+    if (stream) {\r\n+      videoElement.srcObject = stream;\r\n+    } else {\r\n+      videoElement.srcObject = null;\r\n     }\r\n+\r\n+    return () => {\r\n+      if (videoElement) {\r\n+        videoElement.srcObject = null; // cleanup on unmount\r\n+      }\r\n+    };\r\n   }, [stream]);\r\n \r\n   return (\r\n-    <video\r\n-      ref={videoRef}\r\n-      autoPlay\r\n-      muted\r\n-      playsInline\r\n-      className=\"w-32 h-32 md:w-48 md:h-48 rounded-md object-cover absolute bottom-4 right-4 border-2 border-white\"\r\n-    />\r\n+    <div className=\"relative w-32 h-32 md:w-48 md:h-48 rounded-md overflow-hidden border-2 border-white\">\r\n+      {!stream && (\r\n+        <div className=\"absolute inset-0 flex items-center justify-center bg-neutral-900 bg-opacity-75 text-white text-xs\">\r\n+          Loading...\r\n+        </div>\r\n+      )}\r\n+      <video\r\n+        ref={videoRef}\r\n+        autoPlay\r\n+        muted\r\n+        playsInline\r\n+        className=\"w-full h-full object-cover rounded-md\"\r\n+      />\r\n+    </div>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1752255339265,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,45 +1,71 @@\n \"use client\";\r\n \r\n-import React, { useEffect, useRef } from \"react\";\r\n+import React, { useEffect, useRef, useState } from \"react\";\r\n \r\n interface LocalVideoProps {\r\n   stream: MediaStream | null;\r\n }\r\n \r\n export default function LocalVideo({ stream }: LocalVideoProps) {\r\n   const videoRef = useRef<HTMLVideoElement>(null);\r\n+  const containerRef = useRef<HTMLDivElement>(null);\r\n+  const [position, setPosition] = useState({ x: 20, y: 20 }); // initial bottom-right\r\n+  const [isDragging, setIsDragging] = useState(false);\r\n+  const [offset, setOffset] = useState({ x: 0, y: 0 });\r\n \r\n   useEffect(() => {\r\n-    const videoElement = videoRef.current;\r\n-    if (!videoElement) return;\r\n-\r\n-    if (stream) {\r\n-      videoElement.srcObject = stream;\r\n-    } else {\r\n-      videoElement.srcObject = null;\r\n+    if (videoRef.current && stream) {\r\n+      videoRef.current.srcObject = stream;\r\n     }\r\n-\r\n-    return () => {\r\n-      if (videoElement) {\r\n-        videoElement.srcObject = null; // cleanup on unmount\r\n-      }\r\n-    };\r\n   }, [stream]);\r\n \r\n+  const startDrag = (e: React.PointerEvent<HTMLDivElement>) => {\r\n+    e.preventDefault();\r\n+    setIsDragging(true);\r\n+    const rect = containerRef.current?.getBoundingClientRect();\r\n+    setOffset({\r\n+      x: e.clientX - (rect?.left || 0),\r\n+      y: e.clientY - (rect?.top || 0),\r\n+    });\r\n+  };\r\n+\r\n+  const onDrag = (e: React.PointerEvent<HTMLDivElement>) => {\r\n+    if (!isDragging) return;\r\n+    const parent = containerRef.current?.parentElement?.getBoundingClientRect();\r\n+    const video = containerRef.current?.getBoundingClientRect();\r\n+    if (!parent || !video) return;\r\n+\r\n+    let newX = e.clientX - offset.x - parent.left;\r\n+    let newY = e.clientY - offset.y - parent.top;\r\n+\r\n+    // Restrict within parent bounds\r\n+    newX = Math.max(0, Math.min(newX, parent.width - video.width));\r\n+    newY = Math.max(0, Math.min(newY, parent.height - video.height));\r\n+\r\n+    setPosition({ x: newX, y: newY });\r\n+  };\r\n+\r\n+  const endDrag = () => {\r\n+    setIsDragging(false);\r\n+  };\r\n+\r\n   return (\r\n-    <div className=\"relative w-32 h-32 md:w-48 md:h-48 rounded-md overflow-hidden border-2 border-white\">\r\n-      {!stream && (\r\n-        <div className=\"absolute inset-0 flex items-center justify-center bg-neutral-900 bg-opacity-75 text-white text-xs\">\r\n-          Loading...\r\n-        </div>\r\n-      )}\r\n+    <div\r\n+      ref={containerRef}\r\n+      className=\"absolute cursor-move\"\r\n+      style={{ left: position.x, top: position.y }}\r\n+      onPointerDown={startDrag}\r\n+      onPointerMove={onDrag}\r\n+      onPointerUp={endDrag}\r\n+      onPointerLeave={endDrag}\r\n+    >\r\n       <video\r\n         ref={videoRef}\r\n         autoPlay\r\n         muted\r\n         playsInline\r\n-        className=\"w-full h-full object-cover rounded-md\"\r\n+        className=\"w-32 h-32 md:w-48 md:h-48 rounded-md object-cover border-2 border-white shadow-lg\"\r\n       />\r\n     </div>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1752255401462,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,52 +8,59 @@\n \r\n export default function LocalVideo({ stream }: LocalVideoProps) {\r\n   const videoRef = useRef<HTMLVideoElement>(null);\r\n   const containerRef = useRef<HTMLDivElement>(null);\r\n-  const [position, setPosition] = useState({ x: 20, y: 20 }); // initial bottom-right\r\n+  const [position, setPosition] = useState({ x: 20, y: 20 }); // initial bottom-right offset\r\n   const [isDragging, setIsDragging] = useState(false);\r\n   const [offset, setOffset] = useState({ x: 0, y: 0 });\r\n \r\n+  // Assign stream to video element\r\n   useEffect(() => {\r\n     if (videoRef.current && stream) {\r\n       videoRef.current.srcObject = stream;\r\n     }\r\n   }, [stream]);\r\n \r\n+  // Start dragging\r\n   const startDrag = (e: React.PointerEvent<HTMLDivElement>) => {\r\n     e.preventDefault();\r\n     setIsDragging(true);\r\n     const rect = containerRef.current?.getBoundingClientRect();\r\n     setOffset({\r\n       x: e.clientX - (rect?.left || 0),\r\n       y: e.clientY - (rect?.top || 0),\r\n     });\r\n+    containerRef.current?.setPointerCapture(e.pointerId);\r\n   };\r\n \r\n+  // Handle dragging\r\n   const onDrag = (e: React.PointerEvent<HTMLDivElement>) => {\r\n     if (!isDragging) return;\r\n+\r\n     const parent = containerRef.current?.parentElement?.getBoundingClientRect();\r\n     const video = containerRef.current?.getBoundingClientRect();\r\n     if (!parent || !video) return;\r\n \r\n     let newX = e.clientX - offset.x - parent.left;\r\n     let newY = e.clientY - offset.y - parent.top;\r\n \r\n-    // Restrict within parent bounds\r\n+    // Restrict within parent\r\n     newX = Math.max(0, Math.min(newX, parent.width - video.width));\r\n     newY = Math.max(0, Math.min(newY, parent.height - video.height));\r\n \r\n     setPosition({ x: newX, y: newY });\r\n   };\r\n \r\n-  const endDrag = () => {\r\n+  // End dragging\r\n+  const endDrag = (e: React.PointerEvent<HTMLDivElement>) => {\r\n     setIsDragging(false);\r\n+    containerRef.current?.releasePointerCapture(e.pointerId);\r\n   };\r\n \r\n   return (\r\n     <div\r\n       ref={containerRef}\r\n-      className=\"absolute cursor-move\"\r\n+      className=\"absolute cursor-move z-50\"\r\n       style={{ left: position.x, top: position.y }}\r\n       onPointerDown={startDrag}\r\n       onPointerMove={onDrag}\r\n       onPointerUp={endDrag}\r\n"
                },
                {
                    "date": 1752255459692,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,22 +57,22 @@\n   };\r\n \r\n   return (\r\n     <div\r\n-      ref={containerRef}\r\n-      className=\"absolute cursor-move z-50\"\r\n-      style={{ left: position.x, top: position.y }}\r\n-      onPointerDown={startDrag}\r\n-      onPointerMove={onDrag}\r\n-      onPointerUp={endDrag}\r\n-      onPointerLeave={endDrag}\r\n-    >\r\n-      <video\r\n-        ref={videoRef}\r\n-        autoPlay\r\n-        muted\r\n-        playsInline\r\n-        className=\"w-32 h-32 md:w-48 md:h-48 rounded-md object-cover border-2 border-white shadow-lg\"\r\n-      />\r\n-    </div>\r\n+  ref={containerRef}\r\n+  className=\"absolute cursor-move z-50\"\r\n+  style={{ left: position.x, top: position.y }}\r\n+  onPointerDown={startDrag}\r\n+  onPointerMove={onDrag}\r\n+  onPointerUp={endDrag}\r\n+  onPointerLeave={endDrag}\r\n+>\r\n+  <video\r\n+    ref={videoRef}\r\n+    autoPlay\r\n+    muted\r\n+    playsInline\r\n+    className=\"w-32 h-32 md:w-48 md:h-48 rounded-md object-cover border-2 border-white shadow-lg\"\r\n+  />\r\n+</div>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1752255503071,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,24 +55,25 @@\n     setIsDragging(false);\r\n     containerRef.current?.releasePointerCapture(e.pointerId);\r\n   };\r\n \r\n-  return (\r\n-    <div\r\n-  ref={containerRef}\r\n-  className=\"absolute cursor-move z-50\"\r\n-  style={{ left: position.x, top: position.y }}\r\n-  onPointerDown={startDrag}\r\n-  onPointerMove={onDrag}\r\n-  onPointerUp={endDrag}\r\n-  onPointerLeave={endDrag}\r\n->\r\n-  <video\r\n-    ref={videoRef}\r\n-    autoPlay\r\n-    muted\r\n-    playsInline\r\n-    className=\"w-32 h-32 md:w-48 md:h-48 rounded-md object-cover border-2 border-white shadow-lg\"\r\n-  />\r\n-</div>\r\n-  );\r\n+ return (\r\n+  <div\r\n+    ref={containerRef}\r\n+    className=\"absolute cursor-move z-50\"\r\n+    style={{ left: position.x, top: position.y }}\r\n+    onPointerDown={startDrag}\r\n+    onPointerMove={onDrag}\r\n+    onPointerUp={endDrag}\r\n+    onPointerLeave={endDrag}\r\n+  >\r\n+    <video\r\n+      ref={videoRef}\r\n+      autoPlay\r\n+      muted\r\n+      playsInline\r\n+      className=\"w-32 h-32 md:w-48 md:h-48 rounded-md object-cover border-2 border-white shadow-lg\"\r\n+    />\r\n+  </div>\r\n+);\r\n+\r\n }\r\n"
                },
                {
                    "date": 1752255513984,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,6 +74,5 @@\n       className=\"w-32 h-32 md:w-48 md:h-48 rounded-md object-cover border-2 border-white shadow-lg\"\r\n     />\r\n   </div>\r\n );\r\n-\r\n }\r\n"
                },
                {
                    "date": 1752336192518,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,14 +3,20 @@\n import React, { useEffect, useRef, useState } from \"react\";\r\n \r\n interface LocalVideoProps {\r\n   stream: MediaStream | null;\r\n+  draggable?: boolean;\r\n+  initialPosition?: { x: number; y: number };\r\n }\r\n \r\n-export default function LocalVideo({ stream }: LocalVideoProps) {\r\n+export default function LocalVideo({\r\n+  stream,\r\n+  draggable = true,\r\n+  initialPosition = { x: 20, y: 20 },\r\n+}: LocalVideoProps) {\r\n   const videoRef = useRef<HTMLVideoElement>(null);\r\n   const containerRef = useRef<HTMLDivElement>(null);\r\n-  const [position, setPosition] = useState({ x: 20, y: 20 }); // initial bottom-right offset\r\n+  const [position, setPosition] = useState(initialPosition);\r\n   const [isDragging, setIsDragging] = useState(false);\r\n   const [offset, setOffset] = useState({ x: 0, y: 0 });\r\n \r\n   // Assign stream to video element\r\n@@ -21,30 +27,31 @@\n   }, [stream]);\r\n \r\n   // Start dragging\r\n   const startDrag = (e: React.PointerEvent<HTMLDivElement>) => {\r\n+    if (!draggable) return;\r\n     e.preventDefault();\r\n     setIsDragging(true);\r\n     const rect = containerRef.current?.getBoundingClientRect();\r\n     setOffset({\r\n-      x: e.clientX - (rect?.left || 0),\r\n-      y: e.clientY - (rect?.top || 0),\r\n+      x: e.clientX - (rect?.left ?? 0),\r\n+      y: e.clientY - (rect?.top ?? 0),\r\n     });\r\n     containerRef.current?.setPointerCapture(e.pointerId);\r\n   };\r\n \r\n   // Handle dragging\r\n   const onDrag = (e: React.PointerEvent<HTMLDivElement>) => {\r\n-    if (!isDragging) return;\r\n+    if (!isDragging || !draggable) return;\r\n \r\n     const parent = containerRef.current?.parentElement?.getBoundingClientRect();\r\n     const video = containerRef.current?.getBoundingClientRect();\r\n     if (!parent || !video) return;\r\n \r\n     let newX = e.clientX - offset.x - parent.left;\r\n     let newY = e.clientY - offset.y - parent.top;\r\n \r\n-    // Restrict within parent\r\n+    // Clamp to container bounds\r\n     newX = Math.max(0, Math.min(newX, parent.width - video.width));\r\n     newY = Math.max(0, Math.min(newY, parent.height - video.height));\r\n \r\n     setPosition({ x: newX, y: newY });\r\n@@ -55,24 +62,24 @@\n     setIsDragging(false);\r\n     containerRef.current?.releasePointerCapture(e.pointerId);\r\n   };\r\n \r\n- return (\r\n-  <div\r\n-    ref={containerRef}\r\n-    className=\"absolute cursor-move z-50\"\r\n-    style={{ left: position.x, top: position.y }}\r\n-    onPointerDown={startDrag}\r\n-    onPointerMove={onDrag}\r\n-    onPointerUp={endDrag}\r\n-    onPointerLeave={endDrag}\r\n-  >\r\n-    <video\r\n-      ref={videoRef}\r\n-      autoPlay\r\n-      muted\r\n-      playsInline\r\n-      className=\"w-32 h-32 md:w-48 md:h-48 rounded-md object-cover border-2 border-white shadow-lg\"\r\n-    />\r\n-  </div>\r\n-);\r\n+  return (\r\n+    <div\r\n+      ref={containerRef}\r\n+      className={`absolute z-50 transition-transform duration-75 ${draggable ? \"cursor-grab active:cursor-grabbing\" : \"\"}`}\r\n+      style={{ left: position.x, top: position.y }}\r\n+      onPointerDown={startDrag}\r\n+      onPointerMove={onDrag}\r\n+      onPointerUp={endDrag}\r\n+      onPointerLeave={endDrag}\r\n+    >\r\n+      <video\r\n+        ref={videoRef}\r\n+        autoPlay\r\n+        muted\r\n+        playsInline\r\n+        className=\"w-32 h-32 md:w-44 md:h-44 lg:w-56 lg:h-56 rounded-lg object-cover border-2 border-white shadow-xl\"\r\n+      />\r\n+    </div>\r\n+  );\r\n }\r\n"
                },
                {
                    "date": 1752338744424,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,65 +10,64 @@\n \r\n export default function LocalVideo({\r\n   stream,\r\n   draggable = true,\r\n-  initialPosition = { x: 20, y: 20 },\r\n+  initialPosition = { x: 20, y: 100 },\r\n }: LocalVideoProps) {\r\n   const videoRef = useRef<HTMLVideoElement>(null);\r\n   const containerRef = useRef<HTMLDivElement>(null);\r\n   const [position, setPosition] = useState(initialPosition);\r\n   const [isDragging, setIsDragging] = useState(false);\r\n-  const [offset, setOffset] = useState({ x: 0, y: 0 });\r\n+  const [offsetY, setOffsetY] = useState(0);\r\n \r\n-  // Assign stream to video element\r\n+  // Assign stream to video\r\n   useEffect(() => {\r\n     if (videoRef.current && stream) {\r\n       videoRef.current.srcObject = stream;\r\n     }\r\n   }, [stream]);\r\n \r\n-  // Start dragging\r\n+  // Start drag (vertical only)\r\n   const startDrag = (e: React.PointerEvent<HTMLDivElement>) => {\r\n     if (!draggable) return;\r\n     e.preventDefault();\r\n     setIsDragging(true);\r\n     const rect = containerRef.current?.getBoundingClientRect();\r\n-    setOffset({\r\n-      x: e.clientX - (rect?.left ?? 0),\r\n-      y: e.clientY - (rect?.top ?? 0),\r\n-    });\r\n+    setOffsetY(e.clientY - (rect?.top ?? 0));\r\n     containerRef.current?.setPointerCapture(e.pointerId);\r\n   };\r\n \r\n-  // Handle dragging\r\n+  // While dragging (vertical movement only)\r\n   const onDrag = (e: React.PointerEvent<HTMLDivElement>) => {\r\n     if (!isDragging || !draggable) return;\r\n \r\n     const parent = containerRef.current?.parentElement?.getBoundingClientRect();\r\n-    const video = containerRef.current?.getBoundingClientRect();\r\n-    if (!parent || !video) return;\r\n+    const box = containerRef.current?.getBoundingClientRect();\r\n+    if (!parent || !box) return;\r\n \r\n-    let newX = e.clientX - offset.x - parent.left;\r\n-    let newY = e.clientY - offset.y - parent.top;\r\n+    let newY = e.clientY - offsetY - parent.top;\r\n+    newY = Math.max(0, Math.min(newY, parent.height - box.height));\r\n \r\n-    // Clamp to container bounds\r\n-    newX = Math.max(0, Math.min(newX, parent.width - video.width));\r\n-    newY = Math.max(0, Math.min(newY, parent.height - video.height));\r\n-\r\n-    setPosition({ x: newX, y: newY });\r\n+    setPosition((prev) => ({ ...prev, y: newY }));\r\n   };\r\n \r\n-  // End dragging\r\n   const endDrag = (e: React.PointerEvent<HTMLDivElement>) => {\r\n     setIsDragging(false);\r\n     containerRef.current?.releasePointerCapture(e.pointerId);\r\n   };\r\n \r\n   return (\r\n     <div\r\n       ref={containerRef}\r\n-      className={`absolute z-50 transition-transform duration-75 ${draggable ? \"cursor-grab active:cursor-grabbing\" : \"\"}`}\r\n-      style={{ left: position.x, top: position.y }}\r\n+      className={`absolute z-50 transition-transform duration-75 ${\r\n+        draggable ? \"cursor-grab active:cursor-grabbing\" : \"\"\r\n+      }`}\r\n+      style={{\r\n+        left: position.x,\r\n+        top: position.y,\r\n+        width: \"160px\",\r\n+        height: \"160px\",\r\n+      }}\r\n       onPointerDown={startDrag}\r\n       onPointerMove={onDrag}\r\n       onPointerUp={endDrag}\r\n       onPointerLeave={endDrag}\r\n@@ -77,9 +76,9 @@\n         ref={videoRef}\r\n         autoPlay\r\n         muted\r\n         playsInline\r\n-        className=\"w-32 h-32 md:w-44 md:h-44 lg:w-56 lg:h-56 rounded-lg object-cover border-2 border-white shadow-xl\"\r\n+        className=\"w-full h-full rounded-lg object-cover border-2 border-white shadow-lg pointer-events-none\"\r\n       />\r\n     </div>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1752339173759,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,20 +14,18 @@\n   initialPosition = { x: 20, y: 100 },\r\n }: LocalVideoProps) {\r\n   const videoRef = useRef<HTMLVideoElement>(null);\r\n   const containerRef = useRef<HTMLDivElement>(null);\r\n-  const [position, setPosition] = useState(initialPosition);\r\n+  const [positionY, setPositionY] = useState(initialPosition.y);\r\n   const [isDragging, setIsDragging] = useState(false);\r\n   const [offsetY, setOffsetY] = useState(0);\r\n \r\n-  // Assign stream to video\r\n   useEffect(() => {\r\n     if (videoRef.current && stream) {\r\n       videoRef.current.srcObject = stream;\r\n     }\r\n   }, [stream]);\r\n \r\n-  // Start drag (vertical only)\r\n   const startDrag = (e: React.PointerEvent<HTMLDivElement>) => {\r\n     if (!draggable) return;\r\n     e.preventDefault();\r\n     setIsDragging(true);\r\n@@ -35,20 +33,18 @@\n     setOffsetY(e.clientY - (rect?.top ?? 0));\r\n     containerRef.current?.setPointerCapture(e.pointerId);\r\n   };\r\n \r\n-  // While dragging (vertical movement only)\r\n   const onDrag = (e: React.PointerEvent<HTMLDivElement>) => {\r\n     if (!isDragging || !draggable) return;\r\n-\r\n     const parent = containerRef.current?.parentElement?.getBoundingClientRect();\r\n     const box = containerRef.current?.getBoundingClientRect();\r\n     if (!parent || !box) return;\r\n \r\n     let newY = e.clientY - offsetY - parent.top;\r\n     newY = Math.max(0, Math.min(newY, parent.height - box.height));\r\n \r\n-    setPosition((prev) => ({ ...prev, y: newY }));\r\n+    setPositionY(newY);\r\n   };\r\n \r\n   const endDrag = (e: React.PointerEvent<HTMLDivElement>) => {\r\n     setIsDragging(false);\r\n@@ -57,16 +53,14 @@\n \r\n   return (\r\n     <div\r\n       ref={containerRef}\r\n-      className={`absolute z-50 transition-transform duration-75 ${\r\n-        draggable ? \"cursor-grab active:cursor-grabbing\" : \"\"\r\n-      }`}\r\n+      className=\"absolute z-50 cursor-grab active:cursor-grabbing\"\r\n       style={{\r\n-        left: position.x,\r\n-        top: position.y,\r\n-        width: \"160px\",\r\n-        height: \"160px\",\r\n+        left: initialPosition.x,\r\n+        top: positionY,\r\n+        width: 180,\r\n+        height: 180,\r\n       }}\r\n       onPointerDown={startDrag}\r\n       onPointerMove={onDrag}\r\n       onPointerUp={endDrag}\r\n@@ -76,9 +70,10 @@\n         ref={videoRef}\r\n         autoPlay\r\n         muted\r\n         playsInline\r\n-        className=\"w-full h-full rounded-lg object-cover border-2 border-white shadow-lg pointer-events-none\"\r\n+        className=\"w-full h-full object-cover rounded-lg border-2 border-white shadow-lg pointer-events-none\"\r\n+        style={{ resize: \"none\" }}\r\n       />\r\n     </div>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1752339496914,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,79 +1,29 @@\n \"use client\";\r\n \r\n-import React, { useEffect, useRef, useState } from \"react\";\r\n+import React, { useEffect, useRef } from \"react\";\r\n \r\n interface LocalVideoProps {\r\n   stream: MediaStream | null;\r\n-  draggable?: boolean;\r\n-  initialPosition?: { x: number; y: number };\r\n }\r\n \r\n-export default function LocalVideo({\r\n-  stream,\r\n-  draggable = true,\r\n-  initialPosition = { x: 20, y: 100 },\r\n-}: LocalVideoProps) {\r\n+export default function LocalVideo({ stream }: LocalVideoProps) {\r\n   const videoRef = useRef<HTMLVideoElement>(null);\r\n-  const containerRef = useRef<HTMLDivElement>(null);\r\n-  const [positionY, setPositionY] = useState(initialPosition.y);\r\n-  const [isDragging, setIsDragging] = useState(false);\r\n-  const [offsetY, setOffsetY] = useState(0);\r\n \r\n   useEffect(() => {\r\n     if (videoRef.current && stream) {\r\n       videoRef.current.srcObject = stream;\r\n     }\r\n   }, [stream]);\r\n \r\n-  const startDrag = (e: React.PointerEvent<HTMLDivElement>) => {\r\n-    if (!draggable) return;\r\n-    e.preventDefault();\r\n-    setIsDragging(true);\r\n-    const rect = containerRef.current?.getBoundingClientRect();\r\n-    setOffsetY(e.clientY - (rect?.top ?? 0));\r\n-    containerRef.current?.setPointerCapture(e.pointerId);\r\n-  };\r\n-\r\n-  const onDrag = (e: React.PointerEvent<HTMLDivElement>) => {\r\n-    if (!isDragging || !draggable) return;\r\n-    const parent = containerRef.current?.parentElement?.getBoundingClientRect();\r\n-    const box = containerRef.current?.getBoundingClientRect();\r\n-    if (!parent || !box) return;\r\n-\r\n-    let newY = e.clientY - offsetY - parent.top;\r\n-    newY = Math.max(0, Math.min(newY, parent.height - box.height));\r\n-\r\n-    setPositionY(newY);\r\n-  };\r\n-\r\n-  const endDrag = (e: React.PointerEvent<HTMLDivElement>) => {\r\n-    setIsDragging(false);\r\n-    containerRef.current?.releasePointerCapture(e.pointerId);\r\n-  };\r\n-\r\n   return (\r\n-    <div\r\n-      ref={containerRef}\r\n-      className=\"absolute z-50 cursor-grab active:cursor-grabbing\"\r\n-      style={{\r\n-        left: initialPosition.x,\r\n-        top: positionY,\r\n-        width: 180,\r\n-        height: 180,\r\n-      }}\r\n-      onPointerDown={startDrag}\r\n-      onPointerMove={onDrag}\r\n-      onPointerUp={endDrag}\r\n-      onPointerLeave={endDrag}\r\n-    >\r\n+    <div className=\"fixed bottom-5 right-5 w-64 h-64 z-50\">\r\n       <video\r\n         ref={videoRef}\r\n         autoPlay\r\n         muted\r\n         playsInline\r\n-        className=\"w-full h-full object-cover rounded-lg border-2 border-white shadow-lg pointer-events-none\"\r\n-        style={{ resize: \"none\" }}\r\n+        className=\"w-full h-full object-cover rounded-lg border-2 border-white shadow-lg\"\r\n       />\r\n     </div>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1752340628051,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,29 +1,79 @@\n \"use client\";\r\n \r\n-import React, { useEffect, useRef } from \"react\";\r\n+import React, { useEffect, useRef, useState } from \"react\";\r\n \r\n interface LocalVideoProps {\r\n   stream: MediaStream | null;\r\n+  draggable?: boolean;\r\n+  initialPosition?: { x: number; y: number };\r\n }\r\n \r\n-export default function LocalVideo({ stream }: LocalVideoProps) {\r\n+export default function LocalVideo({\r\n+  stream,\r\n+  draggable = true,\r\n+  initialPosition = { x: 20, y: 100 },\r\n+}: LocalVideoProps) {\r\n   const videoRef = useRef<HTMLVideoElement>(null);\r\n+  const containerRef = useRef<HTMLDivElement>(null);\r\n+  const [positionY, setPositionY] = useState(initialPosition.y);\r\n+  const [isDragging, setIsDragging] = useState(false);\r\n+  const [offsetY, setOffsetY] = useState(0);\r\n \r\n   useEffect(() => {\r\n     if (videoRef.current && stream) {\r\n       videoRef.current.srcObject = stream;\r\n     }\r\n   }, [stream]);\r\n \r\n+  const startDrag = (e: React.PointerEvent<HTMLDivElement>) => {\r\n+    if (!draggable) return;\r\n+    e.preventDefault();\r\n+    setIsDragging(true);\r\n+    const rect = containerRef.current?.getBoundingClientRect();\r\n+    setOffsetY(e.clientY - (rect?.top ?? 0));\r\n+    containerRef.current?.setPointerCapture(e.pointerId);\r\n+  };\r\n+\r\n+  const onDrag = (e: React.PointerEvent<HTMLDivElement>) => {\r\n+    if (!isDragging || !draggable) return;\r\n+    const parent = containerRef.current?.parentElement?.getBoundingClientRect();\r\n+    const box = containerRef.current?.getBoundingClientRect();\r\n+    if (!parent || !box) return;\r\n+\r\n+    let newY = e.clientY - offsetY - parent.top;\r\n+    newY = Math.max(0, Math.min(newY, parent.height - box.height));\r\n+\r\n+    setPositionY(newY);\r\n+  };\r\n+\r\n+  const endDrag = (e: React.PointerEvent<HTMLDivElement>) => {\r\n+    setIsDragging(false);\r\n+    containerRef.current?.releasePointerCapture(e.pointerId);\r\n+  };\r\n+\r\n   return (\r\n-    <div className=\"fixed bottom-5 right-5 w-64 h-64 z-50\">\r\n+    <div\r\n+      ref={containerRef}\r\n+      className=\"absolute z-50 cursor-grab active:cursor-grabbing\"\r\n+      style={{\r\n+        left: initialPosition.x,\r\n+        top: positionY,\r\n+        width: 180,\r\n+        height: 180,\r\n+      }}\r\n+      onPointerDown={startDrag}\r\n+      onPointerMove={onDrag}\r\n+      onPointerUp={endDrag}\r\n+      onPointerLeave={endDrag}\r\n+    >\r\n       <video\r\n         ref={videoRef}\r\n         autoPlay\r\n         muted\r\n         playsInline\r\n-        className=\"w-full h-full object-cover rounded-lg border-2 border-white shadow-lg\"\r\n+        className=\"w-full h-full object-cover rounded-lg border-2 border-white shadow-lg pointer-events-none\"\r\n+        style={{ resize: \"none\" }}\r\n       />\r\n     </div>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1752340778655,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,79 +1,32 @@\n \"use client\";\r\n \r\n-import React, { useEffect, useRef, useState } from \"react\";\r\n+import React, { useEffect, useRef } from \"react\";\r\n \r\n interface LocalVideoProps {\r\n   stream: MediaStream | null;\r\n-  draggable?: boolean;\r\n-  initialPosition?: { x: number; y: number };\r\n }\r\n \r\n-export default function LocalVideo({\r\n-  stream,\r\n-  draggable = true,\r\n-  initialPosition = { x: 20, y: 100 },\r\n-}: LocalVideoProps) {\r\n+export default function LocalVideo({ stream }: LocalVideoProps) {\r\n   const videoRef = useRef<HTMLVideoElement>(null);\r\n-  const containerRef = useRef<HTMLDivElement>(null);\r\n-  const [positionY, setPositionY] = useState(initialPosition.y);\r\n-  const [isDragging, setIsDragging] = useState(false);\r\n-  const [offsetY, setOffsetY] = useState(0);\r\n \r\n   useEffect(() => {\r\n     if (videoRef.current && stream) {\r\n       videoRef.current.srcObject = stream;\r\n     }\r\n   }, [stream]);\r\n \r\n-  const startDrag = (e: React.PointerEvent<HTMLDivElement>) => {\r\n-    if (!draggable) return;\r\n-    e.preventDefault();\r\n-    setIsDragging(true);\r\n-    const rect = containerRef.current?.getBoundingClientRect();\r\n-    setOffsetY(e.clientY - (rect?.top ?? 0));\r\n-    containerRef.current?.setPointerCapture(e.pointerId);\r\n-  };\r\n-\r\n-  const onDrag = (e: React.PointerEvent<HTMLDivElement>) => {\r\n-    if (!isDragging || !draggable) return;\r\n-    const parent = containerRef.current?.parentElement?.getBoundingClientRect();\r\n-    const box = containerRef.current?.getBoundingClientRect();\r\n-    if (!parent || !box) return;\r\n-\r\n-    let newY = e.clientY - offsetY - parent.top;\r\n-    newY = Math.max(0, Math.min(newY, parent.height - box.height));\r\n-\r\n-    setPositionY(newY);\r\n-  };\r\n-\r\n-  const endDrag = (e: React.PointerEvent<HTMLDivElement>) => {\r\n-    setIsDragging(false);\r\n-    containerRef.current?.releasePointerCapture(e.pointerId);\r\n-  };\r\n-\r\n   return (\r\n     <div\r\n-      ref={containerRef}\r\n-      className=\"absolute z-50 cursor-grab active:cursor-grabbing\"\r\n-      style={{\r\n-        left: initialPosition.x,\r\n-        top: positionY,\r\n-        width: 180,\r\n-        height: 180,\r\n-      }}\r\n-      onPointerDown={startDrag}\r\n-      onPointerMove={onDrag}\r\n-      onPointerUp={endDrag}\r\n-      onPointerLeave={endDrag}\r\n+      className=\"absolute top-4 left-4 z-50\"\r\n+      style={{ width: 400, height: 400 }}\r\n     >\r\n       <video\r\n         ref={videoRef}\r\n         autoPlay\r\n         muted\r\n         playsInline\r\n-        className=\"w-full h-full object-cover rounded-lg border-2 border-white shadow-lg pointer-events-none\"\r\n-        style={{ resize: \"none\" }}\r\n+        className=\"w-full h-full object-cover rounded-lg border-2 border-white shadow-lg\"\r\n       />\r\n     </div>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1752340970254,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,32 +1,79 @@\n \"use client\";\r\n \r\n-import React, { useEffect, useRef } from \"react\";\r\n+import React, { useEffect, useRef, useState } from \"react\";\r\n \r\n interface LocalVideoProps {\r\n   stream: MediaStream | null;\r\n+  draggable?: boolean;\r\n+  initialPosition?: { x: number; y: number };\r\n }\r\n \r\n-export default function LocalVideo({ stream }: LocalVideoProps) {\r\n+export default function LocalVideo({\r\n+  stream,\r\n+  draggable = true,\r\n+  initialPosition = { x: 20, y: 100 },\r\n+}: LocalVideoProps) {\r\n   const videoRef = useRef<HTMLVideoElement>(null);\r\n+  const containerRef = useRef<HTMLDivElement>(null);\r\n+  const [positionY, setPositionY] = useState(initialPosition.y);\r\n+  const [isDragging, setIsDragging] = useState(false);\r\n+  const [offsetY, setOffsetY] = useState(0);\r\n \r\n   useEffect(() => {\r\n     if (videoRef.current && stream) {\r\n       videoRef.current.srcObject = stream;\r\n     }\r\n   }, [stream]);\r\n \r\n+  const startDrag = (e: React.PointerEvent<HTMLDivElement>) => {\r\n+    if (!draggable) return;\r\n+    e.preventDefault();\r\n+    setIsDragging(true);\r\n+    const rect = containerRef.current?.getBoundingClientRect();\r\n+    setOffsetY(e.clientY - (rect?.top ?? 0));\r\n+    containerRef.current?.setPointerCapture(e.pointerId);\r\n+  };\r\n+\r\n+  const onDrag = (e: React.PointerEvent<HTMLDivElement>) => {\r\n+    if (!isDragging || !draggable) return;\r\n+    const parent = containerRef.current?.parentElement?.getBoundingClientRect();\r\n+    const box = containerRef.current?.getBoundingClientRect();\r\n+    if (!parent || !box) return;\r\n+\r\n+    let newY = e.clientY - offsetY - parent.top;\r\n+    newY = Math.max(0, Math.min(newY, parent.height - box.height));\r\n+\r\n+    setPositionY(newY);\r\n+  };\r\n+\r\n+  const endDrag = (e: React.PointerEvent<HTMLDivElement>) => {\r\n+    setIsDragging(false);\r\n+    containerRef.current?.releasePointerCapture(e.pointerId);\r\n+  };\r\n+\r\n   return (\r\n     <div\r\n-      className=\"absolute top-4 left-4 z-50\"\r\n-      style={{ width: 400, height: 400 }}\r\n+      ref={containerRef}\r\n+      className=\"absolute z-50 cursor-grab active:cursor-grabbing\"\r\n+      style={{\r\n+        left: initialPosition.x,\r\n+        top: positionY,\r\n+        width: 180,\r\n+        height: 180,\r\n+      }}\r\n+      onPointerDown={startDrag}\r\n+      onPointerMove={onDrag}\r\n+      onPointerUp={endDrag}\r\n+      onPointerLeave={endDrag}\r\n     >\r\n       <video\r\n         ref={videoRef}\r\n         autoPlay\r\n         muted\r\n         playsInline\r\n-        className=\"w-full h-full object-cover rounded-lg border-2 border-white shadow-lg\"\r\n+        className=\"w-full h-full object-cover rounded-lg border-2 border-white shadow-lg pointer-events-none\"\r\n+        style={{ resize: \"none\" }}\r\n       />\r\n     </div>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1752341174034,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,79 +1,32 @@\n \"use client\";\r\n \r\n-import React, { useEffect, useRef, useState } from \"react\";\r\n+import React, { useEffect, useRef } from \"react\";\r\n \r\n interface LocalVideoProps {\r\n   stream: MediaStream | null;\r\n-  draggable?: boolean;\r\n-  initialPosition?: { x: number; y: number };\r\n }\r\n \r\n-export default function LocalVideo({\r\n-  stream,\r\n-  draggable = true,\r\n-  initialPosition = { x: 20, y: 100 },\r\n-}: LocalVideoProps) {\r\n+export default function LocalVideo({ stream }: LocalVideoProps) {\r\n   const videoRef = useRef<HTMLVideoElement>(null);\r\n-  const containerRef = useRef<HTMLDivElement>(null);\r\n-  const [positionY, setPositionY] = useState(initialPosition.y);\r\n-  const [isDragging, setIsDragging] = useState(false);\r\n-  const [offsetY, setOffsetY] = useState(0);\r\n \r\n   useEffect(() => {\r\n     if (videoRef.current && stream) {\r\n       videoRef.current.srcObject = stream;\r\n     }\r\n   }, [stream]);\r\n \r\n-  const startDrag = (e: React.PointerEvent<HTMLDivElement>) => {\r\n-    if (!draggable) return;\r\n-    e.preventDefault();\r\n-    setIsDragging(true);\r\n-    const rect = containerRef.current?.getBoundingClientRect();\r\n-    setOffsetY(e.clientY - (rect?.top ?? 0));\r\n-    containerRef.current?.setPointerCapture(e.pointerId);\r\n-  };\r\n-\r\n-  const onDrag = (e: React.PointerEvent<HTMLDivElement>) => {\r\n-    if (!isDragging || !draggable) return;\r\n-    const parent = containerRef.current?.parentElement?.getBoundingClientRect();\r\n-    const box = containerRef.current?.getBoundingClientRect();\r\n-    if (!parent || !box) return;\r\n-\r\n-    let newY = e.clientY - offsetY - parent.top;\r\n-    newY = Math.max(0, Math.min(newY, parent.height - box.height));\r\n-\r\n-    setPositionY(newY);\r\n-  };\r\n-\r\n-  const endDrag = (e: React.PointerEvent<HTMLDivElement>) => {\r\n-    setIsDragging(false);\r\n-    containerRef.current?.releasePointerCapture(e.pointerId);\r\n-  };\r\n-\r\n   return (\r\n     <div\r\n-      ref={containerRef}\r\n-      className=\"absolute z-50 cursor-grab active:cursor-grabbing\"\r\n-      style={{\r\n-        left: initialPosition.x,\r\n-        top: positionY,\r\n-        width: 180,\r\n-        height: 180,\r\n-      }}\r\n-      onPointerDown={startDrag}\r\n-      onPointerMove={onDrag}\r\n-      onPointerUp={endDrag}\r\n-      onPointerLeave={endDrag}\r\n+      className=\"absolute top-4 left-4 z-50\"\r\n+      style={{ width: 144, height: 144 }}\r\n     >\r\n       <video\r\n         ref={videoRef}\r\n         autoPlay\r\n         muted\r\n         playsInline\r\n-        className=\"w-full h-full object-cover rounded-lg border-2 border-white shadow-lg pointer-events-none\"\r\n-        style={{ resize: \"none\" }}\r\n+        className=\"w-full h-full object-cover rounded-lg border-2 border-white shadow-lg\"\r\n       />\r\n     </div>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1752341509158,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,18 +15,20 @@\n     }\r\n   }, [stream]);\r\n \r\n   return (\r\n-    <div\r\n-      className=\"absolute top-4 left-4 z-50\"\r\n-      style={{ width: 144, height: 144 }}\r\n-    >\r\n-      <video\r\n-        ref={videoRef}\r\n-        autoPlay\r\n-        muted\r\n-        playsInline\r\n-        className=\"w-full h-full object-cover rounded-lg border-2 border-white shadow-lg\"\r\n-      />\r\n+    <div className=\"absolute bottom-5 right-5 w-36 h-36 border-2 border-white rounded overflow-hidden\">\r\n+      <div\r\n+        className=\"absolute top-4 left-4 z-50\"\r\n+        style={{ width: 144, height: 144 }}\r\n+      >\r\n+        <video\r\n+          ref={videoRef}\r\n+          autoPlay\r\n+          muted\r\n+          playsInline\r\n+          className=\"w-full h-full object-cover rounded-lg border-2 border-white shadow-lg\"\r\n+        />\r\n+      </div>\r\n     </div>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1752341611879,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n           ref={videoRef}\r\n           autoPlay\r\n           muted\r\n           playsInline\r\n-          className=\"w-full h-full object-cover rounded-lg border-2 border-white shadow-lg\"\r\n+          className=\"w-full h-full object-cover rounded-lg border-2 shadow-lg\"\r\n         />\r\n       </div>\r\n     </div>\r\n   );\r\n"
                },
                {
                    "date": 1752341628641,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n     }\r\n   }, [stream]);\r\n \r\n   return (\r\n-    <div className=\"absolute bottom-5 right-5 w-36 h-36 border-2 border-white rounded overflow-hidden\">\r\n+    <div className=\"absolute bottom-5 right-5 w-36 h-36 border-2 rounded overflow-hidden\">\r\n       <div\r\n         className=\"absolute top-4 left-4 z-50\"\r\n         style={{ width: 144, height: 144 }}\r\n       >\r\n"
                },
                {
                    "date": 1752341773645,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n     }\r\n   }, [stream]);\r\n \r\n   return (\r\n-    <div className=\"absolute bottom-5 right-5 w-36 h-36 border-2 rounded overflow-hidden\">\r\n+    <div className=\"absolute bottom-5 right-5 w-36 h-36 rounded overflow-hidden\">\r\n       <div\r\n         className=\"absolute top-4 left-4 z-50\"\r\n         style={{ width: 144, height: 144 }}\r\n       >\r\n@@ -25,9 +25,9 @@\n           ref={videoRef}\r\n           autoPlay\r\n           muted\r\n           playsInline\r\n-          className=\"w-full h-full object-cover rounded-lg border-2 shadow-lg\"\r\n+          className=\"w-full h-full object-cover rounded-lg shadow-lg\"\r\n         />\r\n       </div>\r\n     </div>\r\n   );\r\n"
                },
                {
                    "date": 1752418824366,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,20 +15,15 @@\n     }\r\n   }, [stream]);\r\n \r\n   return (\r\n-    <div className=\"absolute bottom-5 right-5 w-36 h-36 rounded overflow-hidden\">\r\n-      <div\r\n-        className=\"absolute top-4 left-4 z-50\"\r\n-        style={{ width: 144, height: 144 }}\r\n-      >\r\n-        <video\r\n-          ref={videoRef}\r\n-          autoPlay\r\n-          muted\r\n-          playsInline\r\n-          className=\"w-full h-full object-cover rounded-lg shadow-lg\"\r\n-        />\r\n-      </div>\r\n+    <div className=\"w-full h-full\">\r\n+      <video\r\n+        ref={videoRef}\r\n+        autoPlay\r\n+        muted\r\n+        playsInline\r\n+        className=\"w-full h-full object-cover rounded-xl border-2 border-white shadow-lg\"\r\n+      />\r\n     </div>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1752603425188,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,15 +15,15 @@\n     }\r\n   }, [stream]);\r\n \r\n   return (\r\n-    <div className=\"w-full h-full\">\r\n+    <div className=\"w-full h-full overflow-hidden rounded-xl border-2 border-white shadow-lg\">\r\n       <video\r\n         ref={videoRef}\r\n         autoPlay\r\n         muted\r\n         playsInline\r\n-        className=\"w-full h-full object-cover rounded-xl border-2 border-white shadow-lg\"\r\n+        className=\"w-full h-full object-cover rounded-xl\"\r\n       />\r\n     </div>\r\n   );\r\n }\r\n"
                }
            ],
            "date": 1752230243251,
            "name": "Commit-0",
            "content": "\"use client\";\r\n\r\nimport React, { useEffect, useRef } from \"react\";\r\n\r\ninterface LocalVideoProps {\r\n  stream: MediaStream | null;\r\n}\r\n\r\nexport default function LocalVideo({ stream }: LocalVideoProps) {\r\n  const videoRef = useRef<HTMLVideoElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (videoRef.current && stream) {\r\n      videoRef.current.srcObject = stream;\r\n    }\r\n  }, [stream]);\r\n\r\n  return (\r\n    <video\r\n      ref={videoRef}\r\n      autoPlay\r\n      muted\r\n      playsInline\r\n      className=\"w-32 h-32 md:w-48 md:h-48 rounded-md object-cover absolute bottom-4 right-4 border-2 border-white\"\r\n    />\r\n  );\r\n}\r\n"
        }
    ]
}