{
    "sourceFile": "components/video/RemoteVideo.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1752230250267,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1752255138966,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,18 +9,37 @@\n export default function RemoteVideo({ stream }: RemoteVideoProps) {\r\n   const videoRef = useRef<HTMLVideoElement>(null);\r\n \r\n   useEffect(() => {\r\n-    if (videoRef.current && stream) {\r\n-      videoRef.current.srcObject = stream;\r\n+    const videoElement = videoRef.current;\r\n+\r\n+    if (!videoElement) return;\r\n+\r\n+    if (stream) {\r\n+      videoElement.srcObject = stream;\r\n+    } else {\r\n+      videoElement.srcObject = null;\r\n     }\r\n+\r\n+    return () => {\r\n+      if (videoElement) {\r\n+        videoElement.srcObject = null; // cleanup on unmount\r\n+      }\r\n+    };\r\n   }, [stream]);\r\n \r\n   return (\r\n-    <video\r\n-      ref={videoRef}\r\n-      autoPlay\r\n-      playsInline\r\n-      className=\"w-full h-full object-cover\"\r\n-    />\r\n+    <div className=\"relative w-full h-full bg-black\">\r\n+      {!stream && (\r\n+        <div className=\"absolute inset-0 flex items-center justify-center text-white text-sm bg-neutral-900 bg-opacity-80\">\r\n+          Waiting for partner...\r\n+        </div>\r\n+      )}\r\n+      <video\r\n+        ref={videoRef}\r\n+        autoPlay\r\n+        playsInline\r\n+        className=\"w-full h-full object-cover\"\r\n+      />\r\n+    </div>\r\n   );\r\n }\r\n"
                }
            ],
            "date": 1752230250267,
            "name": "Commit-0",
            "content": "\"use client\";\r\n\r\nimport React, { useEffect, useRef } from \"react\";\r\n\r\ninterface RemoteVideoProps {\r\n  stream: MediaStream | null;\r\n}\r\n\r\nexport default function RemoteVideo({ stream }: RemoteVideoProps) {\r\n  const videoRef = useRef<HTMLVideoElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (videoRef.current && stream) {\r\n      videoRef.current.srcObject = stream;\r\n    }\r\n  }, [stream]);\r\n\r\n  return (\r\n    <video\r\n      ref={videoRef}\r\n      autoPlay\r\n      playsInline\r\n      className=\"w-full h-full object-cover\"\r\n    />\r\n  );\r\n}\r\n"
        }
    ]
}