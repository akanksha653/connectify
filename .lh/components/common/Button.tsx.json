{
    "sourceFile": "components/common/Button.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 7,
            "patches": [
                {
                    "date": 1752230264857,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1752253599690,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,18 +1,56 @@\n \"use client\";\r\n \r\n import React from \"react\";\r\n+import { cn } from \"@/utils/cn\"; // Optional: if you use classnames utility\r\n \r\n interface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\r\n   label: string;\r\n+  icon?: React.ReactNode;\r\n+  loading?: boolean;\r\n }\r\n \r\n-export default function Button({ label, ...props }: ButtonProps) {\r\n+export default function Button({\r\n+  label,\r\n+  icon,\r\n+  loading = false,\r\n+  disabled,\r\n+  className,\r\n+  ...props\r\n+}: ButtonProps) {\r\n   return (\r\n     <button\r\n+      disabled={disabled || loading}\r\n       {...props}\r\n-      className=\"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-md text-sm font-medium transition disabled:opacity-50 disabled:cursor-not-allowed\"\r\n+      className={cn(\r\n+        \"inline-flex items-center justify-center bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-md text-sm font-medium transition disabled:opacity-50 disabled:cursor-not-allowed focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\",\r\n+        className\r\n+      )}\r\n     >\r\n+      {loading ? (\r\n+        <svg\r\n+          className=\"animate-spin h-4 w-4 mr-2 text-white\"\r\n+          xmlns=\"http://www.w3.org/2000/svg\"\r\n+          fill=\"none\"\r\n+          viewBox=\"0 0 24 24\"\r\n+        >\r\n+          <circle\r\n+            className=\"opacity-25\"\r\n+            cx=\"12\"\r\n+            cy=\"12\"\r\n+            r=\"10\"\r\n+            stroke=\"currentColor\"\r\n+            strokeWidth=\"4\"\r\n+          ></circle>\r\n+          <path\r\n+            className=\"opacity-75\"\r\n+            fill=\"currentColor\"\r\n+            d=\"M4 12a8 8 0 018-8v4l3-3-3-3v4a8 8 0 018 8h-4l3 3 3-3h-4a8 8 0 01-8 8z\"\r\n+          ></path>\r\n+        </svg>\r\n+      ) : icon ? (\r\n+        <span className=\"mr-2\">{icon}</span>\r\n+      ) : null}\r\n       {label}\r\n     </button>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1752253905448,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n \"use client\";\r\n \r\n import React from \"react\";\r\n-import { cn } from \"@/utils/cn\"; // Optional: if you use classnames utility\r\n+import { cn } from \"../../utils/cn\"; // Optional: if you use classnames utility\r\n \r\n interface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\r\n   label: string;\r\n   icon?: React.ReactNode;\r\n"
                },
                {
                    "date": 1752253984180,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,8 @@\n \"use client\";\r\n \r\n import React from \"react\";\r\n-import { cn } from \"../../utils/cn\"; // Optional: if you use classnames utility\r\n-\r\n+import { cn } from \"../../utils/cn\";\r\n interface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\r\n   label: string;\r\n   icon?: React.ReactNode;\r\n   loading?: boolean;\r\n"
                },
                {
                    "date": 1752254543361,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n \"use client\";\r\n \r\n import React from \"react\";\r\n-import { cn } from \"../../utils/cn\";\r\n+import { cn } from \"@/utils/cn\"; // Optional: if you use classnames utility\r\n interface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\r\n   label: string;\r\n   icon?: React.ReactNode;\r\n   loading?: boolean;\r\n"
                },
                {
                    "date": 1752254575849,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,8 @@\n \"use client\";\r\n \r\n import React from \"react\";\r\n-import { cn } from \"@/utils/cn\"; // Optional: if you use classnames utility\r\n-interface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\r\n+import { cn } from \"@/utils/cn\";interface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\r\n   label: string;\r\n   icon?: React.ReactNode;\r\n   loading?: boolean;\r\n }\r\n"
                },
                {
                    "date": 1752301012613,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,67 @@\n+\"use client\";\r\n+\r\n+import React from \"react\";\r\n+import { cn } from \"@/utils/cn\";\r\n+\r\n+interface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\r\n+  label: string;\r\n+  icon?: React.ReactNode;\r\n+  loading?: boolean;\r\n+  variant?: \"start\" | \"stop\" | \"primary\";\r\n+}\r\n+\r\n+export default function Button({\r\n+  label,\r\n+  icon,\r\n+  loading = false,\r\n+  disabled,\r\n+  className,\r\n+  variant = \"primary\",\r\n+  ...props\r\n+}: ButtonProps) {\r\n+  const baseStyle =\r\n+    \"inline-flex items-center justify-center text-white px-4 py-2 rounded-md text-sm font-medium transition disabled:opacity-50 disabled:cursor-not-allowed focus:outline-none focus:ring-2 focus:ring-offset-2\";\r\n+\r\n+  const variantStyle = {\r\n+    start:\r\n+      \"bg-green-600 hover:bg-green-700 focus:ring-green-500\",\r\n+    stop:\r\n+      \"bg-red-600 hover:bg-red-700 focus:ring-red-500\",\r\n+    primary:\r\n+      \"bg-blue-600 hover:bg-blue-700 focus:ring-blue-500\",\r\n+  };\r\n+\r\n+  return (\r\n+    <button\r\n+      disabled={disabled || loading}\r\n+      {...props}\r\n+      className={cn(baseStyle, variantStyle[variant], className)}\r\n+    >\r\n+      {loading ? (\r\n+        <svg\r\n+          className=\"animate-spin h-4 w-4 mr-2 text-white\"\r\n+          xmlns=\"http://www.w3.org/2000/svg\"\r\n+          fill=\"none\"\r\n+          viewBox=\"0 0 24 24\"\r\n+        >\r\n+          <circle\r\n+            className=\"opacity-25\"\r\n+            cx=\"12\"\r\n+            cy=\"12\"\r\n+            r=\"10\"\r\n+            stroke=\"currentColor\"\r\n+            strokeWidth=\"4\"\r\n+          ></circle>\r\n+          <path\r\n+            className=\"opacity-75\"\r\n+            fill=\"currentColor\"\r\n+            d=\"M4 12a8 8 0 018-8v4l3-3-3-3v4a8 8 0 018 8h-4l3 3 3-3h-4a8 8 0 01-8 8z\"\r\n+          ></path>\r\n+        </svg>\r\n+      ) : icon ? (\r\n+        <span className=\"mr-2\">{icon}</span>\r\n+      ) : null}\r\n+      {label}\r\n+    </button>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1752307248186,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n interface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\r\n   label: string;\r\n   icon?: React.ReactNode;\r\n   loading?: boolean;\r\n-  variant?: \"start\" | \"stop\" | \"primary\";\r\n+  variant?: \"start\" | \"stop\" | \"skip\" | \"primary\";\r\n }\r\n \r\n export default function Button({\r\n   label,\r\n@@ -22,14 +22,12 @@\n   const baseStyle =\r\n     \"inline-flex items-center justify-center text-white px-4 py-2 rounded-md text-sm font-medium transition disabled:opacity-50 disabled:cursor-not-allowed focus:outline-none focus:ring-2 focus:ring-offset-2\";\r\n \r\n   const variantStyle = {\r\n-    start:\r\n-      \"bg-green-600 hover:bg-green-700 focus:ring-green-500\",\r\n-    stop:\r\n-      \"bg-red-600 hover:bg-red-700 focus:ring-red-500\",\r\n-    primary:\r\n-      \"bg-blue-600 hover:bg-blue-700 focus:ring-blue-500\",\r\n+    start: \"bg-green-600 hover:bg-green-700 focus:ring-green-500\",\r\n+    stop: \"bg-red-600 hover:bg-red-700 focus:ring-red-500\",\r\n+    skip: \"bg-yellow-500 hover:bg-yellow-600 focus:ring-yellow-400 text-black\",\r\n+    primary: \"bg-blue-600 hover:bg-blue-700 focus:ring-blue-500\",\r\n   };\r\n \r\n   return (\r\n     <button\r\n@@ -64,58 +62,4 @@\n       {label}\r\n     </button>\r\n   );\r\n }\r\n-\"use client\";\r\n-\r\n-import React from \"react\";\r\n-import { cn } from \"@/utils/cn\";interface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\r\n-  label: string;\r\n-  icon?: React.ReactNode;\r\n-  loading?: boolean;\r\n-}\r\n-\r\n-export default function Button({\r\n-  label,\r\n-  icon,\r\n-  loading = false,\r\n-  disabled,\r\n-  className,\r\n-  ...props\r\n-}: ButtonProps) {\r\n-  return (\r\n-    <button\r\n-      disabled={disabled || loading}\r\n-      {...props}\r\n-      className={cn(\r\n-        \"inline-flex items-center justify-center bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-md text-sm font-medium transition disabled:opacity-50 disabled:cursor-not-allowed focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\",\r\n-        className\r\n-      )}\r\n-    >\r\n-      {loading ? (\r\n-        <svg\r\n-          className=\"animate-spin h-4 w-4 mr-2 text-white\"\r\n-          xmlns=\"http://www.w3.org/2000/svg\"\r\n-          fill=\"none\"\r\n-          viewBox=\"0 0 24 24\"\r\n-        >\r\n-          <circle\r\n-            className=\"opacity-25\"\r\n-            cx=\"12\"\r\n-            cy=\"12\"\r\n-            r=\"10\"\r\n-            stroke=\"currentColor\"\r\n-            strokeWidth=\"4\"\r\n-          ></circle>\r\n-          <path\r\n-            className=\"opacity-75\"\r\n-            fill=\"currentColor\"\r\n-            d=\"M4 12a8 8 0 018-8v4l3-3-3-3v4a8 8 0 018 8h-4l3 3 3-3h-4a8 8 0 01-8 8z\"\r\n-          ></path>\r\n-        </svg>\r\n-      ) : icon ? (\r\n-        <span className=\"mr-2\">{icon}</span>\r\n-      ) : null}\r\n-      {label}\r\n-    </button>\r\n-  );\r\n-}\r\n"
                }
            ],
            "date": 1752230264857,
            "name": "Commit-0",
            "content": "\"use client\";\r\n\r\nimport React from \"react\";\r\n\r\ninterface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\r\n  label: string;\r\n}\r\n\r\nexport default function Button({ label, ...props }: ButtonProps) {\r\n  return (\r\n    <button\r\n      {...props}\r\n      className=\"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-md text-sm font-medium transition disabled:opacity-50 disabled:cursor-not-allowed\"\r\n    >\r\n      {label}\r\n    </button>\r\n  );\r\n}\r\n"
        }
    ]
}