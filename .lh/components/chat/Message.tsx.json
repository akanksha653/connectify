{
    "sourceFile": "components/chat/Message.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 37,
            "patches": [
                {
                    "date": 1752230228087,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1752253387878,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,15 +8,27 @@\n }\r\n \r\n export default function Message({ content, sender }: MessageProps) {\r\n   return (\r\n-    <div\r\n-      className={`mb-2 px-4 py-2 rounded-lg text-sm max-w-xs break-words ${\r\n-        sender === \"me\"\r\n-          ? \"bg-blue-600 text-white self-end\"\r\n-          : \"bg-neutral-200 dark:bg-neutral-700 text-neutral-900 dark:text-neutral-100 self-start\"\r\n-      }`}\r\n-    >\r\n-      {content}\r\n+    <div className={`flex flex-col ${sender === \"me\" ? \"items-end\" : \"items-start\"}`}>\r\n+      {/* Sender badge */}\r\n+      <span\r\n+        className={`text-xs mb-1 ${\r\n+          sender === \"me\" ? \"text-blue-500\" : \"text-neutral-500\"\r\n+        }`}\r\n+      >\r\n+        {sender === \"me\" ? \"You\" : \"Stranger\"}\r\n+      </span>\r\n+\r\n+      {/* Message bubble */}\r\n+      <div\r\n+        className={`px-4 py-2 rounded-lg text-sm max-w-xs break-words shadow-md ${\r\n+          sender === \"me\"\r\n+            ? \"bg-blue-600 text-white rounded-br-none\"\r\n+            : \"bg-neutral-200 dark:bg-neutral-700 text-neutral-900 dark:text-neutral-100 rounded-bl-none\"\r\n+        }`}\r\n+      >\r\n+        {content}\r\n+      </div>\r\n     </div>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1752315400394,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,21 +8,25 @@\n }\r\n \r\n export default function Message({ content, sender }: MessageProps) {\r\n   return (\r\n-    <div className={`flex flex-col ${sender === \"me\" ? \"items-end\" : \"items-start\"}`}>\r\n+    <div\r\n+      className={`flex flex-col ${\r\n+        sender === \"me\" ? \"items-end\" : \"items-start\"\r\n+      } w-full`}\r\n+    >\r\n       {/* Sender badge */}\r\n       <span\r\n         className={`text-xs mb-1 ${\r\n-          sender === \"me\" ? \"text-blue-500\" : \"text-neutral-500\"\r\n+          sender === \"me\" ? \"text-blue-500\" : \"text-neutral-500 dark:text-neutral-400\"\r\n         }`}\r\n       >\r\n         {sender === \"me\" ? \"You\" : \"Stranger\"}\r\n       </span>\r\n \r\n       {/* Message bubble */}\r\n       <div\r\n-        className={`px-4 py-2 rounded-lg text-sm max-w-xs break-words shadow-md ${\r\n+        className={`px-4 py-2 rounded-lg text-sm max-w-[80%] break-words shadow ${\r\n           sender === \"me\"\r\n             ? \"bg-blue-600 text-white rounded-br-none\"\r\n             : \"bg-neutral-200 dark:bg-neutral-700 text-neutral-900 dark:text-neutral-100 rounded-bl-none\"\r\n         }`}\r\n"
                },
                {
                    "date": 1752319925296,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n   return (\r\n     <div\r\n       className={`flex flex-col ${\r\n         sender === \"me\" ? \"items-end\" : \"items-start\"\r\n-      } w-full`}\r\n+      } w-full px-2`}\r\n     >\r\n       {/* Sender badge */}\r\n       <span\r\n         className={`text-xs mb-1 ${\r\n@@ -24,13 +24,11 @@\n       </span>\r\n \r\n       {/* Message bubble */}\r\n       <div\r\n-        className={`px-4 py-2 rounded-lg text-sm max-w-[80%] break-words shadow ${\r\n-          sender === \"me\"\r\n-            ? \"bg-blue-600 text-white rounded-br-none\"\r\n-            : \"bg-neutral-200 dark:bg-neutral-700 text-neutral-900 dark:text-neutral-100 rounded-bl-none\"\r\n-        }`}\r\n+        className={`px-4 py-2 rounded-lg text-sm break-words shadow \r\n+        ${sender === \"me\" ? \"bg-blue-600 text-white rounded-br-none\" : \"bg-neutral-200 dark:bg-neutral-700 text-neutral-900 dark:text-neutral-100 rounded-bl-none\"}\r\n+        max-w-[85%] sm:max-w-[75%] md:max-w-[60%] lg:max-w-[50%]`}\r\n       >\r\n         {content}\r\n       </div>\r\n     </div>\r\n"
                },
                {
                    "date": 1752319966343,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,36 +1,41 @@\n \"use client\";\r\n \r\n import React from \"react\";\r\n+import { motion } from \"framer-motion\";\r\n \r\n interface MessageProps {\r\n   content: string;\r\n   sender: \"me\" | \"partner\";\r\n+  timestamp?: string; // optional if backend provides it\r\n }\r\n \r\n-export default function Message({ content, sender }: MessageProps) {\r\n+export default function Message({ content, sender, timestamp }: MessageProps) {\r\n+  const formattedTime =\r\n+    timestamp || new Date().toLocaleTimeString([], { hour: \"2-digit\", minute: \"2-digit\" });\r\n+\r\n   return (\r\n-    <div\r\n+    <motion.div\r\n+      initial={{ opacity: 0, y: 10 }}\r\n+      animate={{ opacity: 1, y: 0 }}\r\n+      transition={{ duration: 0.25 }}\r\n       className={`flex flex-col ${\r\n         sender === \"me\" ? \"items-end\" : \"items-start\"\r\n       } w-full px-2`}\r\n     >\r\n-      {/* Sender badge */}\r\n-      <span\r\n-        className={`text-xs mb-1 ${\r\n-          sender === \"me\" ? \"text-blue-500\" : \"text-neutral-500 dark:text-neutral-400\"\r\n-        }`}\r\n-      >\r\n-        {sender === \"me\" ? \"You\" : \"Stranger\"}\r\n-      </span>\r\n+      {/* Sender label + timestamp */}\r\n+      <div className=\"flex items-center gap-2 text-xs mb-1 text-neutral-500 dark:text-neutral-400\">\r\n+        <span>{sender === \"me\" ? \"You\" : \"Stranger\"}</span>\r\n+        <span className=\"text-[10px]\">{formattedTime}</span>\r\n+      </div>\r\n \r\n       {/* Message bubble */}\r\n       <div\r\n-        className={`px-4 py-2 rounded-lg text-sm break-words shadow \r\n+        className={`px-4 py-2 rounded-lg text-sm break-words shadow\r\n         ${sender === \"me\" ? \"bg-blue-600 text-white rounded-br-none\" : \"bg-neutral-200 dark:bg-neutral-700 text-neutral-900 dark:text-neutral-100 rounded-bl-none\"}\r\n         max-w-[85%] sm:max-w-[75%] md:max-w-[60%] lg:max-w-[50%]`}\r\n       >\r\n         {content}\r\n       </div>\r\n-    </div>\r\n+    </motion.div>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1752320571765,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,41 +1,131 @@\n \"use client\";\r\n \r\n-import React from \"react\";\r\n-import { motion } from \"framer-motion\";\r\n+import React, { useState } from \"react\";\r\n+import Picker from \"@emoji-mart/react\";\r\n+import data from \"@emoji-mart/data\";\r\n \r\n interface MessageProps {\r\n+  id: string;\r\n+  sender: \"me\" | \"partner\";\r\n   content: string;\r\n-  sender: \"me\" | \"partner\";\r\n-  timestamp?: string; // optional if backend provides it\r\n+  timestamp: string;\r\n+  status?: \"sent\" | \"delivered\" | \"seen\";\r\n+  type?: \"text\" | \"image\" | \"audio\" | \"video\";\r\n+  reactions?: { [userId: string]: string };\r\n+\r\n+  // Action handlers from ChatBox\r\n+  onDelete?: () => void;\r\n+  onEdit?: (newContent: string) => void;\r\n+  onReact?: (reaction: string) => void;\r\n }\r\n \r\n-export default function Message({ content, sender, timestamp }: MessageProps) {\r\n-  const formattedTime =\r\n-    timestamp || new Date().toLocaleTimeString([], { hour: \"2-digit\", minute: \"2-digit\" });\r\n+export default function Message({\r\n+  sender,\r\n+  content,\r\n+  timestamp,\r\n+  status,\r\n+  type = \"text\",\r\n+  reactions = {},\r\n+  onDelete,\r\n+  onEdit,\r\n+  onReact,\r\n+}: MessageProps) {\r\n+  const [isEditing, setIsEditing] = useState(false);\r\n+  const [editedContent, setEditedContent] = useState(content);\r\n+  const [showReactions, setShowReactions] = useState(false);\r\n \r\n+  const time = new Date(timestamp).toLocaleTimeString([], {\r\n+    hour: \"2-digit\",\r\n+    minute: \"2-digit\",\r\n+  });\r\n+\r\n+  const handleEditSubmit = () => {\r\n+    onEdit?.(editedContent);\r\n+    setIsEditing(false);\r\n+  };\r\n+\r\n+  const renderMedia = () => {\r\n+    if (type === \"image\") return <img src={content} className=\"rounded max-w-xs mt-1\" />;\r\n+    if (type === \"audio\") return <audio controls src={content} className=\"mt-1 w-full\" />;\r\n+    if (type === \"video\") return <video controls src={content} className=\"mt-1 w-full rounded\" />;\r\n+    return content;\r\n+  };\r\n+\r\n   return (\r\n-    <motion.div\r\n-      initial={{ opacity: 0, y: 10 }}\r\n-      animate={{ opacity: 1, y: 0 }}\r\n-      transition={{ duration: 0.25 }}\r\n-      className={`flex flex-col ${\r\n-        sender === \"me\" ? \"items-end\" : \"items-start\"\r\n-      } w-full px-2`}\r\n-    >\r\n-      {/* Sender label + timestamp */}\r\n+    <div className={`flex flex-col ${sender === \"me\" ? \"items-end\" : \"items-start\"} w-full px-2`}>\r\n       <div className=\"flex items-center gap-2 text-xs mb-1 text-neutral-500 dark:text-neutral-400\">\r\n         <span>{sender === \"me\" ? \"You\" : \"Stranger\"}</span>\r\n-        <span className=\"text-[10px]\">{formattedTime}</span>\r\n+        <span className=\"text-[10px]\">{time}</span>\r\n       </div>\r\n \r\n-      {/* Message bubble */}\r\n       <div\r\n-        className={`px-4 py-2 rounded-lg text-sm break-words shadow\r\n-        ${sender === \"me\" ? \"bg-blue-600 text-white rounded-br-none\" : \"bg-neutral-200 dark:bg-neutral-700 text-neutral-900 dark:text-neutral-100 rounded-bl-none\"}\r\n-        max-w-[85%] sm:max-w-[75%] md:max-w-[60%] lg:max-w-[50%]`}\r\n+        className={`relative group px-4 py-2 rounded-lg text-sm break-words shadow ${\r\n+          sender === \"me\"\r\n+            ? \"bg-blue-600 text-white rounded-br-none\"\r\n+            : \"bg-neutral-200 dark:bg-neutral-700 text-neutral-900 dark:text-neutral-100 rounded-bl-none\"\r\n+        } max-w-[85%] sm:max-w-[75%] md:max-w-[60%] lg:max-w-[50%]`}\r\n       >\r\n-        {content}\r\n+        {/* Editable Text */}\r\n+        {isEditing ? (\r\n+          <div className=\"flex flex-col gap-1\">\r\n+            <input\r\n+              className=\"text-black px-2 py-1 rounded text-sm\"\r\n+              value={editedContent}\r\n+              onChange={(e) => setEditedContent(e.target.value)}\r\n+            />\r\n+            <div className=\"flex gap-2 justify-end text-xs\">\r\n+              <button onClick={handleEditSubmit} className=\"text-green-500\">Save</button>\r\n+              <button onClick={() => setIsEditing(false)} className=\"text-red-500\">Cancel</button>\r\n+            </div>\r\n+          </div>\r\n+        ) : (\r\n+          <>\r\n+            {type === \"text\" ? content : renderMedia()}\r\n+            {/* Reactions */}\r\n+            {Object.values(reactions).length > 0 && (\r\n+              <div className=\"mt-1 flex gap-1 text-lg\">\r\n+                {Object.values(reactions).map((r, i) => (\r\n+                  <span key={i}>{r}</span>\r\n+                ))}\r\n+              </div>\r\n+            )}\r\n+          </>\r\n+        )}\r\n+\r\n+        {/* Action buttons (edit/delete/react) only for \"me\" */}\r\n+        {sender === \"me\" && !isEditing && (\r\n+          <div className=\"absolute right-0 top-0 hidden group-hover:flex gap-2 px-2 py-1 text-xs text-white\">\r\n+            {onEdit && <button onClick={() => setIsEditing(true)}>✏️</button>}\r\n+            {onDelete && <button onClick={onDelete}>🗑️</button>}\r\n+            {onReact && <button onClick={() => setShowReactions(!showReactions)}>❤️</button>}\r\n+          </div>\r\n+        )}\r\n+\r\n+        {/* Reaction Picker */}\r\n+        {showReactions && (\r\n+          <div className=\"absolute z-50 top-full mt-1 right-0\">\r\n+            <Picker\r\n+              data={data}\r\n+              theme=\"auto\"\r\n+              onEmojiSelect={(e: any) => {\r\n+                onReact?.(e.native);\r\n+                setShowReactions(false);\r\n+              }}\r\n+            />\r\n+          </div>\r\n+        )}\r\n       </div>\r\n-    </motion.div>\r\n+\r\n+      {/* Message Status (Only for \"me\") */}\r\n+      {sender === \"me\" && status && (\r\n+        <div className=\"text-[10px] text-right text-neutral-400 mt-1\">\r\n+          {status === \"seen\"\r\n+            ? \"Seen ✅\"\r\n+            : status === \"delivered\"\r\n+            ? \"Delivered ✔️\"\r\n+            : \"Sent\"}\r\n+        </div>\r\n+      )}\r\n+    </div>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1752321071262,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,72 +39,94 @@\n     minute: \"2-digit\",\r\n   });\r\n \r\n   const handleEditSubmit = () => {\r\n-    onEdit?.(editedContent);\r\n-    setIsEditing(false);\r\n+    if (editedContent.trim()) {\r\n+      onEdit?.(editedContent.trim());\r\n+      setIsEditing(false);\r\n+    }\r\n   };\r\n \r\n   const renderMedia = () => {\r\n-    if (type === \"image\") return <img src={content} className=\"rounded max-w-xs mt-1\" />;\r\n-    if (type === \"audio\") return <audio controls src={content} className=\"mt-1 w-full\" />;\r\n-    if (type === \"video\") return <video controls src={content} className=\"mt-1 w-full rounded\" />;\r\n-    return content;\r\n+    switch (type) {\r\n+      case \"image\":\r\n+        return (\r\n+          <img\r\n+            src={content}\r\n+            alt=\"Image\"\r\n+            className=\"rounded max-w-xs mt-2 object-cover border border-gray-200 dark:border-gray-600\"\r\n+          />\r\n+        );\r\n+      case \"audio\":\r\n+        return <audio controls src={content} className=\"mt-2 w-full\" />;\r\n+      case \"video\":\r\n+        return (\r\n+          <video\r\n+            controls\r\n+            src={content}\r\n+            className=\"mt-2 w-full rounded max-h-64 object-cover\"\r\n+          />\r\n+        );\r\n+      default:\r\n+        return <p className=\"whitespace-pre-wrap\">{content}</p>;\r\n+    }\r\n   };\r\n \r\n   return (\r\n     <div className={`flex flex-col ${sender === \"me\" ? \"items-end\" : \"items-start\"} w-full px-2`}>\r\n+      {/* Sender and Timestamp */}\r\n       <div className=\"flex items-center gap-2 text-xs mb-1 text-neutral-500 dark:text-neutral-400\">\r\n         <span>{sender === \"me\" ? \"You\" : \"Stranger\"}</span>\r\n         <span className=\"text-[10px]\">{time}</span>\r\n       </div>\r\n \r\n+      {/* Message bubble */}\r\n       <div\r\n-        className={`relative group px-4 py-2 rounded-lg text-sm break-words shadow ${\r\n+        className={`relative group px-4 py-2 rounded-lg text-sm break-words shadow-md ${\r\n           sender === \"me\"\r\n             ? \"bg-blue-600 text-white rounded-br-none\"\r\n             : \"bg-neutral-200 dark:bg-neutral-700 text-neutral-900 dark:text-neutral-100 rounded-bl-none\"\r\n         } max-w-[85%] sm:max-w-[75%] md:max-w-[60%] lg:max-w-[50%]`}\r\n       >\r\n-        {/* Editable Text */}\r\n         {isEditing ? (\r\n           <div className=\"flex flex-col gap-1\">\r\n             <input\r\n-              className=\"text-black px-2 py-1 rounded text-sm\"\r\n+              className=\"text-black px-2 py-1 rounded text-sm border border-gray-300 focus:outline-none focus:ring focus:ring-blue-500\"\r\n               value={editedContent}\r\n               onChange={(e) => setEditedContent(e.target.value)}\r\n             />\r\n-            <div className=\"flex gap-2 justify-end text-xs\">\r\n+            <div className=\"flex gap-2 justify-end text-xs mt-1\">\r\n               <button onClick={handleEditSubmit} className=\"text-green-500\">Save</button>\r\n               <button onClick={() => setIsEditing(false)} className=\"text-red-500\">Cancel</button>\r\n             </div>\r\n           </div>\r\n         ) : (\r\n           <>\r\n-            {type === \"text\" ? content : renderMedia()}\r\n+            {renderMedia()}\r\n+\r\n             {/* Reactions */}\r\n             {Object.values(reactions).length > 0 && (\r\n-              <div className=\"mt-1 flex gap-1 text-lg\">\r\n-                {Object.values(reactions).map((r, i) => (\r\n-                  <span key={i}>{r}</span>\r\n+              <div className=\"mt-1 flex gap-1 text-lg flex-wrap\">\r\n+                {Object.values(reactions).map((emoji, index) => (\r\n+                  <span key={index}>{emoji}</span>\r\n                 ))}\r\n               </div>\r\n             )}\r\n           </>\r\n         )}\r\n \r\n         {/* Action buttons (edit/delete/react) only for \"me\" */}\r\n         {sender === \"me\" && !isEditing && (\r\n-          <div className=\"absolute right-0 top-0 hidden group-hover:flex gap-2 px-2 py-1 text-xs text-white\">\r\n-            {onEdit && <button onClick={() => setIsEditing(true)}>✏️</button>}\r\n-            {onDelete && <button onClick={onDelete}>🗑️</button>}\r\n-            {onReact && <button onClick={() => setShowReactions(!showReactions)}>❤️</button>}\r\n+          <div className=\"absolute top-1 right-1 hidden group-hover:flex gap-1 text-white text-sm z-10\">\r\n+            {onEdit && <button onClick={() => setIsEditing(true)} title=\"Edit\">✏️</button>}\r\n+            {onDelete && <button onClick={onDelete} title=\"Delete\">🗑️</button>}\r\n+            {onReact && <button onClick={() => setShowReactions((s) => !s)} title=\"React\">😊</button>}\r\n           </div>\r\n         )}\r\n \r\n-        {/* Reaction Picker */}\r\n+        {/* Emoji Reaction Picker */}\r\n         {showReactions && (\r\n-          <div className=\"absolute z-50 top-full mt-1 right-0\">\r\n+          <div className=\"absolute z-50 top-full right-0 mt-2\">\r\n             <Picker\r\n               data={data}\r\n               theme=\"auto\"\r\n               onEmojiSelect={(e: any) => {\r\n@@ -115,16 +137,12 @@\n           </div>\r\n         )}\r\n       </div>\r\n \r\n-      {/* Message Status (Only for \"me\") */}\r\n+      {/* Seen / Delivered Status */}\r\n       {sender === \"me\" && status && (\r\n         <div className=\"text-[10px] text-right text-neutral-400 mt-1\">\r\n-          {status === \"seen\"\r\n-            ? \"Seen ✅\"\r\n-            : status === \"delivered\"\r\n-            ? \"Delivered ✔️\"\r\n-            : \"Sent\"}\r\n+          {status === \"seen\" ? \"Seen ✅\" : status === \"delivered\" ? \"Delivered ✔️\" : \"Sent\"}\r\n         </div>\r\n       )}\r\n     </div>\r\n   );\r\n"
                },
                {
                    "date": 1752321128536,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,33 +87,34 @@\n             : \"bg-neutral-200 dark:bg-neutral-700 text-neutral-900 dark:text-neutral-100 rounded-bl-none\"\r\n         } max-w-[85%] sm:max-w-[75%] md:max-w-[60%] lg:max-w-[50%]`}\r\n       >\r\n         {isEditing ? (\r\n-          <div className=\"flex flex-col gap-1\">\r\n-            <input\r\n-              className=\"text-black px-2 py-1 rounded text-sm border border-gray-300 focus:outline-none focus:ring focus:ring-blue-500\"\r\n-              value={editedContent}\r\n-              onChange={(e) => setEditedContent(e.target.value)}\r\n-            />\r\n-            <div className=\"flex gap-2 justify-end text-xs mt-1\">\r\n-              <button onClick={handleEditSubmit} className=\"text-green-500\">Save</button>\r\n-              <button onClick={() => setIsEditing(false)} className=\"text-red-500\">Cancel</button>\r\n-            </div>\r\n-          </div>\r\n-        ) : (\r\n-          <>\r\n-            {renderMedia()}\r\n+  <div className=\"flex flex-col gap-1\">\r\n+    <input\r\n+      type=\"text\"\r\n+      className=\"text-black px-2 py-1 rounded text-sm border border-gray-300 focus:outline-none focus:ring focus:ring-blue-500\"\r\n+      value={editedContent}\r\n+      onChange={(e) => setEditedContent(e.target.value)}\r\n+    />\r\n+    <div className=\"flex gap-2 justify-end text-xs mt-1\">\r\n+      <button onClick={handleEditSubmit} className=\"text-green-500\">Save</button>\r\n+      <button onClick={() => setIsEditing(false)} className=\"text-red-500\">Cancel</button>\r\n+    </div>\r\n+  </div>\r\n+) : (\r\n+  <>\r\n+    {type === \"text\" ? content : renderMedia()}\r\n+    {/* Reactions */}\r\n+    {Object.values(reactions).length > 0 && (\r\n+      <div className=\"mt-1 flex gap-1 text-lg flex-wrap\">\r\n+        {Object.values(reactions).map((emoji, index) => (\r\n+          <span key={index}>{emoji}</span>\r\n+        ))}\r\n+      </div>\r\n+    )}\r\n+  </>\r\n+)}\r\n \r\n-            {/* Reactions */}\r\n-            {Object.values(reactions).length > 0 && (\r\n-              <div className=\"mt-1 flex gap-1 text-lg flex-wrap\">\r\n-                {Object.values(reactions).map((emoji, index) => (\r\n-                  <span key={index}>{emoji}</span>\r\n-                ))}\r\n-              </div>\r\n-            )}\r\n-          </>\r\n-        )}\r\n \r\n         {/* Action buttons (edit/delete/react) only for \"me\" */}\r\n         {sender === \"me\" && !isEditing && (\r\n           <div className=\"absolute top-1 right-1 hidden group-hover:flex gap-1 text-white text-sm z-10\">\r\n"
                },
                {
                    "date": 1752321226586,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -88,22 +88,44 @@\n         } max-w-[85%] sm:max-w-[75%] md:max-w-[60%] lg:max-w-[50%]`}\r\n       >\r\n         {isEditing ? (\r\n   <div className=\"flex flex-col gap-1\">\r\n+{isEditing ? (\r\n+  <div className=\"flex flex-col gap-1\">\r\n     <input\r\n-      type=\"text\"\r\n+      type=\"text\" // ✅ Required to prevent React error\r\n       className=\"text-black px-2 py-1 rounded text-sm border border-gray-300 focus:outline-none focus:ring focus:ring-blue-500\"\r\n       value={editedContent}\r\n       onChange={(e) => setEditedContent(e.target.value)}\r\n+      autoFocus // Optional: puts focus on input when editing starts\r\n     />\r\n     <div className=\"flex gap-2 justify-end text-xs mt-1\">\r\n-      <button onClick={handleEditSubmit} className=\"text-green-500\">Save</button>\r\n-      <button onClick={() => setIsEditing(false)} className=\"text-red-500\">Cancel</button>\r\n+      <button\r\n+        onClick={handleEditSubmit}\r\n+        className=\"text-green-600 hover:underline\"\r\n+      >\r\n+        Save\r\n+      </button>\r\n+      <button\r\n+        onClick={() => {\r\n+          setEditedContent(content); // reset input\r\n+          setIsEditing(false);\r\n+        }}\r\n+        className=\"text-red-500 hover:underline\"\r\n+      >\r\n+        Cancel\r\n+      </button>\r\n     </div>\r\n   </div>\r\n ) : (\r\n   <>\r\n-    {type === \"text\" ? content : renderMedia()}\r\n+    {/* Message content */}\r\n+    {type === \"text\" ? (\r\n+      <span>{content}</span>\r\n+    ) : (\r\n+      renderMedia()\r\n+    )}\r\n+\r\n     {/* Reactions */}\r\n     {Object.values(reactions).length > 0 && (\r\n       <div className=\"mt-1 flex gap-1 text-lg flex-wrap\">\r\n         {Object.values(reactions).map((emoji, index) => (\r\n@@ -114,8 +136,9 @@\n   </>\r\n )}\r\n \r\n \r\n+\r\n         {/* Action buttons (edit/delete/react) only for \"me\" */}\r\n         {sender === \"me\" && !isEditing && (\r\n           <div className=\"absolute top-1 right-1 hidden group-hover:flex gap-1 text-white text-sm z-10\">\r\n             {onEdit && <button onClick={() => setIsEditing(true)} title=\"Edit\">✏️</button>}\r\n"
                },
                {
                    "date": 1752321258576,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -88,10 +88,8 @@\n         } max-w-[85%] sm:max-w-[75%] md:max-w-[60%] lg:max-w-[50%]`}\r\n       >\r\n         {isEditing ? (\r\n   <div className=\"flex flex-col gap-1\">\r\n-{isEditing ? (\r\n-  <div className=\"flex flex-col gap-1\">\r\n     <input\r\n       type=\"text\" // ✅ Required to prevent React error\r\n       className=\"text-black px-2 py-1 rounded text-sm border border-gray-300 focus:outline-none focus:ring focus:ring-blue-500\"\r\n       value={editedContent}\r\n@@ -135,10 +133,8 @@\n     )}\r\n   </>\r\n )}\r\n \r\n-\r\n-\r\n         {/* Action buttons (edit/delete/react) only for \"me\" */}\r\n         {sender === \"me\" && !isEditing && (\r\n           <div className=\"absolute top-1 right-1 hidden group-hover:flex gap-1 text-white text-sm z-10\">\r\n             {onEdit && <button onClick={() => setIsEditing(true)} title=\"Edit\">✏️</button>}\r\n"
                },
                {
                    "date": 1752323120006,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -94,8 +94,10 @@\n       className=\"text-black px-2 py-1 rounded text-sm border border-gray-300 focus:outline-none focus:ring focus:ring-blue-500\"\r\n       value={editedContent}\r\n       onChange={(e) => setEditedContent(e.target.value)}\r\n       autoFocus // Optional: puts focus on input when editing starts\r\n+      placeholder=\"Edit your message\"\r\n+      title=\"Edit message input\"\r\n     />\r\n     <div className=\"flex gap-2 justify-end text-xs mt-1\">\r\n       <button\r\n         onClick={handleEditSubmit}\r\n"
                },
                {
                    "date": 1752323773811,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n \"use client\";\r\n \r\n import React, { useState } from \"react\";\r\n-import Picker from \"@emoji-mart/react\";\r\n-import data from \"@emoji-mart/data\";\r\n+import Picker from 'emoji-mart'\r\n+import data from '@emoji-mart/data'\r\n \r\n interface MessageProps {\r\n   id: string;\r\n   sender: \"me\" | \"partner\";\r\n"
                },
                {
                    "date": 1752323857037,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -146,19 +146,19 @@\n         )}\r\n \r\n         {/* Emoji Reaction Picker */}\r\n         {showReactions && (\r\n-          <div className=\"absolute z-50 top-full right-0 mt-2\">\r\n-            <Picker\r\n-              data={data}\r\n-              theme=\"auto\"\r\n-              onEmojiSelect={(e: any) => {\r\n-                onReact?.(e.native);\r\n-                setShowReactions(false);\r\n-              }}\r\n-            />\r\n-          </div>\r\n-        )}\r\n+  <div className=\"absolute z-50 top-full right-0 mt-2\">\r\n+    <Picker\r\n+      data={data}\r\n+      theme=\"auto\"\r\n+      onEmojiSelect={(emoji: any) => {\r\n+        onReact?.(emoji.native);\r\n+        setShowReactions(false);\r\n+      }}\r\n+    />\r\n+  </div>\r\n+)}\r\n       </div>\r\n \r\n       {/* Seen / Delivered Status */}\r\n       {sender === \"me\" && status && (\r\n"
                },
                {
                    "date": 1752323893544,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n \"use client\";\r\n \r\n import React, { useState } from \"react\";\r\n-import Picker from 'emoji-mart'\r\n+import { Picker } from 'emoji-mart'\r\n import data from '@emoji-mart/data'\r\n \r\n interface MessageProps {\r\n   id: string;\r\n"
                },
                {
                    "date": 1752323910246,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -157,8 +157,9 @@\n       }}\r\n     />\r\n   </div>\r\n )}\r\n+\r\n       </div>\r\n \r\n       {/* Seen / Delivered Status */}\r\n       {sender === \"me\" && status && (\r\n"
                },
                {
                    "date": 1752323970960,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n \"use client\";\r\n \r\n import React, { useState } from \"react\";\r\n-import { Picker } from 'emoji-mart'\r\n+import Picker from 'emoji-mart'\r\n import data from '@emoji-mart/data'\r\n \r\n interface MessageProps {\r\n   id: string;\r\n@@ -157,9 +157,8 @@\n       }}\r\n     />\r\n   </div>\r\n )}\r\n-\r\n       </div>\r\n \r\n       {/* Seen / Delivered Status */}\r\n       {sender === \"me\" && status && (\r\n"
                },
                {
                    "date": 1752324023920,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n \"use client\";\r\n \r\n import React, { useState } from \"react\";\r\n-import Picker from 'emoji-mart'\r\n-import data from '@emoji-mart/data'\r\n+import { Picker } from \"emoji-mart\"; // ✅ CORRECT way for emoji-mart v5+\r\n+import data from \"@emoji-mart/data\";\r\n \r\n interface MessageProps {\r\n   id: string;\r\n   sender: \"me\" | \"partner\";\r\n@@ -11,10 +11,8 @@\n   timestamp: string;\r\n   status?: \"sent\" | \"delivered\" | \"seen\";\r\n   type?: \"text\" | \"image\" | \"audio\" | \"video\";\r\n   reactions?: { [userId: string]: string };\r\n-\r\n-  // Action handlers from ChatBox\r\n   onDelete?: () => void;\r\n   onEdit?: (newContent: string) => void;\r\n   onReact?: (reaction: string) => void;\r\n }\r\n@@ -71,100 +69,115 @@\n     }\r\n   };\r\n \r\n   return (\r\n-    <div className={`flex flex-col ${sender === \"me\" ? \"items-end\" : \"items-start\"} w-full px-2`}>\r\n+    <div\r\n+      className={`flex flex-col ${\r\n+        sender === \"me\" ? \"items-end\" : \"items-start\"\r\n+      } w-full px-2`}\r\n+    >\r\n       {/* Sender and Timestamp */}\r\n       <div className=\"flex items-center gap-2 text-xs mb-1 text-neutral-500 dark:text-neutral-400\">\r\n         <span>{sender === \"me\" ? \"You\" : \"Stranger\"}</span>\r\n         <span className=\"text-[10px]\">{time}</span>\r\n       </div>\r\n \r\n-      {/* Message bubble */}\r\n+      {/* Message Bubble */}\r\n       <div\r\n         className={`relative group px-4 py-2 rounded-lg text-sm break-words shadow-md ${\r\n           sender === \"me\"\r\n             ? \"bg-blue-600 text-white rounded-br-none\"\r\n             : \"bg-neutral-200 dark:bg-neutral-700 text-neutral-900 dark:text-neutral-100 rounded-bl-none\"\r\n         } max-w-[85%] sm:max-w-[75%] md:max-w-[60%] lg:max-w-[50%]`}\r\n       >\r\n         {isEditing ? (\r\n-  <div className=\"flex flex-col gap-1\">\r\n-    <input\r\n-      type=\"text\" // ✅ Required to prevent React error\r\n-      className=\"text-black px-2 py-1 rounded text-sm border border-gray-300 focus:outline-none focus:ring focus:ring-blue-500\"\r\n-      value={editedContent}\r\n-      onChange={(e) => setEditedContent(e.target.value)}\r\n-      autoFocus // Optional: puts focus on input when editing starts\r\n-      placeholder=\"Edit your message\"\r\n-      title=\"Edit message input\"\r\n-    />\r\n-    <div className=\"flex gap-2 justify-end text-xs mt-1\">\r\n-      <button\r\n-        onClick={handleEditSubmit}\r\n-        className=\"text-green-600 hover:underline\"\r\n-      >\r\n-        Save\r\n-      </button>\r\n-      <button\r\n-        onClick={() => {\r\n-          setEditedContent(content); // reset input\r\n-          setIsEditing(false);\r\n-        }}\r\n-        className=\"text-red-500 hover:underline\"\r\n-      >\r\n-        Cancel\r\n-      </button>\r\n-    </div>\r\n-  </div>\r\n-) : (\r\n-  <>\r\n-    {/* Message content */}\r\n-    {type === \"text\" ? (\r\n-      <span>{content}</span>\r\n-    ) : (\r\n-      renderMedia()\r\n-    )}\r\n+          <div className=\"flex flex-col gap-1\">\r\n+            <input\r\n+              type=\"text\"\r\n+              className=\"text-black px-2 py-1 rounded text-sm border border-gray-300 focus:outline-none focus:ring focus:ring-blue-500\"\r\n+              value={editedContent}\r\n+              onChange={(e) => setEditedContent(e.target.value)}\r\n+              autoFocus\r\n+              placeholder=\"Edit your message\"\r\n+            />\r\n+            <div className=\"flex gap-2 justify-end text-xs mt-1\">\r\n+              <button\r\n+                onClick={handleEditSubmit}\r\n+                className=\"text-green-600 hover:underline\"\r\n+              >\r\n+                Save\r\n+              </button>\r\n+              <button\r\n+                onClick={() => {\r\n+                  setEditedContent(content);\r\n+                  setIsEditing(false);\r\n+                }}\r\n+                className=\"text-red-500 hover:underline\"\r\n+              >\r\n+                Cancel\r\n+              </button>\r\n+            </div>\r\n+          </div>\r\n+        ) : (\r\n+          <>\r\n+            {type === \"text\" ? <span>{content}</span> : renderMedia()}\r\n+            {Object.values(reactions).length > 0 && (\r\n+              <div className=\"mt-1 flex gap-1 text-lg flex-wrap\">\r\n+                {Object.values(reactions).map((emoji, index) => (\r\n+                  <span key={index}>{emoji}</span>\r\n+                ))}\r\n+              </div>\r\n+            )}\r\n+          </>\r\n+        )}\r\n \r\n-    {/* Reactions */}\r\n-    {Object.values(reactions).length > 0 && (\r\n-      <div className=\"mt-1 flex gap-1 text-lg flex-wrap\">\r\n-        {Object.values(reactions).map((emoji, index) => (\r\n-          <span key={index}>{emoji}</span>\r\n-        ))}\r\n-      </div>\r\n-    )}\r\n-  </>\r\n-)}\r\n-\r\n-        {/* Action buttons (edit/delete/react) only for \"me\" */}\r\n+        {/* Action Buttons (edit/delete/react) */}\r\n         {sender === \"me\" && !isEditing && (\r\n           <div className=\"absolute top-1 right-1 hidden group-hover:flex gap-1 text-white text-sm z-10\">\r\n-            {onEdit && <button onClick={() => setIsEditing(true)} title=\"Edit\">✏️</button>}\r\n-            {onDelete && <button onClick={onDelete} title=\"Delete\">🗑️</button>}\r\n-            {onReact && <button onClick={() => setShowReactions((s) => !s)} title=\"React\">😊</button>}\r\n+            {onEdit && (\r\n+              <button onClick={() => setIsEditing(true)} title=\"Edit\">\r\n+                ✏️\r\n+              </button>\r\n+            )}\r\n+            {onDelete && (\r\n+              <button onClick={onDelete} title=\"Delete\">\r\n+                🗑️\r\n+              </button>\r\n+            )}\r\n+            {onReact && (\r\n+              <button\r\n+                onClick={() => setShowReactions((s) => !s)}\r\n+                title=\"React\"\r\n+              >\r\n+                😊\r\n+              </button>\r\n+            )}\r\n           </div>\r\n         )}\r\n \r\n-        {/* Emoji Reaction Picker */}\r\n+        {/* ✅ Emoji Picker */}\r\n         {showReactions && (\r\n-  <div className=\"absolute z-50 top-full right-0 mt-2\">\r\n-    <Picker\r\n-      data={data}\r\n-      theme=\"auto\"\r\n-      onEmojiSelect={(emoji: any) => {\r\n-        onReact?.(emoji.native);\r\n-        setShowReactions(false);\r\n-      }}\r\n-    />\r\n-  </div>\r\n-)}\r\n+          <div className=\"absolute z-50 top-full right-0 mt-2\">\r\n+            <Picker\r\n+              data={data}\r\n+              theme=\"auto\"\r\n+              onEmojiSelect={(emoji: any) => {\r\n+                onReact?.(emoji.native);\r\n+                setShowReactions(false);\r\n+              }}\r\n+            />\r\n+          </div>\r\n+        )}\r\n       </div>\r\n \r\n-      {/* Seen / Delivered Status */}\r\n+      {/* Status */}\r\n       {sender === \"me\" && status && (\r\n         <div className=\"text-[10px] text-right text-neutral-400 mt-1\">\r\n-          {status === \"seen\" ? \"Seen ✅\" : status === \"delivered\" ? \"Delivered ✔️\" : \"Sent\"}\r\n+          {status === \"seen\"\r\n+            ? \"Seen ✅\"\r\n+            : status === \"delivered\"\r\n+            ? \"Delivered ✔️\"\r\n+            : \"Sent\"}\r\n         </div>\r\n       )}\r\n     </div>\r\n   );\r\n"
                },
                {
                    "date": 1752324253537,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n \"use client\";\r\n \r\n import React, { useState } from \"react\";\r\n-import { Picker } from \"emoji-mart\"; // ✅ CORRECT way for emoji-mart v5+\r\n+import Picker from \"emoji-mart\";\r\n import data from \"@emoji-mart/data\";\r\n \r\n interface MessageProps {\r\n   id: string;\r\n"
                },
                {
                    "date": 1752324318304,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n \"use client\";\r\n \r\n import React, { useState } from \"react\";\r\n-import Picker from \"emoji-mart\";\r\n+import { Picker } from \"emoji-mart\"; // ✅ CORRECT\r\n import data from \"@emoji-mart/data\";\r\n \r\n interface MessageProps {\r\n   id: string;\r\n"
                },
                {
                    "date": 1752324391757,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -155,19 +155,20 @@\n         )}\r\n \r\n         {/* ✅ Emoji Picker */}\r\n         {showReactions && (\r\n-          <div className=\"absolute z-50 top-full right-0 mt-2\">\r\n-            <Picker\r\n-              data={data}\r\n-              theme=\"auto\"\r\n-              onEmojiSelect={(emoji: any) => {\r\n-                onReact?.(emoji.native);\r\n-                setShowReactions(false);\r\n-              }}\r\n-            />\r\n-          </div>\r\n-        )}\r\n+  <div className=\"absolute z-50 top-full right-0 mt-2\">\r\n+    <Picker\r\n+      data={data}\r\n+      theme=\"auto\"\r\n+      onEmojiSelect={(emoji: any) => {\r\n+        onReact?.(emoji.native);\r\n+        setShowReactions(false);\r\n+      }}\r\n+    />\r\n+  </div>\r\n+)}\r\n+\r\n       </div>\r\n \r\n       {/* Status */}\r\n       {sender === \"me\" && status && (\r\n"
                },
                {
                    "date": 1752325042483,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,11 @@\n \"use client\";\r\n \r\n import React, { useState } from \"react\";\r\n-import { Picker } from \"emoji-mart\"; // ✅ CORRECT\r\n+import * as EmojiMart from \"emoji-mart\";\r\n import data from \"@emoji-mart/data\";\r\n \r\n+\r\n interface MessageProps {\r\n   id: string;\r\n   sender: \"me\" | \"partner\";\r\n   content: string;\r\n"
                },
                {
                    "date": 1752325147071,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -157,16 +157,17 @@\n \r\n         {/* ✅ Emoji Picker */}\r\n         {showReactions && (\r\n   <div className=\"absolute z-50 top-full right-0 mt-2\">\r\n-    <Picker\r\n-      data={data}\r\n-      theme=\"auto\"\r\n-      onEmojiSelect={(emoji: any) => {\r\n-        onReact?.(emoji.native);\r\n-        setShowReactions(false);\r\n-      }}\r\n-    />\r\n+    <EmojiMart.Picker\r\n+  data={data}\r\n+  theme=\"auto\"\r\n+  onEmojiSelect={(emoji: any) => {\r\n+    onReact?.(emoji.native);\r\n+    setShowReactions(false);\r\n+  }}\r\n+/>\r\n+\r\n   </div>\r\n )}\r\n \r\n       </div>\r\n"
                },
                {
                    "date": 1752325196139,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n \"use client\";\r\n \r\n import React, { useState } from \"react\";\r\n-import * as EmojiMart from \"emoji-mart\";\r\n+import dynamic from \"next/dynamic\";\r\n import data from \"@emoji-mart/data\";\r\n \r\n \r\n interface MessageProps {\r\n"
                },
                {
                    "date": 1752325305922,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,8 +3,12 @@\n import React, { useState } from \"react\";\r\n import dynamic from \"next/dynamic\";\r\n import data from \"@emoji-mart/data\";\r\n \r\n+// ✅ Dynamically import emoji-mart Picker to fix JSX issues with TS + bundler\r\n+const Picker = dynamic(() => import(\"emoji-mart\").then(mod => mod.Picker), {\r\n+  ssr: false,\r\n+});\r\n \r\n interface MessageProps {\r\n   id: string;\r\n   sender: \"me\" | \"partner\";\r\n@@ -130,9 +134,9 @@\n             )}\r\n           </>\r\n         )}\r\n \r\n-        {/* Action Buttons (edit/delete/react) */}\r\n+        {/* Action Buttons */}\r\n         {sender === \"me\" && !isEditing && (\r\n           <div className=\"absolute top-1 right-1 hidden group-hover:flex gap-1 text-white text-sm z-10\">\r\n             {onEdit && (\r\n               <button onClick={() => setIsEditing(true)} title=\"Edit\">\r\n@@ -154,26 +158,24 @@\n             )}\r\n           </div>\r\n         )}\r\n \r\n-        {/* ✅ Emoji Picker */}\r\n+        {/* ✅ Emoji Picker (Fixed JSX issue) */}\r\n         {showReactions && (\r\n-  <div className=\"absolute z-50 top-full right-0 mt-2\">\r\n-    <EmojiMart.Picker\r\n-  data={data}\r\n-  theme=\"auto\"\r\n-  onEmojiSelect={(emoji: any) => {\r\n-    onReact?.(emoji.native);\r\n-    setShowReactions(false);\r\n-  }}\r\n-/>\r\n-\r\n-  </div>\r\n-)}\r\n-\r\n+          <div className=\"absolute z-50 top-full right-0 mt-2\">\r\n+            <Picker\r\n+              data={data}\r\n+              theme=\"auto\"\r\n+              onEmojiSelect={(emoji: any) => {\r\n+                onReact?.(emoji.native);\r\n+                setShowReactions(false);\r\n+              }}\r\n+            />\r\n+          </div>\r\n+        )}\r\n       </div>\r\n \r\n-      {/* Status */}\r\n+      {/* Message Status */}\r\n       {sender === \"me\" && status && (\r\n         <div className=\"text-[10px] text-right text-neutral-400 mt-1\">\r\n           {status === \"seen\"\r\n             ? \"Seen ✅\"\r\n"
                },
                {
                    "date": 1752325732454,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,15 +1,8 @@\n \"use client\";\r\n \r\n import React, { useState } from \"react\";\r\n-import dynamic from \"next/dynamic\";\r\n-import data from \"@emoji-mart/data\";\r\n \r\n-// ✅ Dynamically import emoji-mart Picker to fix JSX issues with TS + bundler\r\n-const Picker = dynamic(() => import(\"emoji-mart\").then(mod => mod.Picker), {\r\n-  ssr: false,\r\n-});\r\n-\r\n interface MessageProps {\r\n   id: string;\r\n   sender: \"me\" | \"partner\";\r\n   content: string;\r\n@@ -21,8 +14,10 @@\n   onEdit?: (newContent: string) => void;\r\n   onReact?: (reaction: string) => void;\r\n }\r\n \r\n+const topEmojis = [\"😂\", \"❤️\", \"🔥\", \"👍\", \"😭\", \"😍\", \"😊\", \"😒\", \"😎\", \"🤔\", \"🙌\", \"🥺\", \"🤯\", \"🎉\", \"💀\", \"😩\", \"😡\", \"🥵\", \"😇\", \"💖\"];\r\n+\r\n export default function Message({\r\n   sender,\r\n   content,\r\n   timestamp,\r\n@@ -158,24 +153,28 @@\n             )}\r\n           </div>\r\n         )}\r\n \r\n-        {/* ✅ Emoji Picker (Fixed JSX issue) */}\r\n+        {/* ✅ Emoji Bar */}\r\n         {showReactions && (\r\n-          <div className=\"absolute z-50 top-full right-0 mt-2\">\r\n-            <Picker\r\n-              data={data}\r\n-              theme=\"auto\"\r\n-              onEmojiSelect={(emoji: any) => {\r\n-                onReact?.(emoji.native);\r\n-                setShowReactions(false);\r\n-              }}\r\n-            />\r\n+          <div className=\"absolute z-50 top-full right-0 mt-2 bg-white dark:bg-neutral-800 p-2 border rounded shadow flex flex-wrap gap-1 max-w-xs\">\r\n+            {topEmojis.map((emoji) => (\r\n+              <button\r\n+                key={emoji}\r\n+                onClick={() => {\r\n+                  onReact?.(emoji);\r\n+                  setShowReactions(false);\r\n+                }}\r\n+                className=\"text-xl hover:scale-110 transition-transform\"\r\n+              >\r\n+                {emoji}\r\n+              </button>\r\n+            ))}\r\n           </div>\r\n         )}\r\n       </div>\r\n \r\n-      {/* Message Status */}\r\n+      {/* Status */}\r\n       {sender === \"me\" && status && (\r\n         <div className=\"text-[10px] text-right text-neutral-400 mt-1\">\r\n           {status === \"seen\"\r\n             ? \"Seen ✅\"\r\n"
                },
                {
                    "date": 1752336344334,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,194 @@\n+\"use client\";\r\n+\r\n+import React, { useState } from \"react\";\r\n+\r\n+interface MessageProps {\r\n+  id: string;\r\n+  sender: \"me\" | \"partner\";\r\n+  content: string;\r\n+  timestamp: string;\r\n+  status?: \"sent\" | \"delivered\" | \"seen\";\r\n+  type?: \"text\" | \"image\" | \"audio\" | \"video\";\r\n+  reactions?: { [userId: string]: string };\r\n+  onDelete?: () => void;\r\n+  onEdit?: (newContent: string) => void;\r\n+  onReact?: (reaction: string) => void;\r\n+}\r\n+\r\n+const topEmojis = [\r\n+  \"😂\", \"❤️\", \"🔥\", \"👍\", \"😭\", \"😍\", \"😊\", \"😒\", \"😎\", \"🤔\",\r\n+  \"🙌\", \"🥺\", \"🤯\", \"🎉\", \"💀\", \"😩\", \"😡\", \"🥵\", \"😇\", \"💖\",\r\n+];\r\n+\r\n+export default function Message({\r\n+  sender,\r\n+  content,\r\n+  timestamp,\r\n+  status,\r\n+  type = \"text\",\r\n+  reactions = {},\r\n+  onDelete,\r\n+  onEdit,\r\n+  onReact,\r\n+}: MessageProps) {\r\n+  const [isEditing, setIsEditing] = useState(false);\r\n+  const [editedContent, setEditedContent] = useState(content);\r\n+  const [showReactions, setShowReactions] = useState(false);\r\n+\r\n+  const isSender = sender === \"me\";\r\n+  const time = new Date(timestamp).toLocaleTimeString([], {\r\n+    hour: \"2-digit\",\r\n+    minute: \"2-digit\",\r\n+  });\r\n+\r\n+  const handleEditSubmit = () => {\r\n+    if (editedContent.trim()) {\r\n+      onEdit?.(editedContent.trim());\r\n+      setIsEditing(false);\r\n+    }\r\n+  };\r\n+\r\n+  const renderMedia = () => {\r\n+    switch (type) {\r\n+      case \"image\":\r\n+        return (\r\n+          <img\r\n+            src={content}\r\n+            alt=\"Image\"\r\n+            className=\"rounded max-w-xs mt-2 object-cover border border-gray-300 dark:border-gray-600\"\r\n+          />\r\n+        );\r\n+      case \"audio\":\r\n+        return <audio controls src={content} className=\"mt-2 w-full\" />;\r\n+      case \"video\":\r\n+        return (\r\n+          <video\r\n+            controls\r\n+            src={content}\r\n+            className=\"mt-2 w-full rounded max-h-64 object-cover\"\r\n+          />\r\n+        );\r\n+      default:\r\n+        return <p className=\"whitespace-pre-wrap break-words\">{content}</p>;\r\n+    }\r\n+  };\r\n+\r\n+  return (\r\n+    <div className={`w-full flex ${isSender ? \"justify-end\" : \"justify-start\"} px-2`}>\r\n+      <div className=\"flex flex-col max-w-[85%] sm:max-w-[75%] md:max-w-[60%] lg:max-w-[50%]\">\r\n+        {/* Sender Info */}\r\n+        <div className=\"text-xs mb-1 text-neutral-500 dark:text-neutral-400\">\r\n+          {isSender ? \"You\" : \"Stranger\"} • {time}\r\n+        </div>\r\n+\r\n+        {/* Message Bubble */}\r\n+        <div\r\n+          className={`relative group px-4 py-2 rounded-lg text-sm shadow-md ${\r\n+            isSender\r\n+              ? \"bg-blue-600 text-white rounded-br-none self-end\"\r\n+              : \"bg-neutral-200 dark:bg-neutral-700 text-neutral-900 dark:text-neutral-100 rounded-bl-none self-start\"\r\n+          }`}\r\n+        >\r\n+          {isEditing ? (\r\n+            <div className=\"flex flex-col gap-1\">\r\n+              <input\r\n+                type=\"text\"\r\n+                className=\"text-black px-2 py-1 rounded text-sm border border-gray-300 focus:outline-none focus:ring focus:ring-blue-500\"\r\n+                value={editedContent}\r\n+                onChange={(e) => setEditedContent(e.target.value)}\r\n+                autoFocus\r\n+              />\r\n+              <div className=\"flex gap-2 justify-end text-xs mt-1\">\r\n+                <button\r\n+                  onClick={handleEditSubmit}\r\n+                  className=\"text-green-600 hover:underline\"\r\n+                >\r\n+                  Save\r\n+                </button>\r\n+                <button\r\n+                  onClick={() => {\r\n+                    setEditedContent(content);\r\n+                    setIsEditing(false);\r\n+                  }}\r\n+                  className=\"text-red-500 hover:underline\"\r\n+                >\r\n+                  Cancel\r\n+                </button>\r\n+              </div>\r\n+            </div>\r\n+          ) : (\r\n+            <>\r\n+              {type === \"text\" ? <span>{content}</span> : renderMedia()}\r\n+\r\n+              {/* Reactions */}\r\n+              {Object.values(reactions).length > 0 && (\r\n+                <div className=\"mt-1 flex gap-1 text-lg flex-wrap\">\r\n+                  {Object.values(reactions).map((emoji, idx) => (\r\n+                    <span key={idx}>{emoji}</span>\r\n+                  ))}\r\n+                </div>\r\n+              )}\r\n+            </>\r\n+          )}\r\n+\r\n+          {/* Action Buttons */}\r\n+          {isSender && !isEditing && (\r\n+            <div className=\"absolute top-1 right-1 hidden group-hover:flex gap-1 text-white text-sm z-10\">\r\n+              {onEdit && (\r\n+                <button onClick={() => setIsEditing(true)} title=\"Edit\">\r\n+                  ✏️\r\n+                </button>\r\n+              )}\r\n+              {onDelete && (\r\n+                <button onClick={onDelete} title=\"Delete\">\r\n+                  🗑️\r\n+                </button>\r\n+              )}\r\n+              {onReact && (\r\n+                <button\r\n+                  onClick={() => setShowReactions((prev) => !prev)}\r\n+                  title=\"React\"\r\n+                >\r\n+                  😊\r\n+                </button>\r\n+              )}\r\n+            </div>\r\n+          )}\r\n+\r\n+          {/* Emoji Reaction Picker */}\r\n+          {showReactions && (\r\n+            <div\r\n+              className={`absolute z-50 mt-2 bg-white dark:bg-neutral-800 p-2 border rounded shadow flex flex-wrap gap-1 max-w-xs ${\r\n+                isSender ? \"right-0\" : \"left-0\"\r\n+              } top-full`}\r\n+            >\r\n+              {topEmojis.map((emoji) => (\r\n+                <button\r\n+                  key={emoji}\r\n+                  onClick={() => {\r\n+                    onReact?.(emoji);\r\n+                    setShowReactions(false);\r\n+                  }}\r\n+                  className=\"text-xl hover:scale-110 transition-transform\"\r\n+                >\r\n+                  {emoji}\r\n+                </button>\r\n+              ))}\r\n+            </div>\r\n+          )}\r\n+        </div>\r\n+\r\n+        {/* Message Status */}\r\n+        {isSender && status && (\r\n+          <div className=\"text-[10px] text-right text-neutral-400 mt-1\">\r\n+            {status === \"seen\"\r\n+              ? \"Seen ✅\"\r\n+              : status === \"delivered\"\r\n+              ? \"Delivered ✔️\"\r\n+              : \"Sent\"}\r\n+          </div>\r\n+        )}\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1752336361264,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -96,8 +96,10 @@\n                 className=\"text-black px-2 py-1 rounded text-sm border border-gray-300 focus:outline-none focus:ring focus:ring-blue-500\"\r\n                 value={editedContent}\r\n                 onChange={(e) => setEditedContent(e.target.value)}\r\n                 autoFocus\r\n+                placeholder=\"Edit your message\"\r\n+                title=\"Edit message\"\r\n               />\r\n               <div className=\"flex gap-2 justify-end text-xs mt-1\">\r\n                 <button\r\n                   onClick={handleEditSubmit}\r\n@@ -191,192 +193,4 @@\n       </div>\r\n     </div>\r\n   );\r\n }\r\n-\"use client\";\r\n-\r\n-import React, { useState } from \"react\";\r\n-\r\n-interface MessageProps {\r\n-  id: string;\r\n-  sender: \"me\" | \"partner\";\r\n-  content: string;\r\n-  timestamp: string;\r\n-  status?: \"sent\" | \"delivered\" | \"seen\";\r\n-  type?: \"text\" | \"image\" | \"audio\" | \"video\";\r\n-  reactions?: { [userId: string]: string };\r\n-  onDelete?: () => void;\r\n-  onEdit?: (newContent: string) => void;\r\n-  onReact?: (reaction: string) => void;\r\n-}\r\n-\r\n-const topEmojis = [\"😂\", \"❤️\", \"🔥\", \"👍\", \"😭\", \"😍\", \"😊\", \"😒\", \"😎\", \"🤔\", \"🙌\", \"🥺\", \"🤯\", \"🎉\", \"💀\", \"😩\", \"😡\", \"🥵\", \"😇\", \"💖\"];\r\n-\r\n-export default function Message({\r\n-  sender,\r\n-  content,\r\n-  timestamp,\r\n-  status,\r\n-  type = \"text\",\r\n-  reactions = {},\r\n-  onDelete,\r\n-  onEdit,\r\n-  onReact,\r\n-}: MessageProps) {\r\n-  const [isEditing, setIsEditing] = useState(false);\r\n-  const [editedContent, setEditedContent] = useState(content);\r\n-  const [showReactions, setShowReactions] = useState(false);\r\n-\r\n-  const time = new Date(timestamp).toLocaleTimeString([], {\r\n-    hour: \"2-digit\",\r\n-    minute: \"2-digit\",\r\n-  });\r\n-\r\n-  const handleEditSubmit = () => {\r\n-    if (editedContent.trim()) {\r\n-      onEdit?.(editedContent.trim());\r\n-      setIsEditing(false);\r\n-    }\r\n-  };\r\n-\r\n-  const renderMedia = () => {\r\n-    switch (type) {\r\n-      case \"image\":\r\n-        return (\r\n-          <img\r\n-            src={content}\r\n-            alt=\"Image\"\r\n-            className=\"rounded max-w-xs mt-2 object-cover border border-gray-200 dark:border-gray-600\"\r\n-          />\r\n-        );\r\n-      case \"audio\":\r\n-        return <audio controls src={content} className=\"mt-2 w-full\" />;\r\n-      case \"video\":\r\n-        return (\r\n-          <video\r\n-            controls\r\n-            src={content}\r\n-            className=\"mt-2 w-full rounded max-h-64 object-cover\"\r\n-          />\r\n-        );\r\n-      default:\r\n-        return <p className=\"whitespace-pre-wrap\">{content}</p>;\r\n-    }\r\n-  };\r\n-\r\n-  return (\r\n-    <div\r\n-      className={`flex flex-col ${\r\n-        sender === \"me\" ? \"items-end\" : \"items-start\"\r\n-      } w-full px-2`}\r\n-    >\r\n-      {/* Sender and Timestamp */}\r\n-      <div className=\"flex items-center gap-2 text-xs mb-1 text-neutral-500 dark:text-neutral-400\">\r\n-        <span>{sender === \"me\" ? \"You\" : \"Stranger\"}</span>\r\n-        <span className=\"text-[10px]\">{time}</span>\r\n-      </div>\r\n-\r\n-      {/* Message Bubble */}\r\n-      <div\r\n-        className={`relative group px-4 py-2 rounded-lg text-sm break-words shadow-md ${\r\n-          sender === \"me\"\r\n-            ? \"bg-blue-600 text-white rounded-br-none\"\r\n-            : \"bg-neutral-200 dark:bg-neutral-700 text-neutral-900 dark:text-neutral-100 rounded-bl-none\"\r\n-        } max-w-[85%] sm:max-w-[75%] md:max-w-[60%] lg:max-w-[50%]`}\r\n-      >\r\n-        {isEditing ? (\r\n-          <div className=\"flex flex-col gap-1\">\r\n-            <input\r\n-              type=\"text\"\r\n-              className=\"text-black px-2 py-1 rounded text-sm border border-gray-300 focus:outline-none focus:ring focus:ring-blue-500\"\r\n-              value={editedContent}\r\n-              onChange={(e) => setEditedContent(e.target.value)}\r\n-              autoFocus\r\n-              placeholder=\"Edit your message\"\r\n-            />\r\n-            <div className=\"flex gap-2 justify-end text-xs mt-1\">\r\n-              <button\r\n-                onClick={handleEditSubmit}\r\n-                className=\"text-green-600 hover:underline\"\r\n-              >\r\n-                Save\r\n-              </button>\r\n-              <button\r\n-                onClick={() => {\r\n-                  setEditedContent(content);\r\n-                  setIsEditing(false);\r\n-                }}\r\n-                className=\"text-red-500 hover:underline\"\r\n-              >\r\n-                Cancel\r\n-              </button>\r\n-            </div>\r\n-          </div>\r\n-        ) : (\r\n-          <>\r\n-            {type === \"text\" ? <span>{content}</span> : renderMedia()}\r\n-            {Object.values(reactions).length > 0 && (\r\n-              <div className=\"mt-1 flex gap-1 text-lg flex-wrap\">\r\n-                {Object.values(reactions).map((emoji, index) => (\r\n-                  <span key={index}>{emoji}</span>\r\n-                ))}\r\n-              </div>\r\n-            )}\r\n-          </>\r\n-        )}\r\n-\r\n-        {/* Action Buttons */}\r\n-        {sender === \"me\" && !isEditing && (\r\n-          <div className=\"absolute top-1 right-1 hidden group-hover:flex gap-1 text-white text-sm z-10\">\r\n-            {onEdit && (\r\n-              <button onClick={() => setIsEditing(true)} title=\"Edit\">\r\n-                ✏️\r\n-              </button>\r\n-            )}\r\n-            {onDelete && (\r\n-              <button onClick={onDelete} title=\"Delete\">\r\n-                🗑️\r\n-              </button>\r\n-            )}\r\n-            {onReact && (\r\n-              <button\r\n-                onClick={() => setShowReactions((s) => !s)}\r\n-                title=\"React\"\r\n-              >\r\n-                😊\r\n-              </button>\r\n-            )}\r\n-          </div>\r\n-        )}\r\n-\r\n-        {/* ✅ Emoji Bar */}\r\n-        {showReactions && (\r\n-          <div className=\"absolute z-50 top-full right-0 mt-2 bg-white dark:bg-neutral-800 p-2 border rounded shadow flex flex-wrap gap-1 max-w-xs\">\r\n-            {topEmojis.map((emoji) => (\r\n-              <button\r\n-                key={emoji}\r\n-                onClick={() => {\r\n-                  onReact?.(emoji);\r\n-                  setShowReactions(false);\r\n-                }}\r\n-                className=\"text-xl hover:scale-110 transition-transform\"\r\n-              >\r\n-                {emoji}\r\n-              </button>\r\n-            ))}\r\n-          </div>\r\n-        )}\r\n-      </div>\r\n-\r\n-      {/* Status */}\r\n-      {sender === \"me\" && status && (\r\n-        <div className=\"text-[10px] text-right text-neutral-400 mt-1\">\r\n-          {status === \"seen\"\r\n-            ? \"Seen ✅\"\r\n-            : status === \"delivered\"\r\n-            ? \"Delivered ✔️\"\r\n-            : \"Sent\"}\r\n-        </div>\r\n-      )}\r\n-    </div>\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1752336655932,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,12 +14,9 @@\n   onEdit?: (newContent: string) => void;\r\n   onReact?: (reaction: string) => void;\r\n }\r\n \r\n-const topEmojis = [\r\n-  \"😂\", \"❤️\", \"🔥\", \"👍\", \"😭\", \"😍\", \"😊\", \"😒\", \"😎\", \"🤔\",\r\n-  \"🙌\", \"🥺\", \"🤯\", \"🎉\", \"💀\", \"😩\", \"😡\", \"🥵\", \"😇\", \"💖\",\r\n-];\r\n+const topEmojis = [\"😂\", \"❤️\", \"🔥\", \"👍\", \"😭\", \"😍\", \"😊\", \"😒\", \"😎\", \"🤔\", \"🙌\", \"🥺\", \"🤯\", \"🎉\", \"💀\", \"😩\", \"😡\", \"🥵\", \"😇\", \"💖\"];\r\n \r\n export default function Message({\r\n   sender,\r\n   content,\r\n@@ -50,44 +47,30 @@\n \r\n   const renderMedia = () => {\r\n     switch (type) {\r\n       case \"image\":\r\n-        return (\r\n-          <img\r\n-            src={content}\r\n-            alt=\"Image\"\r\n-            className=\"rounded max-w-xs mt-2 object-cover border border-gray-300 dark:border-gray-600\"\r\n-          />\r\n-        );\r\n+        return <img src={content} alt=\"Image\" className=\"rounded max-w-xs mt-2 object-cover border border-gray-300 dark:border-gray-600\" />;\r\n       case \"audio\":\r\n         return <audio controls src={content} className=\"mt-2 w-full\" />;\r\n       case \"video\":\r\n-        return (\r\n-          <video\r\n-            controls\r\n-            src={content}\r\n-            className=\"mt-2 w-full rounded max-h-64 object-cover\"\r\n-          />\r\n-        );\r\n+        return <video controls src={content} className=\"mt-2 w-full rounded max-h-64 object-cover\" />;\r\n       default:\r\n         return <p className=\"whitespace-pre-wrap break-words\">{content}</p>;\r\n     }\r\n   };\r\n \r\n   return (\r\n     <div className={`w-full flex ${isSender ? \"justify-end\" : \"justify-start\"} px-2`}>\r\n-      <div className=\"flex flex-col max-w-[85%] sm:max-w-[75%] md:max-w-[60%] lg:max-w-[50%]\">\r\n-        {/* Sender Info */}\r\n+      <div className={`flex flex-col ${isSender ? \"items-end\" : \"items-start\"} max-w-[85%] sm:max-w-[75%] md:max-w-[60%] lg:max-w-[50%]`}>\r\n         <div className=\"text-xs mb-1 text-neutral-500 dark:text-neutral-400\">\r\n           {isSender ? \"You\" : \"Stranger\"} • {time}\r\n         </div>\r\n \r\n-        {/* Message Bubble */}\r\n         <div\r\n           className={`relative group px-4 py-2 rounded-lg text-sm shadow-md ${\r\n             isSender\r\n-              ? \"bg-blue-600 text-white rounded-br-none self-end\"\r\n-              : \"bg-neutral-200 dark:bg-neutral-700 text-neutral-900 dark:text-neutral-100 rounded-bl-none self-start\"\r\n+              ? \"bg-blue-600 text-white rounded-br-none\"\r\n+              : \"bg-neutral-200 dark:bg-neutral-700 text-neutral-900 dark:text-neutral-100 rounded-bl-none\"\r\n           }`}\r\n         >\r\n           {isEditing ? (\r\n             <div className=\"flex flex-col gap-1\">\r\n@@ -96,34 +79,17 @@\n                 className=\"text-black px-2 py-1 rounded text-sm border border-gray-300 focus:outline-none focus:ring focus:ring-blue-500\"\r\n                 value={editedContent}\r\n                 onChange={(e) => setEditedContent(e.target.value)}\r\n                 autoFocus\r\n-                placeholder=\"Edit your message\"\r\n-                title=\"Edit message\"\r\n               />\r\n               <div className=\"flex gap-2 justify-end text-xs mt-1\">\r\n-                <button\r\n-                  onClick={handleEditSubmit}\r\n-                  className=\"text-green-600 hover:underline\"\r\n-                >\r\n-                  Save\r\n-                </button>\r\n-                <button\r\n-                  onClick={() => {\r\n-                    setEditedContent(content);\r\n-                    setIsEditing(false);\r\n-                  }}\r\n-                  className=\"text-red-500 hover:underline\"\r\n-                >\r\n-                  Cancel\r\n-                </button>\r\n+                <button onClick={handleEditSubmit} className=\"text-green-600 hover:underline\">Save</button>\r\n+                <button onClick={() => { setEditedContent(content); setIsEditing(false); }} className=\"text-red-500 hover:underline\">Cancel</button>\r\n               </div>\r\n             </div>\r\n           ) : (\r\n             <>\r\n               {type === \"text\" ? <span>{content}</span> : renderMedia()}\r\n-\r\n-              {/* Reactions */}\r\n               {Object.values(reactions).length > 0 && (\r\n                 <div className=\"mt-1 flex gap-1 text-lg flex-wrap\">\r\n                   {Object.values(reactions).map((emoji, idx) => (\r\n                     <span key={idx}>{emoji}</span>\r\n@@ -135,30 +101,15 @@\n \r\n           {/* Action Buttons */}\r\n           {isSender && !isEditing && (\r\n             <div className=\"absolute top-1 right-1 hidden group-hover:flex gap-1 text-white text-sm z-10\">\r\n-              {onEdit && (\r\n-                <button onClick={() => setIsEditing(true)} title=\"Edit\">\r\n-                  ✏️\r\n-                </button>\r\n-              )}\r\n-              {onDelete && (\r\n-                <button onClick={onDelete} title=\"Delete\">\r\n-                  🗑️\r\n-                </button>\r\n-              )}\r\n-              {onReact && (\r\n-                <button\r\n-                  onClick={() => setShowReactions((prev) => !prev)}\r\n-                  title=\"React\"\r\n-                >\r\n-                  😊\r\n-                </button>\r\n-              )}\r\n+              {onEdit && <button onClick={() => setIsEditing(true)} title=\"Edit\">✏️</button>}\r\n+              {onDelete && <button onClick={onDelete} title=\"Delete\">🗑️</button>}\r\n+              {onReact && <button onClick={() => setShowReactions((s) => !s)} title=\"React\">😊</button>}\r\n             </div>\r\n           )}\r\n \r\n-          {/* Emoji Reaction Picker */}\r\n+          {/* Emoji Picker */}\r\n           {showReactions && (\r\n             <div\r\n               className={`absolute z-50 mt-2 bg-white dark:bg-neutral-800 p-2 border rounded shadow flex flex-wrap gap-1 max-w-xs ${\r\n                 isSender ? \"right-0\" : \"left-0\"\r\n@@ -179,16 +130,11 @@\n             </div>\r\n           )}\r\n         </div>\r\n \r\n-        {/* Message Status */}\r\n         {isSender && status && (\r\n           <div className=\"text-[10px] text-right text-neutral-400 mt-1\">\r\n-            {status === \"seen\"\r\n-              ? \"Seen ✅\"\r\n-              : status === \"delivered\"\r\n-              ? \"Delivered ✔️\"\r\n-              : \"Sent\"}\r\n+            {status === \"seen\" ? \"Seen ✅\" : status === \"delivered\" ? \"Delivered ✔️\" : \"Sent\"}\r\n           </div>\r\n         )}\r\n       </div>\r\n     </div>\r\n"
                },
                {
                    "date": 1752336680579,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -79,8 +79,10 @@\n                 className=\"text-black px-2 py-1 rounded text-sm border border-gray-300 focus:outline-none focus:ring focus:ring-blue-500\"\r\n                 value={editedContent}\r\n                 onChange={(e) => setEditedContent(e.target.value)}\r\n                 autoFocus\r\n+                placeholder=\"Edit your message\"\r\n+                aria-label=\"Edit message\"\r\n               />\r\n               <div className=\"flex gap-2 justify-end text-xs mt-1\">\r\n                 <button onClick={handleEditSubmit} className=\"text-green-600 hover:underline\">Save</button>\r\n                 <button onClick={() => { setEditedContent(content); setIsEditing(false); }} className=\"text-red-500 hover:underline\">Cancel</button>\r\n"
                },
                {
                    "date": 1752337656763,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,8 +32,9 @@\n   const [editedContent, setEditedContent] = useState(content);\r\n   const [showReactions, setShowReactions] = useState(false);\r\n \r\n   const isSender = sender === \"me\";\r\n+\r\n   const time = new Date(timestamp).toLocaleTimeString([], {\r\n     hour: \"2-digit\",\r\n     minute: \"2-digit\",\r\n   });\r\n@@ -58,31 +59,32 @@\n     }\r\n   };\r\n \r\n   return (\r\n-    <div className={`w-full flex ${isSender ? \"justify-end\" : \"justify-start\"} px-2`}>\r\n-      <div className={`flex flex-col ${isSender ? \"items-end\" : \"items-start\"} max-w-[85%] sm:max-w-[75%] md:max-w-[60%] lg:max-w-[50%]`}>\r\n-        <div className=\"text-xs mb-1 text-neutral-500 dark:text-neutral-400\">\r\n+    <div className={`w-full px-2 py-1 flex ${isSender ? \"justify-end\" : \"justify-start\"}`}>\r\n+      <div className={`flex flex-col gap-1 ${isSender ? \"items-end\" : \"items-start\"} max-w-[85%] sm:max-w-[75%] md:max-w-[60%] lg:max-w-[50%]`}>\r\n+        {/* Sender & Timestamp */}\r\n+        <div className=\"text-xs text-neutral-500 dark:text-neutral-400 mb-1\">\r\n           {isSender ? \"You\" : \"Stranger\"} • {time}\r\n         </div>\r\n \r\n+        {/* Message Bubble */}\r\n         <div\r\n           className={`relative group px-4 py-2 rounded-lg text-sm shadow-md ${\r\n             isSender\r\n               ? \"bg-blue-600 text-white rounded-br-none\"\r\n               : \"bg-neutral-200 dark:bg-neutral-700 text-neutral-900 dark:text-neutral-100 rounded-bl-none\"\r\n           }`}\r\n         >\r\n+          {/* Content or Editor */}\r\n           {isEditing ? (\r\n             <div className=\"flex flex-col gap-1\">\r\n               <input\r\n                 type=\"text\"\r\n                 className=\"text-black px-2 py-1 rounded text-sm border border-gray-300 focus:outline-none focus:ring focus:ring-blue-500\"\r\n                 value={editedContent}\r\n                 onChange={(e) => setEditedContent(e.target.value)}\r\n                 autoFocus\r\n-                placeholder=\"Edit your message\"\r\n-                aria-label=\"Edit message\"\r\n               />\r\n               <div className=\"flex gap-2 justify-end text-xs mt-1\">\r\n                 <button onClick={handleEditSubmit} className=\"text-green-600 hover:underline\">Save</button>\r\n                 <button onClick={() => { setEditedContent(content); setIsEditing(false); }} className=\"text-red-500 hover:underline\">Cancel</button>\r\n@@ -90,10 +92,12 @@\n             </div>\r\n           ) : (\r\n             <>\r\n               {type === \"text\" ? <span>{content}</span> : renderMedia()}\r\n+\r\n+              {/* Reactions */}\r\n               {Object.values(reactions).length > 0 && (\r\n-                <div className=\"mt-1 flex gap-1 text-lg flex-wrap\">\r\n+                <div className=\"mt-2 flex gap-1 text-lg flex-wrap\">\r\n                   {Object.values(reactions).map((emoji, idx) => (\r\n                     <span key={idx}>{emoji}</span>\r\n                   ))}\r\n                 </div>\r\n@@ -101,22 +105,24 @@\n             </>\r\n           )}\r\n \r\n           {/* Action Buttons */}\r\n-          {isSender && !isEditing && (\r\n-            <div className=\"absolute top-1 right-1 hidden group-hover:flex gap-1 text-white text-sm z-10\">\r\n-              {onEdit && <button onClick={() => setIsEditing(true)} title=\"Edit\">✏️</button>}\r\n-              {onDelete && <button onClick={onDelete} title=\"Delete\">🗑️</button>}\r\n+          {!isEditing && (\r\n+            <div\r\n+              className={`absolute top-1 ${isSender ? \"right-1 text-white\" : \"left-1 text-black dark:text-white\"} hidden group-hover:flex gap-1 text-sm z-10`}\r\n+            >\r\n+              {isSender && onEdit && <button onClick={() => setIsEditing(true)} title=\"Edit\">✏️</button>}\r\n+              {isSender && onDelete && <button onClick={onDelete} title=\"Delete\">🗑️</button>}\r\n               {onReact && <button onClick={() => setShowReactions((s) => !s)} title=\"React\">😊</button>}\r\n             </div>\r\n           )}\r\n \r\n           {/* Emoji Picker */}\r\n           {showReactions && (\r\n             <div\r\n-              className={`absolute z-50 mt-2 bg-white dark:bg-neutral-800 p-2 border rounded shadow flex flex-wrap gap-1 max-w-xs ${\r\n+              className={`absolute top-full mt-2 z-50 bg-white dark:bg-neutral-800 p-2 border rounded shadow flex flex-wrap gap-1 max-w-xs ${\r\n                 isSender ? \"right-0\" : \"left-0\"\r\n-              } top-full`}\r\n+              }`}\r\n             >\r\n               {topEmojis.map((emoji) => (\r\n                 <button\r\n                   key={emoji}\r\n@@ -132,10 +138,11 @@\n             </div>\r\n           )}\r\n         </div>\r\n \r\n+        {/* Message Status */}\r\n         {isSender && status && (\r\n-          <div className=\"text-[10px] text-right text-neutral-400 mt-1\">\r\n+          <div className=\"text-[10px] text-neutral-400 mt-0.5\">\r\n             {status === \"seen\" ? \"Seen ✅\" : status === \"delivered\" ? \"Delivered ✔️\" : \"Sent\"}\r\n           </div>\r\n         )}\r\n       </div>\r\n"
                },
                {
                    "date": 1752337678800,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,8 +83,9 @@\n                 className=\"text-black px-2 py-1 rounded text-sm border border-gray-300 focus:outline-none focus:ring focus:ring-blue-500\"\r\n                 value={editedContent}\r\n                 onChange={(e) => setEditedContent(e.target.value)}\r\n                 autoFocus\r\n+                placeholder=\"Edit your message\"\r\n               />\r\n               <div className=\"flex gap-2 justify-end text-xs mt-1\">\r\n                 <button onClick={handleEditSubmit} className=\"text-green-600 hover:underline\">Save</button>\r\n                 <button onClick={() => { setEditedContent(content); setIsEditing(false); }} className=\"text-red-500 hover:underline\">Cancel</button>\r\n"
                },
                {
                    "date": 1752340479962,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,12 @@\n   onEdit?: (newContent: string) => void;\r\n   onReact?: (reaction: string) => void;\r\n }\r\n \r\n-const topEmojis = [\"😂\", \"❤️\", \"🔥\", \"👍\", \"😭\", \"😍\", \"😊\", \"😒\", \"😎\", \"🤔\", \"🙌\", \"🥺\", \"🤯\", \"🎉\", \"💀\", \"😩\", \"😡\", \"🥵\", \"😇\", \"💖\"];\r\n+const topEmojis = [\r\n+  \"😂\", \"❤️\", \"🔥\", \"👍\", \"😭\", \"😍\", \"😊\", \"😒\", \"😎\", \"🤔\",\r\n+  \"🙌\", \"🥺\", \"🤯\", \"🎉\", \"💀\", \"😩\", \"😡\", \"🥵\", \"😇\", \"💖\"\r\n+];\r\n \r\n export default function Message({\r\n   sender,\r\n   content,\r\n@@ -48,21 +51,37 @@\n \r\n   const renderMedia = () => {\r\n     switch (type) {\r\n       case \"image\":\r\n-        return <img src={content} alt=\"Image\" className=\"rounded max-w-xs mt-2 object-cover border border-gray-300 dark:border-gray-600\" />;\r\n+        return (\r\n+          <img\r\n+            src={content}\r\n+            alt=\"Image\"\r\n+            className=\"rounded max-w-xs mt-2 object-cover border border-gray-300 dark:border-gray-600\"\r\n+          />\r\n+        );\r\n       case \"audio\":\r\n         return <audio controls src={content} className=\"mt-2 w-full\" />;\r\n       case \"video\":\r\n-        return <video controls src={content} className=\"mt-2 w-full rounded max-h-64 object-cover\" />;\r\n+        return (\r\n+          <video\r\n+            controls\r\n+            src={content}\r\n+            className=\"mt-2 w-full rounded max-h-64 object-cover\"\r\n+          />\r\n+        );\r\n       default:\r\n         return <p className=\"whitespace-pre-wrap break-words\">{content}</p>;\r\n     }\r\n   };\r\n \r\n   return (\r\n-    <div className={`w-full px-2 py-1 flex ${isSender ? \"justify-end\" : \"justify-start\"}`}>\r\n-      <div className={`flex flex-col gap-1 ${isSender ? \"items-end\" : \"items-start\"} max-w-[85%] sm:max-w-[75%] md:max-w-[60%] lg:max-w-[50%]`}>\r\n+    <div className=\"w-full h-1/2 px-2 py-1 flex overflow-hidden\">\r\n+      <div\r\n+        className={`flex flex-col gap-1 ${\r\n+          isSender ? \"items-end ml-auto\" : \"items-start mr-auto\"\r\n+        } w-full max-w-[85%] sm:max-w-[75%] md:max-w-[60%] lg:max-w-[50%]`}\r\n+      >\r\n         {/* Sender & Timestamp */}\r\n         <div className=\"text-xs text-neutral-500 dark:text-neutral-400 mb-1\">\r\n           {isSender ? \"You\" : \"Stranger\"} • {time}\r\n         </div>\r\n@@ -86,10 +105,23 @@\n                 autoFocus\r\n                 placeholder=\"Edit your message\"\r\n               />\r\n               <div className=\"flex gap-2 justify-end text-xs mt-1\">\r\n-                <button onClick={handleEditSubmit} className=\"text-green-600 hover:underline\">Save</button>\r\n-                <button onClick={() => { setEditedContent(content); setIsEditing(false); }} className=\"text-red-500 hover:underline\">Cancel</button>\r\n+                <button\r\n+                  onClick={handleEditSubmit}\r\n+                  className=\"text-green-600 hover:underline\"\r\n+                >\r\n+                  Save\r\n+                </button>\r\n+                <button\r\n+                  onClick={() => {\r\n+                    setEditedContent(content);\r\n+                    setIsEditing(false);\r\n+                  }}\r\n+                  className=\"text-red-500 hover:underline\"\r\n+                >\r\n+                  Cancel\r\n+                </button>\r\n               </div>\r\n             </div>\r\n           ) : (\r\n             <>\r\n@@ -108,13 +140,30 @@\n \r\n           {/* Action Buttons */}\r\n           {!isEditing && (\r\n             <div\r\n-              className={`absolute top-1 ${isSender ? \"right-1 text-white\" : \"left-1 text-black dark:text-white\"} hidden group-hover:flex gap-1 text-sm z-10`}\r\n+              className={`absolute top-1 ${\r\n+                isSender ? \"right-1 text-white\" : \"left-1 text-black dark:text-white\"\r\n+              } hidden group-hover:flex gap-1 text-sm z-10`}\r\n             >\r\n-              {isSender && onEdit && <button onClick={() => setIsEditing(true)} title=\"Edit\">✏️</button>}\r\n-              {isSender && onDelete && <button onClick={onDelete} title=\"Delete\">🗑️</button>}\r\n-              {onReact && <button onClick={() => setShowReactions((s) => !s)} title=\"React\">😊</button>}\r\n+              {isSender && onEdit && (\r\n+                <button onClick={() => setIsEditing(true)} title=\"Edit\">\r\n+                  ✏️\r\n+                </button>\r\n+              )}\r\n+              {isSender && onDelete && (\r\n+                <button onClick={onDelete} title=\"Delete\">\r\n+                  🗑️\r\n+                </button>\r\n+              )}\r\n+              {onReact && (\r\n+                <button\r\n+                  onClick={() => setShowReactions((s) => !s)}\r\n+                  title=\"React\"\r\n+                >\r\n+                  😊\r\n+                </button>\r\n+              )}\r\n             </div>\r\n           )}\r\n \r\n           {/* Emoji Picker */}\r\n@@ -142,9 +191,13 @@\n \r\n         {/* Message Status */}\r\n         {isSender && status && (\r\n           <div className=\"text-[10px] text-neutral-400 mt-0.5\">\r\n-            {status === \"seen\" ? \"Seen ✅\" : status === \"delivered\" ? \"Delivered ✔️\" : \"Sent\"}\r\n+            {status === \"seen\"\r\n+              ? \"Seen ✅\"\r\n+              : status === \"delivered\"\r\n+              ? \"Delivered ✔️\"\r\n+              : \"Sent\"}\r\n           </div>\r\n         )}\r\n       </div>\r\n     </div>\r\n"
                },
                {
                    "date": 1752418404287,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,12 +14,9 @@\n   onEdit?: (newContent: string) => void;\r\n   onReact?: (reaction: string) => void;\r\n }\r\n \r\n-const topEmojis = [\r\n-  \"😂\", \"❤️\", \"🔥\", \"👍\", \"😭\", \"😍\", \"😊\", \"😒\", \"😎\", \"🤔\",\r\n-  \"🙌\", \"🥺\", \"🤯\", \"🎉\", \"💀\", \"😩\", \"😡\", \"🥵\", \"😇\", \"💖\"\r\n-];\r\n+const topEmojis = [\"😂\", \"❤️\", \"🔥\", \"👍\", \"😍\", \"😭\"]; // only top 6\r\n \r\n export default function Message({\r\n   sender,\r\n   content,\r\n@@ -74,28 +71,27 @@\n     }\r\n   };\r\n \r\n   return (\r\n-    <div className=\"w-full h-1/2 px-2 py-1 flex overflow-hidden\">\r\n+    <div className=\"w-full px-3 py-2 flex\">\r\n       <div\r\n         className={`flex flex-col gap-1 ${\r\n           isSender ? \"items-end ml-auto\" : \"items-start mr-auto\"\r\n         } w-full max-w-[85%] sm:max-w-[75%] md:max-w-[60%] lg:max-w-[50%]`}\r\n       >\r\n-        {/* Sender & Timestamp */}\r\n+        {/* Sender & Time */}\r\n         <div className=\"text-xs text-neutral-500 dark:text-neutral-400 mb-1\">\r\n           {isSender ? \"You\" : \"Stranger\"} • {time}\r\n         </div>\r\n \r\n-        {/* Message Bubble */}\r\n+        {/* Message bubble */}\r\n         <div\r\n-          className={`relative group px-4 py-2 rounded-lg text-sm shadow-md ${\r\n+          className={`relative group px-4 py-2 rounded-lg text-sm shadow-md transition-all ${\r\n             isSender\r\n               ? \"bg-blue-600 text-white rounded-br-none\"\r\n               : \"bg-neutral-200 dark:bg-neutral-700 text-neutral-900 dark:text-neutral-100 rounded-bl-none\"\r\n           }`}\r\n         >\r\n-          {/* Content or Editor */}\r\n           {isEditing ? (\r\n             <div className=\"flex flex-col gap-1\">\r\n               <input\r\n                 type=\"text\"\r\n@@ -137,9 +133,9 @@\n               )}\r\n             </>\r\n           )}\r\n \r\n-          {/* Action Buttons */}\r\n+          {/* Action buttons (on hover) */}\r\n           {!isEditing && (\r\n             <div\r\n               className={`absolute top-1 ${\r\n                 isSender ? \"right-1 text-white\" : \"left-1 text-black dark:text-white\"\r\n@@ -168,9 +164,9 @@\n \r\n           {/* Emoji Picker */}\r\n           {showReactions && (\r\n             <div\r\n-              className={`absolute top-full mt-2 z-50 bg-white dark:bg-neutral-800 p-2 border rounded shadow flex flex-wrap gap-1 max-w-xs ${\r\n+              className={`absolute top-full mt-2 z-50 bg-white dark:bg-neutral-800 p-2 border rounded shadow flex flex-wrap gap-2 ${\r\n                 isSender ? \"right-0\" : \"left-0\"\r\n               }`}\r\n             >\r\n               {topEmojis.map((emoji) => (\r\n"
                },
                {
                    "date": 1752423191936,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n   onEdit?: (newContent: string) => void;\r\n   onReact?: (reaction: string) => void;\r\n }\r\n \r\n-const topEmojis = [\"😂\", \"❤️\", \"🔥\", \"👍\", \"😍\", \"😭\"]; // only top 6\r\n+const topEmojis = [\"😂\", \"❤️\", \"🔥\", \"👍\", \"😍\", \"😭\"];\r\n \r\n export default function Message({\r\n   sender,\r\n   content,\r\n@@ -52,9 +52,9 @@\n         return (\r\n           <img\r\n             src={content}\r\n             alt=\"Image\"\r\n-            className=\"rounded max-w-xs mt-2 object-cover border border-gray-300 dark:border-gray-600\"\r\n+            className=\"rounded-xl max-w-xs mt-2 border border-gray-300 dark:border-gray-600\"\r\n           />\r\n         );\r\n       case \"audio\":\r\n         return <audio controls src={content} className=\"mt-2 w-full\" />;\r\n@@ -62,18 +62,18 @@\n         return (\r\n           <video\r\n             controls\r\n             src={content}\r\n-            className=\"mt-2 w-full rounded max-h-64 object-cover\"\r\n+            className=\"mt-2 w-full rounded-lg max-h-64\"\r\n           />\r\n         );\r\n       default:\r\n         return <p className=\"whitespace-pre-wrap break-words\">{content}</p>;\r\n     }\r\n   };\r\n \r\n   return (\r\n-    <div className=\"w-full px-3 py-2 flex\">\r\n+    <div className=\"w-full px-4 py-3 flex\">\r\n       <div\r\n         className={`flex flex-col gap-1 ${\r\n           isSender ? \"items-end ml-auto\" : \"items-start mr-auto\"\r\n         } w-full max-w-[85%] sm:max-w-[75%] md:max-w-[60%] lg:max-w-[50%]`}\r\n@@ -84,25 +84,24 @@\n         </div>\r\n \r\n         {/* Message bubble */}\r\n         <div\r\n-          className={`relative group px-4 py-2 rounded-lg text-sm shadow-md transition-all ${\r\n+          className={`relative group px-4 py-2 rounded-2xl text-sm shadow-sm transition-all ${\r\n             isSender\r\n-              ? \"bg-blue-600 text-white rounded-br-none\"\r\n-              : \"bg-neutral-200 dark:bg-neutral-700 text-neutral-900 dark:text-neutral-100 rounded-bl-none\"\r\n+              ? \"bg-blue-600 text-white rounded-br-md\"\r\n+              : \"bg-neutral-100 dark:bg-neutral-700 text-neutral-900 dark:text-neutral-100 rounded-bl-md\"\r\n           }`}\r\n         >\r\n           {isEditing ? (\r\n             <div className=\"flex flex-col gap-1\">\r\n               <input\r\n                 type=\"text\"\r\n-                className=\"text-black px-2 py-1 rounded text-sm border border-gray-300 focus:outline-none focus:ring focus:ring-blue-500\"\r\n+                className=\"text-black px-3 py-2 rounded-md text-sm border border-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                 value={editedContent}\r\n                 onChange={(e) => setEditedContent(e.target.value)}\r\n                 autoFocus\r\n-                placeholder=\"Edit your message\"\r\n               />\r\n-              <div className=\"flex gap-2 justify-end text-xs mt-1\">\r\n+              <div className=\"flex justify-end gap-3 mt-2 text-xs\">\r\n                 <button\r\n                   onClick={handleEditSubmit}\r\n                   className=\"text-green-600 hover:underline\"\r\n                 >\r\n@@ -124,22 +123,22 @@\n               {type === \"text\" ? <span>{content}</span> : renderMedia()}\r\n \r\n               {/* Reactions */}\r\n               {Object.values(reactions).length > 0 && (\r\n-                <div className=\"mt-2 flex gap-1 text-lg flex-wrap\">\r\n+                <div className=\"mt-2 flex gap-1 text-xl flex-wrap\">\r\n                   {Object.values(reactions).map((emoji, idx) => (\r\n                     <span key={idx}>{emoji}</span>\r\n                   ))}\r\n                 </div>\r\n               )}\r\n             </>\r\n           )}\r\n \r\n-          {/* Action buttons (on hover) */}\r\n+          {/* Hover Buttons */}\r\n           {!isEditing && (\r\n             <div\r\n               className={`absolute top-1 ${\r\n-                isSender ? \"right-1 text-white\" : \"left-1 text-black dark:text-white\"\r\n+                isSender ? \"right-2 text-white\" : \"left-2 text-black dark:text-white\"\r\n               } hidden group-hover:flex gap-1 text-sm z-10`}\r\n             >\r\n               {isSender && onEdit && (\r\n                 <button onClick={() => setIsEditing(true)} title=\"Edit\">\r\n@@ -161,12 +160,12 @@\n               )}\r\n             </div>\r\n           )}\r\n \r\n-          {/* Emoji Picker */}\r\n+          {/* Emoji Reaction Picker */}\r\n           {showReactions && (\r\n             <div\r\n-              className={`absolute top-full mt-2 z-50 bg-white dark:bg-neutral-800 p-2 border rounded shadow flex flex-wrap gap-2 ${\r\n+              className={`absolute top-full mt-2 z-50 bg-white dark:bg-neutral-800 p-2 border border-neutral-300 dark:border-neutral-700 rounded-lg shadow-lg flex flex-wrap gap-2 ${\r\n                 isSender ? \"right-0\" : \"left-0\"\r\n               }`}\r\n             >\r\n               {topEmojis.map((emoji) => (\r\n@@ -175,9 +174,9 @@\n                   onClick={() => {\r\n                     onReact?.(emoji);\r\n                     setShowReactions(false);\r\n                   }}\r\n-                  className=\"text-xl hover:scale-110 transition-transform\"\r\n+                  className=\"text-xl hover:scale-125 transition-transform duration-150\"\r\n                 >\r\n                   {emoji}\r\n                 </button>\r\n               ))}\r\n"
                },
                {
                    "date": 1752423227356,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -98,8 +98,10 @@\n                 className=\"text-black px-3 py-2 rounded-md text-sm border border-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                 value={editedContent}\r\n                 onChange={(e) => setEditedContent(e.target.value)}\r\n                 autoFocus\r\n+                placeholder=\"Edit your message\"\r\n+                title=\"Edit message\"\r\n               />\r\n               <div className=\"flex justify-end gap-3 mt-2 text-xs\">\r\n                 <button\r\n                   onClick={handleEditSubmit}\r\n"
                },
                {
                    "date": 1752424809464,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,9 +84,9 @@\n         </div>\r\n \r\n         {/* Message bubble */}\r\n         <div\r\n-          className={`relative group px-4 py-2 rounded-2xl text-sm shadow-sm transition-all ${\r\n+          className={`relative group px-4 py-2 rounded-2xl text-sm shadow-sm transition-all max-h-72 overflow-y-auto scrollbar-thin scrollbar-thumb-gray-400 dark:scrollbar-thumb-neutral-600 scrollbar-track-transparent ${\r\n             isSender\r\n               ? \"bg-blue-600 text-white rounded-br-md\"\r\n               : \"bg-neutral-100 dark:bg-neutral-700 text-neutral-900 dark:text-neutral-100 rounded-bl-md\"\r\n           }`}\r\n"
                },
                {
                    "date": 1752425966448,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,9 +84,9 @@\n         </div>\r\n \r\n         {/* Message bubble */}\r\n         <div\r\n-          className={`relative group px-4 py-2 rounded-2xl text-sm shadow-sm transition-all max-h-72 overflow-y-auto scrollbar-thin scrollbar-thumb-gray-400 dark:scrollbar-thumb-neutral-600 scrollbar-track-transparent ${\r\n+          className={`relative group px-4 py-2 rounded-2xl text-sm shadow-sm transition-all overflow-y-scroll scrollbar-thin scrollbar-thumb-gray-400 dark:scrollbar-thumb-neutral-600 scrollbar-track-transparent ${\r\n             isSender\r\n               ? \"bg-blue-600 text-white rounded-br-md\"\r\n               : \"bg-neutral-100 dark:bg-neutral-700 text-neutral-900 dark:text-neutral-100 rounded-bl-md\"\r\n           }`}\r\n"
                },
                {
                    "date": 1752426099053,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,9 +84,9 @@\n         </div>\r\n \r\n         {/* Message bubble */}\r\n         <div\r\n-          className={`relative group px-4 py-2 rounded-2xl text-sm shadow-sm transition-all overflow-y-scroll scrollbar-thin scrollbar-thumb-gray-400 dark:scrollbar-thumb-neutral-600 scrollbar-track-transparent ${\r\n+          className={`relative group px-4 py-2 rounded-2xl text-sm shadow-sm transition-all max-h-72 overflow-y-auto scrollbar-thin scrollbar-thumb-gray-400 dark:scrollbar-thumb-neutral-600 scrollbar-track-transparent ${\r\n             isSender\r\n               ? \"bg-blue-600 text-white rounded-br-md\"\r\n               : \"bg-neutral-100 dark:bg-neutral-700 text-neutral-900 dark:text-neutral-100 rounded-bl-md\"\r\n           }`}\r\n"
                }
            ],
            "date": 1752230228087,
            "name": "Commit-0",
            "content": "\"use client\";\r\n\r\nimport React from \"react\";\r\n\r\ninterface MessageProps {\r\n  content: string;\r\n  sender: \"me\" | \"partner\";\r\n}\r\n\r\nexport default function Message({ content, sender }: MessageProps) {\r\n  return (\r\n    <div\r\n      className={`mb-2 px-4 py-2 rounded-lg text-sm max-w-xs break-words ${\r\n        sender === \"me\"\r\n          ? \"bg-blue-600 text-white self-end\"\r\n          : \"bg-neutral-200 dark:bg-neutral-700 text-neutral-900 dark:text-neutral-100 self-start\"\r\n      }`}\r\n    >\r\n      {content}\r\n    </div>\r\n  );\r\n}\r\n"
        }
    ]
}